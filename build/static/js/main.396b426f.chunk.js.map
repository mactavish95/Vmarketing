{"version":3,"sources":["config/api.js","services/VoiceService.js","screens/HomeScreen.js","components/VoiceAnalysis.js","services/locationService.js","components/LocationSuggestions.js","components/LocationAttachment.js","services/llmService.js","screens/ReviewGenerator.js","components/VoiceRecognition.js","components/ModelInfo.js","screens/VoiceReview.js","screens/VoiceTest.js","screens/ReviewHistory.js","components/Llma.js","components/Header.js","screens/CustomerServiceResponse.js","screens/ModelsInfo.js","screens/BlogIndex.js","screens/BlogPost.js","screens/BlogCreator.js","App.js","index.js"],"names":["apiConfig","development","baseURL","timeout","production","process","REACT_APP_API_URL","cleanAIResponse","response","cleaned","replace","trim","text","sentences","split","map","s","filter","length","structure","join","toLowerCase","type","includes","keyPoints","positiveAspects","negativeAspects","suggestions","questions","statements","topics","push","Set","extractTopicKeywords","totalSentences","analyzeEnhancedContentStructure","formatted","opening","find","concat","capitalizeFirst","slice","forEach","aspect","index","highlights","highlight","experienceDetails","detail","valueAspects","suggestion","conclusion","positiveCount","negativeCount","formatEnhancedReviewResponse","summary","findings","finding","sentimentSentences","sentiment","charAt","toUpperCase","some","topic","insight","rec","actionItems","item","impactSentences","impact","formatEnhancedAnalysisResponse","greeting","mainResponse","personalInsights","followUp","formatEnhancedConversationResponse","acknowledgment","problemAnalysis","analysis","solutions","solution","improvements","improvement","compensation","gesture","formatEnhancedCustomerServiceResponse","mainPoint","explanations","explanation","insights","applications","app","formatEnhancedGeneralResponse","formatForEnhancedDepthAndRelevance","str","constructor","this","analyzeVoice","transcript","apiKey","fetch","method","headers","body","JSON","stringify","ok","errorData","json","catch","Error","error","console","generateReview","reviewType","arguments","undefined","requestBody","log","url","_objectSpread","substring","status","data","review","getVoiceAnalysis","success","message","confidence","tone","wordCount","speakingPace","provider","HomeScreen","_jsxs","className","children","_jsx","Link","to","VoiceAnalysis","_ref","onGenerateReview","onSaveAnalysis","parentReviewType","isExpanded","setIsExpanded","useState","isGeneratingReview","setIsGeneratingReview","generatedReview","setGeneratedReview","setReviewType","useEffect","originalTranscript","onClick","title","handleSaveAnalysis","style","backgroundColor","getSentimentColor","width","getConfidenceColor","Math","round","point","_Fragment","value","onChange","e","target","async","stack","disabled","navigator","clipboard","writeText","LocationService","getCurrentLocation","options","finalOptions","enableHighAccuracy","maximumAge","Promise","resolve","reject","geolocation","getCurrentPosition","position","locationData","latitude","coords","longitude","accuracy","timestamp","Date","toISOString","address","errorMessage","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","getAddressFromCoordinates","display_name","warn","isSupported","getPermissionStatus","permissions","query","name","state","formatLocation","location","toFixed","calculateDistance","lat1","lon1","lat2","lon2","φ1","PI","φ2","Δφ","Δλ","a","sin","cos","atan2","sqrt","validateCoordinates","getLocationSuggestions","currentLocation","searchLocations","limit","encodeURIComponent","parseFloat","lat","lon","importance","LocationSuggestions","onLocationSelect","onClose","setSuggestions","setAnalysis","isLoading","setIsLoading","setError","searchQuery","setSearchQuery","searchResults","setSearchResults","isSearching","setIsSearching","result","_result$analysis","specificPlace","results","handleLocationSelect","getLocationIcon","locationMentioned","locationType","cityOrArea","color","description","keywords","keyword","idx","_suggestion$coordinat","_suggestion$coordinat2","coordinates","source","onSubmit","preventDefault","placeholder","LocationAttachment","onLocationChange","initialLocation","setLocation","permissionStatus","setPermissionStatus","showSuggestions","setShowSuggestions","then","updatedLocation","getPermissionStatusColor","getPermissionStatusText","toLocaleString","clearLocation","selectedLocation","REACT_APP_OPENAI_API_KEY","anthropicKey","REACT_APP_ANTHROPIC_API_KEY","useLocalFallback","analyzeVoiceInput","context","analyzeWithOpenAI","analyzeWithAnthropic","analyzeLocally","model","messages","role","content","temperature","max_tokens","parse","choices","words","positiveWords","negativeWords","word","min","detectTone","extractTopics","generateSuggestions","generateActionItems","actions","generateReviewFromVoice","rating","reviewText","formatReviewText","points","ReviewGenerator","reviewData","setReviewData","pros","cons","experience","isGenerating","setIsGenerating","isAnalyzing","setIsAnalyzing","showAnalysis","setShowAnalysis","setLocationData","ratingAutoAdjusted","setRatingAutoAdjusted","useHistory","modelInfo","setModelInfo","fetchModelInfo","res","reviewModel","models","m","useCase","handleInputChange","field","prev","updatedData","allContent","Boolean","suggestedRating","autoAdjustRating","analyzeReview","llmService","isGeneratedReview","createReview","reviewFormats","restaurant","openings","positive","negative","neutral","prosFormat","consFormat","experienceFormat","hotel","product","service","place","general","format","openingCategory","floor","random","prosText","prosFormats","selectedProsFormat","consText","consFormats","selectedConsFormat","expText","expFormats","selectedExpFormat","closings","enthusiastic","casual","professional","critical","balanced","closingCategory","availableClosings","selectedClosing","resetReview","max","background","borderRadius","padding","marginTop","backdropFilter","border","margin","fontSize","opacity","display","flexWrap","gap","strengths","strength","fontWeight","copyToClipboard","alert","analysisData","analysisRecord","id","now","existingAnalyses","localStorage","getItem","setItem","label","icon","star","rows","combinedContent","VoiceService","default","reviewHistory","newReview","itemName","category","isAIGenerated","unshift","setTimeout","VoiceRecognition","onTranscript","enableLLMEnhancement","isListening","setIsListening","setTranscript","interimTranscript","setInterimTranscript","setIsSupported","isInitialized","setIsInitialized","isMobile","setIsMobile","retryCount","setRetryCount","browserInfo","setBrowserInfo","showManualInput","setShowManualInput","manualText","setManualText","isEnhancing","setIsEnhancing","enhancedTranscript","setEnhancedTranscript","setApiKey","recognitionRef","useRef","timeoutRef","checkDeviceAndBrowser","userAgent","vendor","window","opera","isMobileDevice","test","browser","initializeSpeechRecognition","current","abort","clearTimeout","checkApiKey","storedApiKey","oldLength","newLength","oldKey","newKey","interval","setInterval","clearInterval","SpeechRecognition","webkitSpeechRecognition","mozSpeechRecognition","msSpeechRecognition","setupRecognition","recognition","continuous","interimResults","lang","maxAlternatives","onstart","stopListening","onresult","event","finalTranscript","i","resultIndex","resultTranscript","isFinal","newTranscript","processTranscript","onerror","onend","startListening","onaudiostart","onaudioend","onsoundstart","onsoundend","onspeechstart","onspeechend","start","stop","retryInitialization","toggleManualInput","enhanceTranscriptWithLLM","hasApiKey","hasTranscript","rawTranscript","transcriptLength","prompt","apiKeyLength","enhanced","original","debugLLMEnhancement","debugVoiceRecognition","displayText","isActive","handleToggleListening","textToCopy","originalText","document","err","clearTranscript","autoFocus","ModelInfo","loading","setLoading","alignItems","height","borderTop","animation","marginBottom","lineHeight","jsx","VoiceReview","setRating","savedReviews","setSavedReviews","inputTranscript","analysisResult","analysisWithTranscript","positiveKeywords","negativeKeywords","htmlFor","handleApiKeyChange","newApiKey","removeItem","href","rel","clearAll","reviewTypeParam","finalReviewType","hasLocation","apiKeyStart","existingReviews","updatedReviews","VoiceTest","testResults","setTestResults","React","_navigator$mediaDevic","info","platform","language","cookieEnabled","onLine","speechRecognition","mediaDevices","getUserMedia","addTestResult","toLocaleTimeString","Object","entries","key","stream","audio","getTracks","track","clearResults","ReviewHistory","reviews","setReviews","filteredReviews","setFilteredReviews","searchTerm","setSearchTerm","filterType","setFilterType","expandedReviews","setExpandedReviews","loadReviews","filterReviews","voiceReviews","formattedVoiceReviews","voiceReview","isVoiceReview","allReviews","sort","b","filtered","toggleReviewExpansion","reviewId","newSet","has","delete","add","movie","book","repeat","toLocaleDateString","year","month","day","hour","minute","copyReview","confirm","regularReviews","originalVoiceReviews","deleteReview","Llma","inputText","setInputText","setResponse","conversationHistory","setConversationHistory","callLlamaAPI","history","clearConversation","userMessage","aiMessage","Header","useLocation","isMenuOpen","setIsMenuOpen","closeMenu","toggleMenu","pathname","startsWith","CustomerServiceResponse","setReview","setSentiment","staffName","setStaffName","customerServiceModel","minHeight","fontFamily","maxWidth","boxShadow","overflow","textAlign","top","right","bottom","left","letterSpacing","textShadow","resize","transition","boxSizing","onFocus","borderColor","onBlur","required","option","cursor","minWidth","justifyContent","onMouseEnter","transform","onMouseLeave","flexDirection","whiteSpace","fontStyle","ModelsInfo","setModels","useCases","setUseCases","fetchModelsInfo","gridTemplateColumns","textTransform","maxTokens","BlogIndex","activeTab","setActiveTab","blogHistory","setBlogHistory","loadBlogHistory","filteredBlogs","blog","matchesSearch","restaurantName","matchesFilter","restaurantType","getWordCount","blogPosts","slug","excerpt","readTime","date","image","flex","post","textDecoration","reduce","total","blogPost","size","copyBlog","updatedHistory","deleteBlog","maxHeight","pointerEvents","cafe","pizzeria","bakery","bar","elegant","rustic","modern","overview","BlogPost","useParams","marginRight","BlogCreator","blogData","setBlogData","cuisine","targetAudience","specialFeatures","generatedBlog","setGeneratedBlog","blogModel","resetForm","audience","newBlog","App","Router","Switch","Route","path","exact","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.396b426f.chunk.js","sourcesContent":["// API Configuration\nconst API_CONFIG = {\n  // Development environment\n  development: {\n    baseURL: 'http://localhost:3001/api',\n    timeout: 30000\n  },\n  // Production environment (Render backend)\n  production: {\n    baseURL: process.env.REACT_APP_API_URL || 'https://your-render-app.onrender.com/api',\n    timeout: 30000\n  }\n};\n\n// Get current environment\nconst environment = process.env.NODE_ENV || 'development';\n\n// Export the appropriate config\nexport const apiConfig = API_CONFIG[environment];\n\n// Helper function to get full API URL\nexport const getApiUrl = (endpoint) => {\n  return `${apiConfig.baseURL}${endpoint}`;\n};\n\n// Default export\nexport default apiConfig; ","// Advanced function to clean and format AI responses for maximum clarity and focus\nfunction cleanAIResponse(response) {\n    if (!response || typeof response !== 'string') {\n        return response;\n    }\n    \n    // Remove common AI response artifacts\n    let cleaned = response\n        // Remove markdown code blocks\n        .replace(/```[\\s\\S]*?```/g, '')\n        // Remove asterisks used for emphasis\n        .replace(/\\*\\*(.*?)\\*\\*/g, '$1')\n        .replace(/\\*(.*?)\\*/g, '$1')\n        // Remove backticks\n        .replace(/`(.*?)`/g, '$1')\n        // Remove excessive newlines (more than 2 consecutive)\n        .replace(/\\n{3,}/g, '\\n\\n')\n        // Remove leading/trailing whitespace\n        .trim()\n        // Remove common AI prefixes\n        .replace(/^(Here's|Here is|I'll|I will|Let me|Based on|According to|As an AI|As a customer service representative|As a helpful assistant)[,\\s]*/gi, '')\n        // Remove common AI suffixes\n        .replace(/(I hope this helps|Let me know if you need anything else|Feel free to ask|Is there anything else I can help you with)[.!]*$/gi, '')\n        // Remove excessive punctuation\n        .replace(/[!]{2,}/g, '!')\n        .replace(/[?]{2,}/g, '?')\n        .replace(/[.]{2,}/g, '.')\n        // Remove emoji clusters (keep single emojis)\n        .replace(/([^\\s])\\1{2,}/g, '$1')\n        // Remove excessive spaces\n        .replace(/\\s{2,}/g, ' ')\n        // Remove quotes around the entire response\n        .replace(/^[\"']|[\"']$/g, '')\n        // Remove bullet points and numbering\n        .replace(/^[\\s]*[-*•]\\s*/gm, '')\n        .replace(/^[\\s]*\\d+[.)]\\s*/gm, '')\n        // Remove section headers\n        .replace(/^[A-Z][A-Z\\s]+:$/gm, '')\n        // Remove empty lines at start and end\n        .replace(/^\\s*\\n/, '')\n        .replace(/\\n\\s*$/, '');\n    \n    // Apply enhanced formatting for longer, more relevant responses\n    cleaned = formatForEnhancedDepthAndRelevance(cleaned);\n    \n    return cleaned;\n}\n\n// Enhanced formatting function for longer, more comprehensive, and topic-relevant responses\nfunction formatForEnhancedDepthAndRelevance(text) {\n    if (!text || typeof text !== 'string') {\n        return text;\n    }\n    \n    // Split into sentences and clean them\n    const sentences = text.split(/[.!?]+/)\n        .map(s => s.trim())\n        .filter(s => s.length > 0);\n    \n    // Enhanced content structure analysis\n    const structure = analyzeEnhancedContentStructure(sentences);\n    \n    // Format based on content type with enhanced depth\n    if (structure.type === 'review') {\n        return formatEnhancedReviewResponse(sentences, structure);\n    } else if (structure.type === 'analysis') {\n        return formatEnhancedAnalysisResponse(sentences, structure);\n    } else if (structure.type === 'conversation') {\n        return formatEnhancedConversationResponse(sentences, structure);\n    } else if (structure.type === 'customer_service') {\n        return formatEnhancedCustomerServiceResponse(sentences, structure);\n    } else {\n        return formatEnhancedGeneralResponse(sentences, structure);\n    }\n}\n\n// Enhanced content structure analysis for better topic relevance\nfunction analyzeEnhancedContentStructure(sentences) {\n    const text = sentences.join(' ').toLowerCase();\n    \n    // Enhanced content type detection\n    let type = 'general';\n    if (text.includes('rating') || text.includes('stars') || text.includes('recommend') || text.includes('experience') || text.includes('food') || text.includes('service') || text.includes('quality')) {\n        type = 'review';\n    } else if (text.includes('analysis') || text.includes('sentiment') || text.includes('key points') || text.includes('summary') || text.includes('findings') || text.includes('insights')) {\n        type = 'analysis';\n    } else if (text.includes('hello') || text.includes('hi') || text.includes('how are you') || text.includes('chat') || text.includes('conversation')) {\n        type = 'conversation';\n    } else if (text.includes('customer') || text.includes('service') || text.includes('apologize') || text.includes('resolve') || text.includes('issue') || text.includes('problem')) {\n        type = 'customer_service';\n    }\n    \n    // Enhanced key elements extraction\n    const keyPoints = sentences.filter(s => \n        s.toLowerCase().includes('important') || \n        s.toLowerCase().includes('key') || \n        s.toLowerCase().includes('main') ||\n        s.toLowerCase().includes('primary') ||\n        s.toLowerCase().includes('essential') ||\n        s.toLowerCase().includes('critical')\n    );\n    \n    const positiveAspects = sentences.filter(s => \n        s.toLowerCase().includes('like') || \n        s.toLowerCase().includes('love') || \n        s.toLowerCase().includes('good') ||\n        s.toLowerCase().includes('great') ||\n        s.toLowerCase().includes('amazing') ||\n        s.toLowerCase().includes('excellent') ||\n        s.toLowerCase().includes('outstanding') ||\n        s.toLowerCase().includes('fantastic')\n    );\n    \n    const negativeAspects = sentences.filter(s => \n        s.toLowerCase().includes('disappointing') ||\n        s.toLowerCase().includes('bad') ||\n        s.toLowerCase().includes('poor') ||\n        s.toLowerCase().includes('terrible') ||\n        s.toLowerCase().includes('awful') ||\n        s.toLowerCase().includes('horrible') ||\n        s.toLowerCase().includes('unacceptable')\n    );\n    \n    const suggestions = sentences.filter(s => \n        s.toLowerCase().includes('suggest') || \n        s.toLowerCase().includes('recommend') || \n        s.toLowerCase().includes('could') ||\n        s.toLowerCase().includes('should') ||\n        s.toLowerCase().includes('might') ||\n        s.toLowerCase().includes('consider')\n    );\n    \n    const questions = sentences.filter(s => s.includes('?'));\n    const statements = sentences.filter(s => !s.includes('?'));\n    \n    // Extract topic-specific keywords\n    const topics = extractTopicKeywords(text);\n    \n    return {\n        type,\n        keyPoints,\n        positiveAspects,\n        negativeAspects,\n        suggestions,\n        questions,\n        statements,\n        topics,\n        totalSentences: sentences.length\n    };\n}\n\n// Extract topic-specific keywords for better relevance\nfunction extractTopicKeywords(text) {\n    const topics = [];\n    \n    // Restaurant-related topics\n    if (text.includes('food') || text.includes('restaurant') || text.includes('dining') || text.includes('meal')) {\n        topics.push('restaurant', 'food', 'dining');\n    }\n    \n    // Hotel-related topics\n    if (text.includes('hotel') || text.includes('accommodation') || text.includes('room') || text.includes('stay')) {\n        topics.push('hotel', 'accommodation', 'travel');\n    }\n    \n    // Product-related topics\n    if (text.includes('product') || text.includes('item') || text.includes('purchase') || text.includes('buy')) {\n        topics.push('product', 'shopping', 'consumer');\n    }\n    \n    // Service-related topics\n    if (text.includes('service') || text.includes('support') || text.includes('help') || text.includes('assistance')) {\n        topics.push('service', 'support', 'customer care');\n    }\n    \n    // Technology-related topics\n    if (text.includes('app') || text.includes('software') || text.includes('technology') || text.includes('digital')) {\n        topics.push('technology', 'software', 'digital');\n    }\n    \n    return [...new Set(topics)]; // Remove duplicates\n}\n\n// Enhanced review response with comprehensive details\nfunction formatEnhancedReviewResponse(sentences, structure) {\n    let formatted = '';\n    \n    // Comprehensive opening with context\n    const opening = sentences.find(s => \n        s.toLowerCase().includes('experience') || \n        s.toLowerCase().includes('visit') || \n        s.toLowerCase().includes('tried') ||\n        s.toLowerCase().includes('went') ||\n        s.toLowerCase().includes('recently') ||\n        s.toLowerCase().includes('last')\n    );\n    \n    if (opening) {\n        formatted += `📝 ${capitalizeFirst(opening)}.\\n\\n`;\n    }\n    \n    // Detailed positive aspects section\n    if (structure.positiveAspects.length > 0) {\n        formatted += '✨ What I Really Enjoyed:\\n';\n        structure.positiveAspects.slice(0, 4).forEach((aspect, index) => {\n            formatted += `   • ${capitalizeFirst(aspect)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Detailed negative aspects section\n    if (structure.negativeAspects.length > 0) {\n        formatted += '⚠️ Areas for Improvement:\\n';\n        structure.negativeAspects.slice(0, 3).forEach((aspect, index) => {\n            formatted += `   • ${capitalizeFirst(aspect)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Key highlights and memorable moments\n    const highlights = sentences.filter(s => \n        s.toLowerCase().includes('highlight') || \n        s.toLowerCase().includes('memorable') || \n        s.toLowerCase().includes('standout') ||\n        s.toLowerCase().includes('impressive') ||\n        s.toLowerCase().includes('notable')\n    );\n    \n    if (highlights.length > 0) {\n        formatted += '🌟 Memorable Highlights:\\n';\n        highlights.slice(0, 3).forEach((highlight, index) => {\n            formatted += `   ${index + 1}. ${capitalizeFirst(highlight)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Detailed experience description\n    const experienceDetails = sentences.filter(s => \n        s.toLowerCase().includes('atmosphere') || \n        s.toLowerCase().includes('ambiance') || \n        s.toLowerCase().includes('environment') ||\n        s.toLowerCase().includes('setting') ||\n        s.toLowerCase().includes('vibe') ||\n        s.toLowerCase().includes('feel')\n    );\n    \n    if (experienceDetails.length > 0) {\n        formatted += '🏠 Atmosphere & Environment:\\n';\n        experienceDetails.slice(0, 2).forEach(detail => {\n            formatted += `   ${capitalizeFirst(detail)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Value and pricing considerations\n    const valueAspects = sentences.filter(s => \n        s.toLowerCase().includes('price') || \n        s.toLowerCase().includes('cost') || \n        s.toLowerCase().includes('value') ||\n        s.toLowerCase().includes('worth') ||\n        s.toLowerCase().includes('expensive') ||\n        s.toLowerCase().includes('affordable')\n    );\n    \n    if (valueAspects.length > 0) {\n        formatted += '💰 Value & Pricing:\\n';\n        valueAspects.slice(0, 2).forEach(aspect => {\n            formatted += `   ${capitalizeFirst(aspect)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Recommendations and suggestions\n    if (structure.suggestions.length > 0) {\n        formatted += '💡 Recommendations:\\n';\n        structure.suggestions.slice(0, 3).forEach((suggestion, index) => {\n            formatted += `   • ${capitalizeFirst(suggestion)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Comprehensive conclusion\n    const conclusion = sentences.find(s => \n        s.toLowerCase().includes('recommend') || \n        s.toLowerCase().includes('return') || \n        s.toLowerCase().includes('worth') ||\n        s.toLowerCase().includes('overall') ||\n        s.toLowerCase().includes('conclusion') ||\n        s.toLowerCase().includes('final')\n    );\n    \n    if (conclusion) {\n        formatted += `🎯 ${capitalizeFirst(conclusion)}.`;\n    } else {\n        // Generate a comprehensive conclusion based on sentiment\n        const positiveCount = structure.positiveAspects.length;\n        const negativeCount = structure.negativeAspects.length;\n        \n        if (positiveCount > negativeCount) {\n            formatted += `🎯 Overall, this was a positive experience that I would recommend to others.`;\n        } else if (negativeCount > positiveCount) {\n            formatted += `🎯 While there were some issues, there's potential for improvement with the right changes.`;\n        } else {\n            formatted += `🎯 This was a mixed experience with both positive and negative aspects to consider.`;\n        }\n    }\n    \n    return formatted.trim();\n}\n\n// Enhanced analysis response with detailed insights\nfunction formatEnhancedAnalysisResponse(sentences, structure) {\n    let formatted = '';\n    \n    // Executive summary\n    const summary = sentences.find(s => \n        s.toLowerCase().includes('overall') || \n        s.toLowerCase().includes('summary') || \n        s.toLowerCase().includes('in conclusion') ||\n        s.toLowerCase().includes('main takeaway')\n    );\n    \n    if (summary) {\n        formatted += `📊 Executive Summary:\\n${capitalizeFirst(summary)}.\\n\\n`;\n    }\n    \n    // Detailed key findings with context\n    const findings = sentences.filter(s => \n        s.toLowerCase().includes('found') || \n        s.toLowerCase().includes('discovered') || \n        s.toLowerCase().includes('identified') ||\n        s.toLowerCase().includes('detected') ||\n        s.toLowerCase().includes('observed') ||\n        s.toLowerCase().includes('noticed')\n    );\n    \n    if (findings.length > 0) {\n        formatted += '🔍 Detailed Findings:\\n';\n        findings.slice(0, 5).forEach((finding, index) => {\n            formatted += `   ${index + 1}. ${capitalizeFirst(finding)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Sentiment analysis breakdown\n    const sentimentSentences = sentences.filter(s => \n        s.toLowerCase().includes('positive') || \n        s.toLowerCase().includes('negative') || \n        s.toLowerCase().includes('neutral') ||\n        s.toLowerCase().includes('sentiment') ||\n        s.toLowerCase().includes('emotion') ||\n        s.toLowerCase().includes('tone')\n    );\n    \n    if (sentimentSentences.length > 0) {\n        formatted += '😊 Sentiment Analysis:\\n';\n        sentimentSentences.slice(0, 3).forEach((sentiment, index) => {\n            formatted += `   • ${capitalizeFirst(sentiment)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Topic-specific insights\n    if (structure.topics.length > 0) {\n        formatted += `📋 ${structure.topics[0].charAt(0).toUpperCase() + structure.topics[0].slice(1)}-Specific Insights:\\n`;\n        const topicSentences = sentences.filter(s => \n            structure.topics.some(topic => s.toLowerCase().includes(topic))\n        );\n        topicSentences.slice(0, 3).forEach((insight, index) => {\n            formatted += `   ${index + 1}. ${capitalizeFirst(insight)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Strategic recommendations\n    if (structure.suggestions.length > 0) {\n        formatted += '💡 Strategic Recommendations:\\n';\n        structure.suggestions.slice(0, 4).forEach((rec, index) => {\n            formatted += `   • ${capitalizeFirst(rec)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Action items and next steps\n    const actionItems = sentences.filter(s => \n        s.toLowerCase().includes('action') || \n        s.toLowerCase().includes('next') || \n        s.toLowerCase().includes('step') ||\n        s.toLowerCase().includes('plan') ||\n        s.toLowerCase().includes('implement') ||\n        s.toLowerCase().includes('improve')\n    );\n    \n    if (actionItems.length > 0) {\n        formatted += '🚀 Action Items & Next Steps:\\n';\n        actionItems.slice(0, 4).forEach((item, index) => {\n            formatted += `   ${index + 1}. ${capitalizeFirst(item)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Impact assessment\n    const impactSentences = sentences.filter(s => \n        s.toLowerCase().includes('impact') || \n        s.toLowerCase().includes('effect') || \n        s.toLowerCase().includes('result') ||\n        s.toLowerCase().includes('outcome') ||\n        s.toLowerCase().includes('consequence')\n    );\n    \n    if (impactSentences.length > 0) {\n        formatted += '📈 Impact Assessment:\\n';\n        impactSentences.slice(0, 2).forEach((impact, index) => {\n            formatted += `   • ${capitalizeFirst(impact)}.\\n`;\n        });\n    }\n    \n    return formatted.trim();\n}\n\n// Enhanced conversation response with more depth\nfunction formatEnhancedConversationResponse(sentences, structure) {\n    let formatted = '';\n    \n    // Warm greeting or acknowledgment\n    const greeting = sentences.find(s => \n        s.toLowerCase().includes('hello') || \n        s.toLowerCase().includes('hi') || \n        s.toLowerCase().includes('hey') ||\n        s.toLowerCase().includes('thanks') ||\n        s.toLowerCase().includes('thank you') ||\n        s.toLowerCase().includes('appreciate')\n    );\n    \n    if (greeting) {\n        formatted += `${capitalizeFirst(greeting)}.\\n\\n`;\n    }\n    \n    // Main response with expanded context\n    const mainResponse = sentences.filter(s => \n        !greeting?.includes(s) &&\n        s.length > 10\n    );\n    \n    if (mainResponse.length > 0) {\n        formatted += '💭 My Thoughts:\\n';\n        mainResponse.slice(0, 4).forEach((response, index) => {\n            formatted += `   ${capitalizeFirst(response)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Personal insights or experiences\n    const personalInsights = sentences.filter(s => \n        s.toLowerCase().includes('think') || \n        s.toLowerCase().includes('believe') || \n        s.toLowerCase().includes('feel') ||\n        s.toLowerCase().includes('experience') ||\n        s.toLowerCase().includes('opinion') ||\n        s.toLowerCase().includes('view')\n    );\n    \n    if (personalInsights.length > 0) {\n        formatted += '🤔 Personal Perspective:\\n';\n        personalInsights.slice(0, 2).forEach((insight, index) => {\n            formatted += `   • ${capitalizeFirst(insight)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Engaging follow-up questions\n    const followUp = sentences.find(s => \n        s.toLowerCase().includes('what about you') || \n        s.toLowerCase().includes('how about') || \n        s.toLowerCase().includes('what do you think') ||\n        s.toLowerCase().includes('any thoughts') ||\n        s.toLowerCase().includes('your experience') ||\n        s.toLowerCase().includes('your opinion')\n    );\n    \n    if (followUp) {\n        formatted += `💬 ${capitalizeFirst(followUp)}`;\n    } else {\n        // Generate engaging follow-up\n        formatted += `💬 What are your thoughts on this topic? I'd love to hear your perspective!`;\n    }\n    \n    return formatted.trim();\n}\n\n// Enhanced customer service response with comprehensive approach\nfunction formatEnhancedCustomerServiceResponse(sentences, structure) {\n    let formatted = '';\n    \n    // Empathetic acknowledgment\n    const acknowledgment = sentences.find(s => \n        s.toLowerCase().includes('understand') || \n        s.toLowerCase().includes('apologize') || \n        s.toLowerCase().includes('sorry') ||\n        s.toLowerCase().includes('concern') ||\n        s.toLowerCase().includes('issue') ||\n        s.toLowerCase().includes('problem')\n    );\n    \n    if (acknowledgment) {\n        formatted += `🤝 ${capitalizeFirst(acknowledgment)}.\\n\\n`;\n    }\n    \n    // Detailed problem understanding\n    const problemAnalysis = sentences.filter(s => \n        s.toLowerCase().includes('situation') || \n        s.toLowerCase().includes('circumstance') || \n        s.toLowerCase().includes('experience') ||\n        s.toLowerCase().includes('issue') ||\n        s.toLowerCase().includes('problem') ||\n        s.toLowerCase().includes('concern')\n    );\n    \n    if (problemAnalysis.length > 0) {\n        formatted += '📋 Understanding Your Situation:\\n';\n        problemAnalysis.slice(0, 3).forEach((analysis, index) => {\n            formatted += `   • ${capitalizeFirst(analysis)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Immediate solutions and actions\n    const solutions = sentences.filter(s => \n        s.toLowerCase().includes('solution') || \n        s.toLowerCase().includes('resolve') || \n        s.toLowerCase().includes('fix') ||\n        s.toLowerCase().includes('address') ||\n        s.toLowerCase().includes('correct') ||\n        s.toLowerCase().includes('improve')\n    );\n    \n    if (solutions.length > 0) {\n        formatted += '🔧 Immediate Solutions:\\n';\n        solutions.slice(0, 4).forEach((solution, index) => {\n            formatted += `   ${index + 1}. ${capitalizeFirst(solution)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Long-term improvements\n    const improvements = sentences.filter(s => \n        s.toLowerCase().includes('improve') || \n        s.toLowerCase().includes('enhance') || \n        s.toLowerCase().includes('better') ||\n        s.toLowerCase().includes('upgrade') ||\n        s.toLowerCase().includes('develop') ||\n        s.toLowerCase().includes('advance')\n    );\n    \n    if (improvements.length > 0) {\n        formatted += '🚀 Long-term Improvements:\\n';\n        improvements.slice(0, 3).forEach((improvement, index) => {\n            formatted += `   • ${capitalizeFirst(improvement)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Compensation or goodwill gestures\n    const compensation = sentences.filter(s => \n        s.toLowerCase().includes('compensate') || \n        s.toLowerCase().includes('refund') || \n        s.toLowerCase().includes('discount') ||\n        s.toLowerCase().includes('credit') ||\n        s.toLowerCase().includes('offer') ||\n        s.toLowerCase().includes('gesture')\n    );\n    \n    if (compensation.length > 0) {\n        formatted += '🎁 Goodwill Gestures:\\n';\n        compensation.slice(0, 2).forEach((gesture, index) => {\n            formatted += `   • ${capitalizeFirst(gesture)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Follow-up and contact information\n    const followUp = sentences.find(s => \n        s.toLowerCase().includes('contact') || \n        s.toLowerCase().includes('reach') || \n        s.toLowerCase().includes('follow up') ||\n        s.toLowerCase().includes('get in touch') ||\n        s.toLowerCase().includes('available')\n    );\n    \n    if (followUp) {\n        formatted += `📞 ${capitalizeFirst(followUp)}`;\n    } else {\n        formatted += `📞 Please don't hesitate to reach out if you need any further assistance.`;\n    }\n    \n    return formatted.trim();\n}\n\n// Enhanced general response with comprehensive structure\nfunction formatEnhancedGeneralResponse(sentences, structure) {\n    let formatted = '';\n    \n    // Main point with context\n    const mainPoint = sentences[0];\n    if (mainPoint) {\n        formatted += `📌 Main Point:\\n${capitalizeFirst(mainPoint)}.\\n\\n`;\n    }\n    \n    // Detailed explanation\n    const explanations = sentences.slice(1, 6);\n    if (explanations.length > 0) {\n        formatted += '📋 Detailed Explanation:\\n';\n        explanations.forEach((explanation, index) => {\n            formatted += `   ${index + 1}. ${capitalizeFirst(explanation)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Key insights and takeaways\n    const insights = sentences.filter(s => \n        s.toLowerCase().includes('important') || \n        s.toLowerCase().includes('key') || \n        s.toLowerCase().includes('essential') ||\n        s.toLowerCase().includes('critical') ||\n        s.toLowerCase().includes('significant') ||\n        s.toLowerCase().includes('notable')\n    );\n    \n    if (insights.length > 0) {\n        formatted += '💡 Key Insights:\\n';\n        insights.slice(0, 3).forEach((insight, index) => {\n            formatted += `   • ${capitalizeFirst(insight)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Practical applications or examples\n    const applications = sentences.filter(s => \n        s.toLowerCase().includes('example') || \n        s.toLowerCase().includes('instance') || \n        s.toLowerCase().includes('case') ||\n        s.toLowerCase().includes('scenario') ||\n        s.toLowerCase().includes('situation') ||\n        s.toLowerCase().includes('application')\n    );\n    \n    if (applications.length > 0) {\n        formatted += '🔍 Practical Examples:\\n';\n        applications.slice(0, 2).forEach((app, index) => {\n            formatted += `   ${index + 1}. ${capitalizeFirst(app)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Comprehensive conclusion\n    const conclusion = sentences.find(s => \n        s.toLowerCase().includes('therefore') || \n        s.toLowerCase().includes('thus') || \n        s.toLowerCase().includes('in summary') ||\n        s.toLowerCase().includes('overall') ||\n        s.toLowerCase().includes('conclusion') ||\n        s.toLowerCase().includes('final')\n    );\n    \n    if (conclusion) {\n        formatted += `🎯 ${capitalizeFirst(conclusion)}`;\n    } else {\n        // Generate a comprehensive conclusion\n        formatted += `🎯 In summary, this topic encompasses multiple important aspects that deserve careful consideration and thoughtful discussion.`;\n    }\n    \n    return formatted.trim();\n}\n\n// Helper function to capitalize first letter\nfunction capitalizeFirst(str) {\n    if (!str || typeof str !== 'string') return str;\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n// Voice Service for handling voice analysis and review generation\nimport apiConfig from '../config/api';\n\nclass VoiceService {\n  constructor() {\n    this.baseURL = apiConfig.baseURL;\n  }\n\n  // Analyze voice transcript using NVIDIA Llama\n  async analyzeVoice(transcript, apiKey) {\n    try {\n      const response = await fetch(`${this.baseURL}/voice/analyze`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          transcript,\n          apiKey\n        })\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || 'Failed to analyze voice input');\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Voice analysis error:', error);\n      throw error;\n    }\n  }\n\n  // Generate review from voice input and analysis\n  async generateReview(transcript, analysis, apiKey, reviewType = 'general') {\n    try {\n      const requestBody = {\n        transcript,\n        analysis,\n        apiKey,\n        reviewType\n      };\n      \n      console.log('VoiceService: Sending request to backend:', {\n        url: `${this.baseURL}/voice/generate-review`,\n        requestBody: {\n          ...requestBody,\n          apiKey: apiKey ? `${apiKey.substring(0, 10)}...` : 'undefined'\n        }\n      });\n      \n      const response = await fetch(`${this.baseURL}/voice/generate-review`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestBody)\n      });\n\n      console.log('VoiceService: Response status:', response.status);\n      console.log('VoiceService: Response ok:', response.ok);\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        console.error('VoiceService: Error response:', errorData);\n        throw new Error(errorData.error || 'Failed to generate review');\n      }\n\n      const data = await response.json();\n      console.log('VoiceService: Success response:', data);\n      // Clean the response before returning\n      return cleanAIResponse(data.review);\n    } catch (error) {\n      console.error('Review generation error:', error);\n      throw error;\n    }\n  }\n\n  // Get voice analysis with fallback\n  async getVoiceAnalysis(transcript, apiKey) {\n    try {\n      return await this.analyzeVoice(transcript, apiKey);\n    } catch (error) {\n      console.error('Voice analysis failed:', error);\n      \n      // Return fallback analysis\n      return {\n        success: false,\n        error: error.message,\n        analysis: {\n          sentiment: 'neutral',\n          confidence: 0.5,\n          keyPoints: ['Content could not be analyzed'],\n          topics: ['General'],\n          suggestions: ['Please try again or check your API key'],\n          tone: 'neutral',\n          actionItems: ['Review the transcript manually'],\n          summary: 'Analysis failed - please try again',\n          wordCount: transcript.split(' ').length,\n          speakingPace: 'normal'\n        },\n        provider: 'Fallback Analysis'\n      };\n    }\n  }\n}\n\nexport default new VoiceService(); ","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './HomeScreen.css';\n\nconst HomeScreen = () => {\n    return (\n        <div className=\"home-screen\">\n            <div className=\"hero-section\">\n                <h1>ReviewGen AI Platform</h1>\n                <p>Your complete AI-powered solution for reviews, customer service, and content creation</p>\n                <div className=\"hero-buttons\">\n                    <Link to=\"/generate\" className=\"hero-button primary\">\n                        ✍️ AI Review Generator\n                    </Link>\n                    <Link to=\"/voice\" className=\"hero-button secondary\">\n                        🎤 Voice Reviews\n                    </Link>\n                    <Link to=\"/blog-creator\" className=\"hero-button tertiary\">\n                        📝 Blog Creator\n                    </Link>\n                </div>\n            </div>\n            \n            <div className=\"features-grid\">\n                {/* AI Review Generation */}\n                <div className=\"feature-card\">\n                    <div className=\"feature-icon\">🤖</div>\n                    <h3>AI Review Generator</h3>\n                    <p>Create professional reviews with Meta Llama 3.1 70B AI. Choose from 8 review types with smart rating suggestions.</p>\n                    <Link to=\"/generate\" className=\"feature-link\">\n                        Generate Reviews →\n                    </Link>\n                </div>\n                \n                {/* Voice Reviews */}\n                <div className=\"feature-card\">\n                    <div className=\"feature-icon\">🎤</div>\n                    <h3>Voice Reviews</h3>\n                    <p>Speak your thoughts and let AI transcribe, analyze, and generate reviews with sentiment detection.</p>\n                    <Link to=\"/voice\" className=\"feature-link\">\n                        Try Voice Review →\n                    </Link>\n                </div>\n                \n                {/* Customer Service Responses */}\n                <div className=\"feature-card\">\n                    <div className=\"feature-icon\">💬</div>\n                    <h3>Chatty Customer Service</h3>\n                    <p>Transform negative reviews into friendly conversations with our empathetic AI relationship agent.</p>\n                    <Link to=\"/customer-service-response\" className=\"feature-link\">\n                        Chatty Agent →\n                    </Link>\n                </div>\n                \n                {/* Blog Creator */}\n                <div className=\"feature-card\">\n                    <div className=\"feature-icon\">📝</div>\n                    <h3>Restaurant Blog Creator</h3>\n                    <p>Generate engaging blog content for your restaurant business with AI-powered writing assistance.</p>\n                    <Link to=\"/blog-creator\" className=\"feature-link\">\n                        Create Blog Posts →\n                    </Link>\n                </div>\n                \n                {/* AI Models */}\n                <div className=\"feature-card\">\n                    <div className=\"feature-icon\">🧠</div>\n                    <h3>AI Models Hub</h3>\n                    <p>Explore specialized LLM models for different use cases - reviews, customer service, and analysis.</p>\n                    <Link to=\"/models\" className=\"feature-link\">\n                        View Models →\n                    </Link>\n                </div>\n                \n                {/* Review History */}\n                <div className=\"feature-card\">\n                    <div className=\"feature-icon\">📚</div>\n                    <h3>Review History</h3>\n                    <p>Access your complete review history with search, filter, and management capabilities.</p>\n                    <Link to=\"/history\" className=\"feature-link\">\n                        View History →\n                    </Link>\n                </div>\n                \n                {/* Restaurant Reviews */}\n                <div className=\"feature-card\">\n                    <div className=\"feature-icon\">🍽️</div>\n                    <h3>Restaurant Reviews</h3>\n                    <p>Create compelling restaurant reviews covering food quality, service, ambiance, and location.</p>\n                    <Link to=\"/generate\" className=\"feature-link\">\n                        Write Restaurant Review →\n                    </Link>\n                </div>\n                \n                {/* Hotel Reviews */}\n                <div className=\"feature-card\">\n                    <div className=\"feature-icon\">🏨</div>\n                    <h3>Hotel Reviews</h3>\n                    <p>Generate comprehensive hotel reviews including amenities, comfort, and location details.</p>\n                    <Link to=\"/generate\" className=\"feature-link\">\n                        Write Hotel Review →\n                    </Link>\n                </div>\n                \n                {/* Product Reviews */}\n                <div className=\"feature-card\">\n                    <div className=\"feature-icon\">📱</div>\n                    <h3>Product Reviews</h3>\n                    <p>Create detailed product reviews with features, benefits, and real-world usage experiences.</p>\n                    <Link to=\"/generate\" className=\"feature-link\">\n                        Write Product Review →\n                    </Link>\n                </div>\n                \n                {/* Service Reviews */}\n                <div className=\"feature-card\">\n                    <div className=\"feature-icon\">🛠️</div>\n                    <h3>Service Reviews</h3>\n                    <p>Generate professional service reviews for any business, contractor, or service provider.</p>\n                    <Link to=\"/generate\" className=\"feature-link\">\n                        Write Service Review →\n                    </Link>\n                </div>\n                \n                {/* Blog Index */}\n                <div className=\"feature-card\">\n                    <div className=\"feature-icon\">📖</div>\n                    <h3>Blog & Resources</h3>\n                    <p>Access our blog library with guides, tips, and insights on AI-powered review generation.</p>\n                    <Link to=\"/blog\" className=\"feature-link\">\n                        Read Blog →\n                    </Link>\n                </div>\n                \n                {/* Enhanced LLM */}\n                <div className=\"feature-card\">\n                    <div className=\"feature-icon\">⚡</div>\n                    <h3>Enhanced LLM Chat</h3>\n                    <p>Advanced AI conversation with multiple models, quality analysis, and response comparison.</p>\n                    <Link to=\"/llama\" className=\"feature-link\">\n                        Try Enhanced Chat →\n                    </Link>\n                </div>\n            </div>\n            \n            {/* Service Categories */}\n            <div className=\"service-categories\">\n                <h2>Service Categories</h2>\n                <div className=\"categories-grid\">\n                    <div className=\"category-card\">\n                        <h3>🎯 Review Generation</h3>\n                        <ul>\n                            <li>AI-powered review creation</li>\n                            <li>8 different review types</li>\n                            <li>Smart rating suggestions</li>\n                            <li>Location integration</li>\n                        </ul>\n                    </div>\n                    <div className=\"category-card\">\n                        <h3>🎤 Voice Features</h3>\n                        <ul>\n                            <li>Voice-to-text transcription</li>\n                            <li>Sentiment analysis</li>\n                            <li>Voice review generation</li>\n                            <li>LLM enhancement</li>\n                        </ul>\n                    </div>\n                    <div className=\"category-card\">\n                        <h3>💬 Customer Service</h3>\n                        <ul>\n                            <li>Chatty AI responses</li>\n                            <li>Negative review handling</li>\n                            <li>Empathetic conversations</li>\n                            <li>Relationship building</li>\n                        </ul>\n                    </div>\n                    <div className=\"category-card\">\n                        <h3>📝 Content Creation</h3>\n                        <ul>\n                            <li>Restaurant blog posts</li>\n                            <li>AI-powered writing</li>\n                            <li>Content customization</li>\n                            <li>Blog management</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            \n            <div className=\"cta-section\">\n                <h2>Ready to Get Started?</h2>\n                <p>Choose your preferred way to create amazing content with AI</p>\n                <div className=\"cta-buttons\">\n                    <Link to=\"/generate\" className=\"cta-button primary\">\n                        🤖 AI Review Generator\n                    </Link>\n                    <Link to=\"/voice\" className=\"cta-button secondary\">\n                        🎤 Voice Reviews\n                    </Link>\n                    <Link to=\"/blog-creator\" className=\"cta-button tertiary\">\n                        📝 Blog Creator\n                    </Link>\n                    <Link to=\"/customer-service-response\" className=\"cta-button quaternary\">\n                        💬 Chatty Agent\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default HomeScreen;","import React, { useState, useEffect } from 'react';\nimport './VoiceAnalysis.css';\n\nconst VoiceAnalysis = ({ analysis, onGenerateReview, onSaveAnalysis, parentReviewType = 'general' }) => {\n    const [isExpanded, setIsExpanded] = useState(false);\n    const [isGeneratingReview, setIsGeneratingReview] = useState(false);\n    const [generatedReview, setGeneratedReview] = useState('');\n    const [reviewType, setReviewType] = useState(parentReviewType);\n\n    // Update reviewType when parentReviewType changes\n    useEffect(() => {\n        setReviewType(parentReviewType);\n    }, [parentReviewType]);\n\n    if (!analysis || !analysis.success) {\n        return (\n            <div className=\"voice-analysis-container\">\n                <div className=\"analysis-error\">\n                    <div className=\"error-icon\">⚠️</div>\n                    <h3>Analysis Failed</h3>\n                    <p>{analysis?.error || 'Unable to analyze voice input'}</p>\n                </div>\n            </div>\n        );\n    }\n\n    const { analysis: data, provider, transcript: originalTranscript } = analysis;\n    const {\n        sentiment,\n        confidence,\n        keyPoints,\n        topics,\n        suggestions,\n        tone,\n        actionItems,\n        summary,\n        wordCount,\n        speakingPace\n    } = data;\n\n    const getSentimentColor = (sentiment) => {\n        switch (sentiment) {\n            case 'positive': return '#28a745';\n            case 'negative': return '#dc3545';\n            default: return '#6c757d';\n        }\n    };\n\n    const getConfidenceColor = (confidence) => {\n        if (confidence >= 0.8) return '#28a745';\n        if (confidence >= 0.6) return '#ffc107';\n        return '#dc3545';\n    };\n\n    const handleGenerateReview = async () => {\n        if (onGenerateReview) {\n            setIsGeneratingReview(true);\n            try {\n                console.log('VoiceAnalysis: Generating review with type:', reviewType);\n                console.log('VoiceAnalysis: Original transcript:', originalTranscript);\n                console.log('VoiceAnalysis: Analysis data:', data);\n                console.log('VoiceAnalysis: Full analysis object:', analysis);\n                \n                // Make sure we have a valid transcript\n                if (!originalTranscript || originalTranscript.trim().length === 0) {\n                    throw new Error('No transcript available for review generation');\n                }\n                \n                const review = await onGenerateReview(originalTranscript, data, reviewType);\n                setGeneratedReview(review);\n            } catch (error) {\n                console.error('VoiceAnalysis: Review generation failed:', error);\n                console.error('VoiceAnalysis: Error details:', {\n                    message: error.message,\n                    stack: error.stack\n                });\n                // Don't re-throw the error, just log it\n            } finally {\n                setIsGeneratingReview(false);\n            }\n        }\n    };\n\n    const handleSaveAnalysis = () => {\n        if (onSaveAnalysis) {\n            onSaveAnalysis(analysis);\n        }\n    };\n\n    return (\n        <div className=\"voice-analysis-container\">\n            <div className=\"analysis-header\">\n                <div className=\"provider-badge\">\n                    <span className=\"provider-icon\">🤖</span>\n                    {provider}\n                </div>\n                <div className=\"analysis-actions\">\n                    <button \n                        className=\"action-btn expand-btn\"\n                        onClick={() => setIsExpanded(!isExpanded)}\n                        title={isExpanded ? 'Collapse' : 'Expand'}\n                    >\n                        {isExpanded ? '📁' : '📂'}\n                    </button>\n                    <button \n                        className=\"action-btn save-btn\"\n                        onClick={handleSaveAnalysis}\n                        title=\"Save Analysis\"\n                    >\n                        💾\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"analysis-summary\">\n                <div className=\"sentiment-section\">\n                    <div className=\"sentiment-indicator\" style={{ backgroundColor: getSentimentColor(sentiment) }}>\n                        <span className=\"sentiment-emoji\">\n                            {sentiment === 'positive' ? '😊' : sentiment === 'negative' ? '😞' : '😐'}\n                        </span>\n                        <span className=\"sentiment-text\">{sentiment.toUpperCase()}</span>\n                    </div>\n                    <div className=\"confidence-meter\">\n                        <div className=\"confidence-label\">Confidence</div>\n                        <div className=\"confidence-bar\">\n                            <div \n                                className=\"confidence-fill\" \n                                style={{ \n                                    width: `${confidence * 100}%`,\n                                    backgroundColor: getConfidenceColor(confidence)\n                                }}\n                            ></div>\n                        </div>\n                        <div className=\"confidence-value\">{Math.round(confidence * 100)}%</div>\n                    </div>\n                </div>\n\n                <div className=\"stats-grid\">\n                    <div className=\"stat-item\">\n                        <div className=\"stat-label\">Words</div>\n                        <div className=\"stat-value\">{wordCount}</div>\n                    </div>\n                    <div className=\"stat-item\">\n                        <div className=\"stat-label\">Pace</div>\n                        <div className=\"stat-value\">{speakingPace}</div>\n                    </div>\n                    <div className=\"stat-item\">\n                        <div className=\"stat-label\">Tone</div>\n                        <div className=\"stat-value\">{tone}</div>\n                    </div>\n                    <div className=\"stat-item\">\n                        <div className=\"stat-label\">Topics</div>\n                        <div className=\"stat-value\">{topics?.length || 0}</div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"analysis-content\">\n                <div className=\"content-section\">\n                    <h3>📝 Summary</h3>\n                    <p className=\"summary-text\">{summary}</p>\n                </div>\n\n                {keyPoints && keyPoints.length > 0 && (\n                    <div className=\"content-section\">\n                        <h3>🎯 Key Points</h3>\n                        <ul className=\"key-points-list\">\n                            {keyPoints.map((point, index) => (\n                                <li key={index} className=\"key-point-item\">\n                                    <span className=\"point-bullet\">•</span>\n                                    {point}\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                )}\n\n                {topics && topics.length > 0 && (\n                    <div className=\"content-section\">\n                        <h3>🏷️ Topics</h3>\n                        <div className=\"topics-tags\">\n                            {topics.map((topic, index) => (\n                                <span key={index} className=\"topic-tag\">\n                                    {topic}\n                                </span>\n                            ))}\n                        </div>\n                    </div>\n                )}\n\n                {isExpanded && (\n                    <>\n                        {suggestions && suggestions.length > 0 && (\n                            <div className=\"content-section\">\n                                <h3>💡 Suggestions</h3>\n                                <ul className=\"suggestions-list\">\n                                    {suggestions.map((suggestion, index) => (\n                                        <li key={index} className=\"suggestion-item\">\n                                            <span className=\"suggestion-icon\">💡</span>\n                                            {suggestion}\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                        )}\n\n                        {actionItems && actionItems.length > 0 && (\n                            <div className=\"content-section\">\n                                <h3>✅ Action Items</h3>\n                                <ul className=\"action-items-list\">\n                                    {actionItems.map((item, index) => (\n                                        <li key={index} className=\"action-item\">\n                                            <span className=\"action-icon\">✅</span>\n                                            {item}\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                        )}\n\n                        <div className=\"content-section\">\n                            <h3>🎤 Original Transcript</h3>\n                            <div className=\"transcript-display\">\n                                <p>{originalTranscript}</p>\n                            </div>\n                        </div>\n                    </>\n                )}\n            </div>\n\n            {/* Review Generation Section */}\n            <div className=\"review-generation-section\">\n                <div className=\"review-controls\">\n                    <select \n                        value={reviewType} \n                        onChange={(e) => setReviewType(e.target.value)}\n                        className=\"review-type-select\"\n                    >\n                        <option value=\"restaurant\">Restaurant</option>\n                        <option value=\"hotel\">Hotel</option>\n                        <option value=\"product\">Product</option>\n                        <option value=\"service\">Service</option>\n                        <option value=\"experience\">Experience</option>\n                        <option value=\"app\">App/Software</option>\n                        <option value=\"place\">Place/Location</option>\n                        <option value=\"general\">General</option>\n                    </select>\n                    <button \n                        onClick={handleGenerateReview}\n                        disabled={isGeneratingReview}\n                        className=\"generate-review-btn\"\n                    >\n                        {isGeneratingReview ? '🤖 Generating...' : '📝 Generate Review'}\n                    </button>\n                </div>\n\n                {generatedReview && (\n                    <div className=\"generated-review\">\n                        <h3>📝 Generated Review</h3>\n                        <div className=\"review-content\">\n                            <p>{generatedReview}</p>\n                        </div>\n                        <button \n                            onClick={() => navigator.clipboard.writeText(generatedReview)}\n                            className=\"copy-review-btn\"\n                        >\n                            📋 Copy Review\n                        </button>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default VoiceAnalysis; ","class LocationService {\n    /**\n     * Get current location using browser geolocation API\n     * @param {Object} options - Geolocation options\n     * @returns {Promise<Object>} Location data\n     */\n    static async getCurrentLocation(options = {}) {\n        const defaultOptions = {\n            enableHighAccuracy: true,\n            timeout: 10000,\n            maximumAge: 60000\n        };\n\n        const finalOptions = { ...defaultOptions, ...options };\n\n        return new Promise((resolve, reject) => {\n            if (!navigator.geolocation) {\n                reject(new Error('Geolocation is not supported by this browser.'));\n                return;\n            }\n\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    const locationData = {\n                        latitude: position.coords.latitude,\n                        longitude: position.coords.longitude,\n                        accuracy: position.coords.accuracy,\n                        timestamp: new Date(position.timestamp).toISOString(),\n                        address: null\n                    };\n                    resolve(locationData);\n                },\n                (error) => {\n                    let errorMessage;\n                    switch (error.code) {\n                        case error.PERMISSION_DENIED:\n                            errorMessage = 'Location permission denied. Please enable location access in your browser settings.';\n                            break;\n                        case error.POSITION_UNAVAILABLE:\n                            errorMessage = 'Location information is unavailable.';\n                            break;\n                        case error.TIMEOUT:\n                            errorMessage = 'Location request timed out.';\n                            break;\n                        default:\n                            errorMessage = 'An unknown error occurred while getting location.';\n                    }\n                    reject(new Error(errorMessage));\n                },\n                finalOptions\n            );\n        });\n    }\n\n    /**\n     * Get address from coordinates using reverse geocoding\n     * @param {number} latitude - Latitude coordinate\n     * @param {number} longitude - Longitude coordinate\n     * @returns {Promise<string|null>} Address string or null\n     */\n    static async getAddressFromCoordinates(latitude, longitude) {\n        try {\n            const response = await fetch(\n                `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&zoom=18&addressdetails=1`\n            );\n            \n            if (!response.ok) {\n                throw new Error('Failed to fetch address');\n            }\n            \n            const data = await response.json();\n            return data.display_name || null;\n        } catch (error) {\n            console.warn('Could not fetch address:', error);\n            return null;\n        }\n    }\n\n    /**\n     * Check if geolocation is supported\n     * @returns {boolean} True if supported\n     */\n    static isSupported() {\n        return !!navigator.geolocation;\n    }\n\n    /**\n     * Check geolocation permission status\n     * @returns {Promise<string>} Permission status\n     */\n    static async getPermissionStatus() {\n        if (!navigator.permissions || !navigator.permissions.query) {\n            return 'prompt';\n        }\n\n        try {\n            const result = await navigator.permissions.query({ name: 'geolocation' });\n            return result.state;\n        } catch (error) {\n            console.warn('Could not check permission status:', error);\n            return 'prompt';\n        }\n    }\n\n    /**\n     * Format location data for display\n     * @param {Object} location - Location data object\n     * @returns {string} Formatted location string\n     */\n    static formatLocation(location) {\n        if (!location) return '';\n        \n        const coords = `${location.latitude.toFixed(6)}, ${location.longitude.toFixed(6)}`;\n        const accuracy = location.accuracy ? ` (±${Math.round(location.accuracy)}m)` : '';\n        const address = location.address ? `\\n${location.address}` : '';\n        \n        return `${coords}${accuracy}${address}`;\n    }\n\n    /**\n     * Calculate distance between two coordinates in meters\n     * @param {number} lat1 - First latitude\n     * @param {number} lon1 - First longitude\n     * @param {number} lat2 - Second latitude\n     * @param {number} lon2 - Second longitude\n     * @returns {number} Distance in meters\n     */\n    static calculateDistance(lat1, lon1, lat2, lon2) {\n        const R = 6371e3; // Earth's radius in meters\n        const φ1 = lat1 * Math.PI / 180;\n        const φ2 = lat2 * Math.PI / 180;\n        const Δφ = (lat2 - lat1) * Math.PI / 180;\n        const Δλ = (lon2 - lon1) * Math.PI / 180;\n\n        const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\n                  Math.cos(φ1) * Math.cos(φ2) *\n                  Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n        return R * c;\n    }\n\n    /**\n     * Validate coordinates\n     * @param {number} latitude - Latitude to validate\n     * @param {number} longitude - Longitude to validate\n     * @returns {boolean} True if coordinates are valid\n     */\n    static validateCoordinates(latitude, longitude) {\n        return (\n            typeof latitude === 'number' &&\n            typeof longitude === 'number' &&\n            latitude >= -90 && latitude <= 90 &&\n            longitude >= -180 && longitude <= 180\n        );\n    }\n\n    /**\n     * Get location suggestions based on voice content\n     * @param {string} transcript - Voice transcript to analyze\n     * @param {string} apiKey - NVIDIA API key\n     * @param {Object} currentLocation - Current location data (optional)\n     * @returns {Promise<Object>} Location suggestions and analysis\n     */\n    static async getLocationSuggestions(transcript, apiKey, currentLocation = null) {\n        try {\n            const response = await fetch('/api/voice/suggest-location', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    transcript,\n                    apiKey,\n                    currentLocation\n                })\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || 'Failed to get location suggestions');\n            }\n\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error('Location suggestion error:', error);\n            throw error;\n        }\n    }\n\n    /**\n     * Search for locations using OpenStreetMap Nominatim\n     * @param {string} query - Search query\n     * @param {number} limit - Maximum number of results\n     * @returns {Promise<Array>} Array of location results\n     */\n    static async searchLocations(query, limit = 5) {\n        try {\n            const response = await fetch(\n                `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}&limit=${limit}&addressdetails=1`\n            );\n            \n            if (!response.ok) {\n                throw new Error('Failed to search locations');\n            }\n            \n            const data = await response.json();\n            return data.map(item => ({\n                name: item.display_name,\n                type: item.type,\n                latitude: parseFloat(item.lat),\n                longitude: parseFloat(item.lon),\n                address: item.display_name,\n                importance: item.importance\n            }));\n        } catch (error) {\n            console.warn('Could not search locations:', error);\n            return [];\n        }\n    }\n}\n\nexport default LocationService; ","import React, { useState, useEffect } from 'react';\nimport LocationService from '../services/locationService';\nimport './LocationSuggestions.css';\n\nconst LocationSuggestions = ({ \n    transcript, \n    apiKey, \n    currentLocation, \n    onLocationSelect, \n    onClose \n}) => {\n    const [suggestions, setSuggestions] = useState([]);\n    const [analysis, setAnalysis] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [searchQuery, setSearchQuery] = useState('');\n    const [searchResults, setSearchResults] = useState([]);\n    const [isSearching, setIsSearching] = useState(false);\n\n    useEffect(() => {\n        if (transcript && apiKey) {\n            getLocationSuggestions();\n        }\n    }, [transcript, apiKey]);\n\n    const getLocationSuggestions = async () => {\n        if (!transcript || !apiKey) return;\n\n        setIsLoading(true);\n        setError('');\n\n        try {\n            const result = await LocationService.getLocationSuggestions(\n                transcript, \n                apiKey, \n                currentLocation\n            );\n\n            if (result.success) {\n                setSuggestions(result.suggestions || []);\n                setAnalysis(result.analysis || {});\n                \n                // Auto-search if specific place is mentioned\n                if (result.analysis?.specificPlace) {\n                    setSearchQuery(result.analysis.specificPlace);\n                    searchLocations(result.analysis.specificPlace);\n                }\n            } else {\n                setError(result.error || 'Failed to get location suggestions');\n            }\n        } catch (error) {\n            console.error('Location suggestion error:', error);\n            setError(error.message || 'Failed to get location suggestions');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const searchLocations = async (query) => {\n        if (!query.trim()) {\n            setSearchResults([]);\n            return;\n        }\n\n        setIsSearching(true);\n        try {\n            const results = await LocationService.searchLocations(query, 5);\n            setSearchResults(results);\n        } catch (error) {\n            console.error('Location search error:', error);\n            setSearchResults([]);\n        } finally {\n            setIsSearching(false);\n        }\n    };\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        searchLocations(searchQuery);\n    };\n\n    const handleLocationSelect = (location) => {\n        onLocationSelect(location);\n        onClose();\n    };\n\n    const getLocationIcon = (type) => {\n        switch (type) {\n            case 'restaurant': return '🍽️';\n            case 'hotel': return '🏨';\n            case 'store': return '🛍️';\n            case 'attraction': return '🎯';\n            case 'service': return '🛠️';\n            default: return '📍';\n        }\n    };\n\n    const getConfidenceColor = (confidence) => {\n        if (confidence >= 0.8) return '#4CAF50';\n        if (confidence >= 0.6) return '#FF9800';\n        return '#F44336';\n    };\n\n    const getConfidenceText = (confidence) => {\n        if (confidence >= 0.8) return 'High';\n        if (confidence >= 0.6) return 'Medium';\n        return 'Low';\n    };\n\n    return (\n        <div className=\"location-suggestions\">\n            <div className=\"suggestions-header\">\n                <h3>📍 Location Suggestions</h3>\n                <button className=\"close-btn\" onClick={onClose}>\n                    ✕\n                </button>\n            </div>\n\n            {error && (\n                <div className=\"suggestions-error\">\n                    <span className=\"error-icon\">⚠️</span>\n                    {error}\n                </div>\n            )}\n\n            {isLoading && (\n                <div className=\"suggestions-loading\">\n                    <div className=\"loading-spinner\"></div>\n                    <p>🤖 AI is analyzing your voice for location suggestions...</p>\n                </div>\n            )}\n\n            {analysis && !isLoading && (\n                <div className=\"analysis-summary\">\n                    <h4>📊 AI Analysis</h4>\n                    <div className=\"analysis-details\">\n                        <div className=\"analysis-item\">\n                            <span className=\"analysis-label\">Location Mentioned:</span>\n                            <span className={`analysis-value ${analysis.locationMentioned ? 'positive' : 'negative'}`}>\n                                {analysis.locationMentioned ? 'Yes' : 'No'}\n                            </span>\n                        </div>\n                        {analysis.locationType && analysis.locationType !== 'unknown' && (\n                            <div className=\"analysis-item\">\n                                <span className=\"analysis-label\">Type:</span>\n                                <span className=\"analysis-value\">\n                                    {getLocationIcon(analysis.locationType)} {analysis.locationType}\n                                </span>\n                            </div>\n                        )}\n                        {analysis.specificPlace && (\n                            <div className=\"analysis-item\">\n                                <span className=\"analysis-label\">Specific Place:</span>\n                                <span className=\"analysis-value\">{analysis.specificPlace}</span>\n                            </div>\n                        )}\n                        {analysis.cityOrArea && (\n                            <div className=\"analysis-item\">\n                                <span className=\"analysis-label\">Area:</span>\n                                <span className=\"analysis-value\">{analysis.cityOrArea}</span>\n                            </div>\n                        )}\n                        <div className=\"analysis-item\">\n                            <span className=\"analysis-label\">Confidence:</span>\n                            <span \n                                className=\"analysis-value\"\n                                style={{ color: getConfidenceColor(analysis.confidence) }}\n                            >\n                                {getConfidenceText(analysis.confidence)} ({Math.round(analysis.confidence * 100)}%)\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {suggestions.length > 0 && !isLoading && (\n                <div className=\"ai-suggestions\">\n                    <h4>🤖 AI Suggestions</h4>\n                    <div className=\"suggestions-list\">\n                        {suggestions.map((suggestion, index) => (\n                            <div key={index} className=\"suggestion-item\">\n                                <div className=\"suggestion-header\">\n                                    <span className=\"suggestion-icon\">\n                                        {getLocationIcon(suggestion.type)}\n                                    </span>\n                                    <div className=\"suggestion-info\">\n                                        <h5 className=\"suggestion-name\">{suggestion.name}</h5>\n                                        <p className=\"suggestion-description\">{suggestion.description}</p>\n                                    </div>\n                                    <div className=\"suggestion-confidence\">\n                                        <span \n                                            className=\"confidence-badge\"\n                                            style={{ backgroundColor: getConfidenceColor(suggestion.confidence) }}\n                                        >\n                                            {Math.round(suggestion.confidence * 100)}%\n                                        </span>\n                                    </div>\n                                </div>\n                                {suggestion.address && (\n                                    <div className=\"suggestion-address\">\n                                        📍 {suggestion.address}\n                                    </div>\n                                )}\n                                {suggestion.keywords && suggestion.keywords.length > 0 && (\n                                    <div className=\"suggestion-keywords\">\n                                        {suggestion.keywords.map((keyword, idx) => (\n                                            <span key={idx} className=\"keyword-tag\">\n                                                {keyword}\n                                            </span>\n                                        ))}\n                                    </div>\n                                )}\n                                <button \n                                    className=\"select-location-btn\"\n                                    onClick={() => handleLocationSelect({\n                                        latitude: suggestion.coordinates?.latitude || 0,\n                                        longitude: suggestion.coordinates?.longitude || 0,\n                                        address: suggestion.address,\n                                        name: suggestion.name,\n                                        type: suggestion.type,\n                                        source: 'ai-suggestion'\n                                    })}\n                                >\n                                    Select This Location\n                                </button>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n\n            <div className=\"manual-search\">\n                <h4>🔍 Manual Search</h4>\n                <form onSubmit={handleSearch} className=\"search-form\">\n                    <div className=\"search-input-group\">\n                        <input\n                            type=\"text\"\n                            value={searchQuery}\n                            onChange={(e) => setSearchQuery(e.target.value)}\n                            placeholder=\"Search for a location...\"\n                            className=\"search-input\"\n                        />\n                        <button \n                            type=\"submit\" \n                            className=\"search-btn\"\n                            disabled={isSearching || !searchQuery.trim()}\n                        >\n                            {isSearching ? '🔍' : 'Search'}\n                        </button>\n                    </div>\n                </form>\n\n                {searchResults.length > 0 && (\n                    <div className=\"search-results\">\n                        <h5>Search Results</h5>\n                        <div className=\"results-list\">\n                            {searchResults.map((result, index) => (\n                                <div key={index} className=\"result-item\">\n                                    <div className=\"result-info\">\n                                        <h6 className=\"result-name\">{result.name}</h6>\n                                        <p className=\"result-type\">Type: {result.type}</p>\n                                    </div>\n                                    <button \n                                        className=\"select-result-btn\"\n                                        onClick={() => handleLocationSelect({\n                                            latitude: result.latitude,\n                                            longitude: result.longitude,\n                                            address: result.address,\n                                            name: result.name,\n                                            type: result.type,\n                                            source: 'manual-search'\n                                        })}\n                                    >\n                                        Select\n                                    </button>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                )}\n            </div>\n\n            <div className=\"suggestions-footer\">\n                <p className=\"suggestions-hint\">\n                    💡 AI analyzes your voice content to suggest relevant locations. You can also search manually.\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default LocationSuggestions; ","import React, { useState, useEffect } from 'react';\nimport LocationService from '../services/locationService';\nimport LocationSuggestions from './LocationSuggestions';\nimport './LocationAttachment.css';\n\nconst LocationAttachment = ({ \n    onLocationChange, \n    initialLocation = null, \n    transcript = null, \n    apiKey = null \n}) => {\n  const [location, setLocation] = useState(initialLocation);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [permissionStatus, setPermissionStatus] = useState('prompt');\n  const [showSuggestions, setShowSuggestions] = useState(false);\n\n  useEffect(() => {\n    // Check if geolocation is supported\n    if (!LocationService.isSupported()) {\n      setError('Geolocation is not supported by this browser.');\n      return;\n    }\n\n    // Check permission status\n    LocationService.getPermissionStatus().then(setPermissionStatus);\n  }, []);\n\n  const getCurrentLocation = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const locationData = await LocationService.getCurrentLocation();\n      setLocation(locationData);\n      onLocationChange(locationData);\n      \n      // Try to get address from coordinates\n      const address = await LocationService.getAddressFromCoordinates(\n        locationData.latitude, \n        locationData.longitude\n      );\n      \n      if (address) {\n        const updatedLocation = {\n          ...locationData,\n          address\n        };\n        setLocation(updatedLocation);\n        onLocationChange(updatedLocation);\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const clearLocation = () => {\n    setLocation(null);\n    onLocationChange(null);\n  };\n\n  const handleLocationSelect = (selectedLocation) => {\n    setLocation(selectedLocation);\n    onLocationChange(selectedLocation);\n  };\n\n  const getPermissionStatusText = () => {\n    switch (permissionStatus) {\n      case 'granted':\n        return 'Location access granted';\n      case 'denied':\n        return 'Location access denied';\n      case 'prompt':\n        return 'Location permission not set';\n      default:\n        return 'Checking location permission...';\n    }\n  };\n\n  const getPermissionStatusColor = () => {\n    switch (permissionStatus) {\n      case 'granted':\n        return '#4CAF50';\n      case 'denied':\n        return '#f44336';\n      case 'prompt':\n        return '#ff9800';\n      default:\n        return '#757575';\n    }\n  };\n\n  return (\n    <div className=\"location-attachment\">\n      <div className=\"location-header\">\n        <h3>📍 Location Attachment</h3>\n        <div \n          className=\"permission-status\"\n          style={{ color: getPermissionStatusColor() }}\n        >\n          {getPermissionStatusText()}\n        </div>\n      </div>\n\n      <div className=\"location-content\">\n        {location ? (\n          <div className=\"location-display\">\n            <div className=\"location-info\">\n              <div className=\"location-coordinates\">\n                <strong>Coordinates:</strong> {location.latitude.toFixed(6)}, {location.longitude.toFixed(6)}\n              </div>\n              {location.accuracy && (\n                <div className=\"location-accuracy\">\n                  <strong>Accuracy:</strong> ±{Math.round(location.accuracy)} meters\n                </div>\n              )}\n              {location.timestamp && (\n                <div className=\"location-timestamp\">\n                  <strong>Time:</strong> {new Date(location.timestamp).toLocaleString()}\n                </div>\n              )}\n              {location.address && (\n                <div className=\"location-address\">\n                  <strong>Address:</strong> {location.address}\n                </div>\n              )}\n              {location.name && (\n                <div className=\"location-name\">\n                  <strong>Name:</strong> {location.name}\n                </div>\n              )}\n              {location.type && (\n                <div className=\"location-type\">\n                  <strong>Type:</strong> {location.type}\n                </div>\n              )}\n              {location.source && (\n                <div className=\"location-source\">\n                  <strong>Source:</strong> {location.source === 'ai-suggestion' ? '🤖 AI Suggestion' : \n                                          location.source === 'manual-search' ? '🔍 Manual Search' : \n                                          '📍 GPS'}\n                </div>\n              )}\n            </div>\n            <div className=\"location-actions\">\n              <button \n                className=\"btn btn-secondary\"\n                onClick={clearLocation}\n              >\n                Remove Location\n              </button>\n              <button \n                className=\"btn btn-primary\"\n                onClick={getCurrentLocation}\n                disabled={isLoading}\n              >\n                Update Location\n              </button>\n              {transcript && apiKey && (\n                <button \n                  className=\"btn btn-suggest\"\n                  onClick={() => setShowSuggestions(true)}\n                >\n                  🤖 Get AI Suggestions\n                </button>\n              )}\n            </div>\n          </div>\n        ) : (\n          <div className=\"location-empty\">\n            <div className=\"location-placeholder\">\n              <span className=\"location-icon\">📍</span>\n              <p>No location attached</p>\n              <p className=\"location-hint\">Add your current location or get AI suggestions based on your voice input</p>\n            </div>\n            <div className=\"location-buttons\">\n              <button \n                className=\"btn btn-primary location-btn\"\n                onClick={getCurrentLocation}\n                disabled={isLoading || permissionStatus === 'denied'}\n              >\n                {isLoading ? 'Getting Location...' : '📍 Attach Current Location'}\n              </button>\n              {transcript && apiKey && (\n                <button \n                  className=\"btn btn-suggest location-btn\"\n                  onClick={() => setShowSuggestions(true)}\n                >\n                  🤖 AI Location Suggestions\n                </button>\n              )}\n            </div>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"location-error\">\n            <span className=\"error-icon\">⚠️</span>\n            <p>{error}</p>\n            {permissionStatus === 'denied' && (\n              <div className=\"permission-help\">\n                <p>To enable location access:</p>\n                <ul>\n                  <li>Click the location icon in your browser's address bar</li>\n                  <li>Select \"Allow\" for location access</li>\n                  <li>Refresh the page and try again</li>\n                </ul>\n              </div>\n            )}\n          </div>\n        )}\n\n        {isLoading && (\n          <div className=\"location-loading\">\n            <div className=\"loading-spinner\"></div>\n            <p>Getting your location...</p>\n          </div>\n        )}\n      </div>\n\n      {location && (\n        <div className=\"location-preview\">\n          <h4>Location Preview</h4>\n          <div className=\"location-text\">\n            {LocationService.formatLocation(location)}\n          </div>\n        </div>\n      )}\n\n      {/* Location Suggestions Modal */}\n      {showSuggestions && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <LocationSuggestions\n              transcript={transcript}\n              apiKey={apiKey}\n              currentLocation={location}\n              onLocationSelect={handleLocationSelect}\n              onClose={() => setShowSuggestions(false)}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LocationAttachment; ","// LLM Service for analyzing voice input\n// Supports multiple AI providers: OpenAI, Anthropic, and local fallback\n\n// Enhanced function to clean and format AI responses for longer, more relevant content\nfunction cleanAIResponse(response) {\n    if (!response || typeof response !== 'string') {\n        return response;\n    }\n    \n    // Remove common AI response artifacts\n    let cleaned = response\n        // Remove markdown code blocks\n        .replace(/```[\\s\\S]*?```/g, '')\n        // Remove asterisks used for emphasis\n        .replace(/\\*\\*(.*?)\\*\\*/g, '$1')\n        .replace(/\\*(.*?)\\*/g, '$1')\n        // Remove backticks\n        .replace(/`(.*?)`/g, '$1')\n        // Remove excessive newlines (more than 2 consecutive)\n        .replace(/\\n{3,}/g, '\\n\\n')\n        // Remove leading/trailing whitespace\n        .trim()\n        // Remove common AI prefixes\n        .replace(/^(Here's|Here is|I'll|I will|Let me|Based on|According to|As an AI|As a customer service representative|As a helpful assistant)[,\\s]*/gi, '')\n        // Remove common AI suffixes\n        .replace(/(I hope this helps|Let me know if you need anything else|Feel free to ask|Is there anything else I can help you with)[.!]*$/gi, '')\n        // Remove excessive punctuation\n        .replace(/[!]{2,}/g, '!')\n        .replace(/[?]{2,}/g, '?')\n        .replace(/[.]{2,}/g, '.')\n        // Remove emoji clusters (keep single emojis)\n        .replace(/([^\\s])\\1{2,}/g, '$1')\n        // Remove excessive spaces\n        .replace(/\\s{2,}/g, ' ')\n        // Remove quotes around the entire response\n        .replace(/^[\"']|[\"']$/g, '')\n        // Remove bullet points and numbering\n        .replace(/^[\\s]*[-*•]\\s*/gm, '')\n        .replace(/^[\\s]*\\d+[.)]\\s*/gm, '')\n        // Remove section headers\n        .replace(/^[A-Z][A-Z\\s]+:$/gm, '')\n        // Remove empty lines at start and end\n        .replace(/^\\s*\\n/, '')\n        .replace(/\\n\\s*$/, '');\n    \n    // Apply enhanced formatting for longer, more comprehensive, and topic-relevant responses\n    cleaned = formatForEnhancedDepthAndRelevance(cleaned);\n    \n    return cleaned;\n}\n\n// Enhanced formatting function for longer, more comprehensive, and topic-relevant responses\nfunction formatForEnhancedDepthAndRelevance(text) {\n    if (!text || typeof text !== 'string') {\n        return text;\n    }\n    \n    // Split into sentences and clean them\n    const sentences = text.split(/[.!?]+/)\n        .map(s => s.trim())\n        .filter(s => s.length > 0);\n    \n    // Enhanced content structure analysis\n    const structure = analyzeEnhancedContentStructure(sentences);\n    \n    // Format based on content type with enhanced depth\n    if (structure.type === 'review') {\n        return formatEnhancedReviewResponse(sentences, structure);\n    } else if (structure.type === 'analysis') {\n        return formatEnhancedAnalysisResponse(sentences, structure);\n    } else if (structure.type === 'conversation') {\n        return formatEnhancedConversationResponse(sentences, structure);\n    } else if (structure.type === 'customer_service') {\n        return formatEnhancedCustomerServiceResponse(sentences, structure);\n    } else {\n        return formatEnhancedGeneralResponse(sentences, structure);\n    }\n}\n\n// Analyze the structure of the content\nfunction analyzeContentStructure(sentences) {\n    const text = sentences.join(' ').toLowerCase();\n    \n    // Detect content type\n    let type = 'general';\n    if (text.includes('rating') || text.includes('stars') || text.includes('recommend') || text.includes('experience')) {\n        type = 'review';\n    } else if (text.includes('analysis') || text.includes('sentiment') || text.includes('key points') || text.includes('summary')) {\n        type = 'analysis';\n    } else if (text.includes('hello') || text.includes('hi') || text.includes('how are you') || text.includes('chat')) {\n        type = 'conversation';\n    }\n    \n    // Extract key elements\n    const keyPoints = sentences.filter(s => \n        s.toLowerCase().includes('important') || \n        s.toLowerCase().includes('key') || \n        s.toLowerCase().includes('main') ||\n        s.toLowerCase().includes('primary')\n    );\n    \n    const questions = sentences.filter(s => s.includes('?'));\n    const statements = sentences.filter(s => !s.includes('?'));\n    \n    return {\n        type,\n        keyPoints,\n        questions,\n        statements,\n        totalSentences: sentences.length\n    };\n}\n\n// Enhanced content structure analysis for better topic relevance\nfunction analyzeEnhancedContentStructure(sentences) {\n    const text = sentences.join(' ').toLowerCase();\n    \n    // Enhanced content type detection\n    let type = 'general';\n    if (text.includes('rating') || text.includes('stars') || text.includes('recommend') || text.includes('experience') || text.includes('food') || text.includes('service') || text.includes('quality')) {\n        type = 'review';\n    } else if (text.includes('analysis') || text.includes('sentiment') || text.includes('key points') || text.includes('summary') || text.includes('findings') || text.includes('insights')) {\n        type = 'analysis';\n    } else if (text.includes('hello') || text.includes('hi') || text.includes('how are you') || text.includes('chat') || text.includes('conversation')) {\n        type = 'conversation';\n    } else if (text.includes('customer') || text.includes('service') || text.includes('apologize') || text.includes('resolve') || text.includes('issue') || text.includes('problem')) {\n        type = 'customer_service';\n    }\n    \n    // Enhanced key elements extraction\n    const keyPoints = sentences.filter(s => \n        s.toLowerCase().includes('important') || \n        s.toLowerCase().includes('key') || \n        s.toLowerCase().includes('main') ||\n        s.toLowerCase().includes('primary') ||\n        s.toLowerCase().includes('essential') ||\n        s.toLowerCase().includes('critical')\n    );\n    \n    const positiveAspects = sentences.filter(s => \n        s.toLowerCase().includes('like') || \n        s.toLowerCase().includes('love') || \n        s.toLowerCase().includes('good') ||\n        s.toLowerCase().includes('great') ||\n        s.toLowerCase().includes('amazing') ||\n        s.toLowerCase().includes('excellent') ||\n        s.toLowerCase().includes('outstanding') ||\n        s.toLowerCase().includes('fantastic')\n    );\n    \n    const negativeAspects = sentences.filter(s => \n        s.toLowerCase().includes('disappointing') ||\n        s.toLowerCase().includes('bad') ||\n        s.toLowerCase().includes('poor') ||\n        s.toLowerCase().includes('terrible') ||\n        s.toLowerCase().includes('awful') ||\n        s.toLowerCase().includes('horrible') ||\n        s.toLowerCase().includes('unacceptable')\n    );\n    \n    const suggestions = sentences.filter(s => \n        s.toLowerCase().includes('suggest') || \n        s.toLowerCase().includes('recommend') || \n        s.toLowerCase().includes('could') ||\n        s.toLowerCase().includes('should') ||\n        s.toLowerCase().includes('might') ||\n        s.toLowerCase().includes('consider')\n    );\n    \n    const questions = sentences.filter(s => s.includes('?'));\n    const statements = sentences.filter(s => !s.includes('?'));\n    \n    // Extract topic-specific keywords\n    const topics = extractTopicKeywords(text);\n    \n    return {\n        type,\n        keyPoints,\n        positiveAspects,\n        negativeAspects,\n        suggestions,\n        questions,\n        statements,\n        topics,\n        totalSentences: sentences.length\n    };\n}\n\n// Extract topic-specific keywords for better relevance\nfunction extractTopicKeywords(text) {\n    const topics = [];\n    \n    // Restaurant-related topics\n    if (text.includes('food') || text.includes('restaurant') || text.includes('dining') || text.includes('meal')) {\n        topics.push('restaurant', 'food', 'dining');\n    }\n    \n    // Hotel-related topics\n    if (text.includes('hotel') || text.includes('accommodation') || text.includes('room') || text.includes('stay')) {\n        topics.push('hotel', 'accommodation', 'travel');\n    }\n    \n    // Product-related topics\n    if (text.includes('product') || text.includes('item') || text.includes('purchase') || text.includes('buy')) {\n        topics.push('product', 'shopping', 'consumer');\n    }\n    \n    // Service-related topics\n    if (text.includes('service') || text.includes('support') || text.includes('help') || text.includes('assistance')) {\n        topics.push('service', 'support', 'customer care');\n    }\n    \n    // Technology-related topics\n    if (text.includes('app') || text.includes('software') || text.includes('technology') || text.includes('digital')) {\n        topics.push('technology', 'software', 'digital');\n    }\n    \n    return [...new Set(topics)]; // Remove duplicates\n}\n\n// Format review responses with clear structure\nfunction formatReviewResponse(sentences, structure) {\n    let formatted = '';\n    \n    // Opening statement\n    const opening = sentences.find(s => \n        s.toLowerCase().includes('experience') || \n        s.toLowerCase().includes('visit') || \n        s.toLowerCase().includes('tried') ||\n        s.toLowerCase().includes('went')\n    );\n    \n    if (opening) {\n        formatted += `📝 ${capitalizeFirst(opening)}.\\n\\n`;\n    }\n    \n    // Main points\n    const mainPoints = sentences.filter(s => \n        s.toLowerCase().includes('like') || \n        s.toLowerCase().includes('love') || \n        s.toLowerCase().includes('good') ||\n        s.toLowerCase().includes('great') ||\n        s.toLowerCase().includes('amazing') ||\n        s.toLowerCase().includes('disappointing') ||\n        s.toLowerCase().includes('bad') ||\n        s.toLowerCase().includes('poor')\n    );\n    \n    if (mainPoints.length > 0) {\n        formatted += '✨ Key Highlights:\\n';\n        mainPoints.slice(0, 3).forEach((point, index) => {\n            formatted += `   • ${capitalizeFirst(point)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Additional details\n    const details = sentences.filter(s => \n        !mainPoints.includes(s) && \n        !opening?.includes(s) &&\n        s.length > 20\n    );\n    \n    if (details.length > 0) {\n        formatted += '📋 Additional Details:\\n';\n        details.slice(0, 2).forEach(detail => {\n            formatted += `   ${capitalizeFirst(detail)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Conclusion\n    const conclusion = sentences.find(s => \n        s.toLowerCase().includes('recommend') || \n        s.toLowerCase().includes('return') || \n        s.toLowerCase().includes('worth') ||\n        s.toLowerCase().includes('overall')\n    );\n    \n    if (conclusion) {\n        formatted += `🎯 ${capitalizeFirst(conclusion)}.`;\n    }\n    \n    return formatted.trim();\n}\n\n// Format analysis responses with structured sections\nfunction formatAnalysisResponse(sentences, structure) {\n    let formatted = '';\n    \n    // Summary section\n    const summary = sentences.find(s => \n        s.toLowerCase().includes('overall') || \n        s.toLowerCase().includes('summary') || \n        s.toLowerCase().includes('in conclusion')\n    );\n    \n    if (summary) {\n        formatted += `📊 Summary:\\n${capitalizeFirst(summary)}.\\n\\n`;\n    }\n    \n    // Key findings\n    const findings = sentences.filter(s => \n        s.toLowerCase().includes('found') || \n        s.toLowerCase().includes('discovered') || \n        s.toLowerCase().includes('identified') ||\n        s.toLowerCase().includes('detected')\n    );\n    \n    if (findings.length > 0) {\n        formatted += '🔍 Key Findings:\\n';\n        findings.slice(0, 3).forEach((finding, index) => {\n            formatted += `   ${index + 1}. ${capitalizeFirst(finding)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Recommendations\n    const recommendations = sentences.filter(s => \n        s.toLowerCase().includes('recommend') || \n        s.toLowerCase().includes('suggest') || \n        s.toLowerCase().includes('should') ||\n        s.toLowerCase().includes('could')\n    );\n    \n    if (recommendations.length > 0) {\n        formatted += '💡 Recommendations:\\n';\n        recommendations.slice(0, 3).forEach((rec, index) => {\n            formatted += `   • ${capitalizeFirst(rec)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Next steps\n    const nextSteps = sentences.filter(s => \n        s.toLowerCase().includes('next') || \n        s.toLowerCase().includes('action') || \n        s.toLowerCase().includes('step') ||\n        s.toLowerCase().includes('plan')\n    );\n    \n    if (nextSteps.length > 0) {\n        formatted += '🚀 Next Steps:\\n';\n        nextSteps.slice(0, 2).forEach((step, index) => {\n            formatted += `   ${index + 1}. ${capitalizeFirst(step)}.\\n`;\n        });\n    }\n    \n    return formatted.trim();\n}\n\n// Format conversation responses naturally\nfunction formatConversationResponse(sentences, structure) {\n    let formatted = '';\n    \n    // Greeting or acknowledgment\n    const greeting = sentences.find(s => \n        s.toLowerCase().includes('hello') || \n        s.toLowerCase().includes('hi') || \n        s.toLowerCase().includes('hey') ||\n        s.toLowerCase().includes('thanks') ||\n        s.toLowerCase().includes('thank you')\n    );\n    \n    if (greeting) {\n        formatted += `${capitalizeFirst(greeting)}.\\n\\n`;\n    }\n    \n    // Main response\n    const mainResponse = sentences.filter(s => \n        !greeting?.includes(s) &&\n        s.length > 10\n    );\n    \n    if (mainResponse.length > 0) {\n        formatted += mainResponse.slice(0, 3).map(s => capitalizeFirst(s)).join(' ');\n        formatted += '\\n\\n';\n    }\n    \n    // Follow-up or engagement\n    const followUp = sentences.find(s => \n        s.toLowerCase().includes('what about you') || \n        s.toLowerCase().includes('how about') || \n        s.toLowerCase().includes('what do you think') ||\n        s.toLowerCase().includes('any thoughts')\n    );\n    \n    if (followUp) {\n        formatted += `💭 ${capitalizeFirst(followUp)}`;\n    }\n    \n    return formatted.trim();\n}\n\n// Format general responses with clear structure\nfunction formatGeneralResponse(sentences, structure) {\n    let formatted = '';\n    \n    // Main point\n    const mainPoint = sentences[0];\n    if (mainPoint) {\n        formatted += `📌 ${capitalizeFirst(mainPoint)}.\\n\\n`;\n    }\n    \n    // Supporting points\n    const supportingPoints = sentences.slice(1, 4);\n    if (supportingPoints.length > 0) {\n        formatted += '📋 Details:\\n';\n        supportingPoints.forEach((point, index) => {\n            formatted += `   ${index + 1}. ${capitalizeFirst(point)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Conclusion or takeaway\n    const conclusion = sentences.find(s => \n        s.toLowerCase().includes('therefore') || \n        s.toLowerCase().includes('thus') || \n        s.toLowerCase().includes('in summary') ||\n        s.toLowerCase().includes('overall')\n    );\n    \n    if (conclusion) {\n        formatted += `🎯 ${capitalizeFirst(conclusion)}`;\n    }\n    \n    return formatted.trim();\n}\n\n// Helper function to capitalize first letter\nfunction capitalizeFirst(str) {\n    if (!str || typeof str !== 'string') return str;\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n// Enhanced review response with comprehensive details\nfunction formatEnhancedReviewResponse(sentences, structure) {\n    let formatted = '';\n    \n    // Comprehensive opening with context\n    const opening = sentences.find(s => \n        s.toLowerCase().includes('experience') || \n        s.toLowerCase().includes('visit') || \n        s.toLowerCase().includes('tried') ||\n        s.toLowerCase().includes('went') ||\n        s.toLowerCase().includes('recently') ||\n        s.toLowerCase().includes('last')\n    );\n    \n    if (opening) {\n        formatted += `📝 ${capitalizeFirst(opening)}.\\n\\n`;\n    }\n    \n    // Detailed positive aspects section\n    if (structure.positiveAspects.length > 0) {\n        formatted += '✨ What I Really Enjoyed:\\n';\n        structure.positiveAspects.slice(0, 4).forEach((aspect, index) => {\n            formatted += `   • ${capitalizeFirst(aspect)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Detailed negative aspects section\n    if (structure.negativeAspects.length > 0) {\n        formatted += '⚠️ Areas for Improvement:\\n';\n        structure.negativeAspects.slice(0, 3).forEach((aspect, index) => {\n            formatted += `   • ${capitalizeFirst(aspect)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Key highlights and memorable moments\n    const highlights = sentences.filter(s => \n        s.toLowerCase().includes('highlight') || \n        s.toLowerCase().includes('memorable') || \n        s.toLowerCase().includes('standout') ||\n        s.toLowerCase().includes('impressive') ||\n        s.toLowerCase().includes('notable')\n    );\n    \n    if (highlights.length > 0) {\n        formatted += '🌟 Memorable Highlights:\\n';\n        highlights.slice(0, 3).forEach((highlight, index) => {\n            formatted += `   ${index + 1}. ${capitalizeFirst(highlight)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Detailed experience description\n    const experienceDetails = sentences.filter(s => \n        s.toLowerCase().includes('atmosphere') || \n        s.toLowerCase().includes('ambiance') || \n        s.toLowerCase().includes('environment') ||\n        s.toLowerCase().includes('setting') ||\n        s.toLowerCase().includes('vibe') ||\n        s.toLowerCase().includes('feel')\n    );\n    \n    if (experienceDetails.length > 0) {\n        formatted += '🏠 Atmosphere & Environment:\\n';\n        experienceDetails.slice(0, 2).forEach(detail => {\n            formatted += `   ${capitalizeFirst(detail)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Value and pricing considerations\n    const valueAspects = sentences.filter(s => \n        s.toLowerCase().includes('price') || \n        s.toLowerCase().includes('cost') || \n        s.toLowerCase().includes('value') ||\n        s.toLowerCase().includes('worth') ||\n        s.toLowerCase().includes('expensive') ||\n        s.toLowerCase().includes('affordable')\n    );\n    \n    if (valueAspects.length > 0) {\n        formatted += '💰 Value & Pricing:\\n';\n        valueAspects.slice(0, 2).forEach(aspect => {\n            formatted += `   ${capitalizeFirst(aspect)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Recommendations and suggestions\n    if (structure.suggestions.length > 0) {\n        formatted += '💡 Recommendations:\\n';\n        structure.suggestions.slice(0, 3).forEach((suggestion, index) => {\n            formatted += `   • ${capitalizeFirst(suggestion)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Comprehensive conclusion\n    const conclusion = sentences.find(s => \n        s.toLowerCase().includes('recommend') || \n        s.toLowerCase().includes('return') || \n        s.toLowerCase().includes('worth') ||\n        s.toLowerCase().includes('overall') ||\n        s.toLowerCase().includes('conclusion') ||\n        s.toLowerCase().includes('final')\n    );\n    \n    if (conclusion) {\n        formatted += `🎯 ${capitalizeFirst(conclusion)}.`;\n    } else {\n        // Generate a comprehensive conclusion based on sentiment\n        const positiveCount = structure.positiveAspects.length;\n        const negativeCount = structure.negativeAspects.length;\n        \n        if (positiveCount > negativeCount) {\n            formatted += `🎯 Overall, this was a positive experience that I would recommend to others.`;\n        } else if (negativeCount > positiveCount) {\n            formatted += `🎯 While there were some issues, there's potential for improvement with the right changes.`;\n        } else {\n            formatted += `🎯 This was a mixed experience with both positive and negative aspects to consider.`;\n        }\n    }\n    \n    return formatted.trim();\n}\n\n// Enhanced analysis response with detailed insights\nfunction formatEnhancedAnalysisResponse(sentences, structure) {\n    let formatted = '';\n    \n    // Executive summary\n    const summary = sentences.find(s => \n        s.toLowerCase().includes('overall') || \n        s.toLowerCase().includes('summary') || \n        s.toLowerCase().includes('in conclusion') ||\n        s.toLowerCase().includes('main takeaway')\n    );\n    \n    if (summary) {\n        formatted += `📊 Executive Summary:\\n${capitalizeFirst(summary)}.\\n\\n`;\n    }\n    \n    // Detailed key findings with context\n    const findings = sentences.filter(s => \n        s.toLowerCase().includes('found') || \n        s.toLowerCase().includes('discovered') || \n        s.toLowerCase().includes('identified') ||\n        s.toLowerCase().includes('detected') ||\n        s.toLowerCase().includes('observed') ||\n        s.toLowerCase().includes('noticed')\n    );\n    \n    if (findings.length > 0) {\n        formatted += '🔍 Detailed Findings:\\n';\n        findings.slice(0, 5).forEach((finding, index) => {\n            formatted += `   ${index + 1}. ${capitalizeFirst(finding)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Sentiment analysis breakdown\n    const sentimentSentences = sentences.filter(s => \n        s.toLowerCase().includes('positive') || \n        s.toLowerCase().includes('negative') || \n        s.toLowerCase().includes('neutral') ||\n        s.toLowerCase().includes('sentiment') ||\n        s.toLowerCase().includes('emotion') ||\n        s.toLowerCase().includes('tone')\n    );\n    \n    if (sentimentSentences.length > 0) {\n        formatted += '😊 Sentiment Analysis:\\n';\n        sentimentSentences.slice(0, 3).forEach((sentiment, index) => {\n            formatted += `   • ${capitalizeFirst(sentiment)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Topic-specific insights\n    if (structure.topics.length > 0) {\n        formatted += `📋 ${structure.topics[0].charAt(0).toUpperCase() + structure.topics[0].slice(1)}-Specific Insights:\\n`;\n        const topicSentences = sentences.filter(s => \n            structure.topics.some(topic => s.toLowerCase().includes(topic))\n        );\n        topicSentences.slice(0, 3).forEach((insight, index) => {\n            formatted += `   ${index + 1}. ${capitalizeFirst(insight)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Strategic recommendations\n    if (structure.suggestions.length > 0) {\n        formatted += '💡 Strategic Recommendations:\\n';\n        structure.suggestions.slice(0, 4).forEach((rec, index) => {\n            formatted += `   • ${capitalizeFirst(rec)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Action items and next steps\n    const actionItems = sentences.filter(s => \n        s.toLowerCase().includes('action') || \n        s.toLowerCase().includes('next') || \n        s.toLowerCase().includes('step') ||\n        s.toLowerCase().includes('plan') ||\n        s.toLowerCase().includes('implement') ||\n        s.toLowerCase().includes('improve')\n    );\n    \n    if (actionItems.length > 0) {\n        formatted += '🚀 Action Items & Next Steps:\\n';\n        actionItems.slice(0, 4).forEach((item, index) => {\n            formatted += `   ${index + 1}. ${capitalizeFirst(item)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Impact assessment\n    const impactSentences = sentences.filter(s => \n        s.toLowerCase().includes('impact') || \n        s.toLowerCase().includes('effect') || \n        s.toLowerCase().includes('result') ||\n        s.toLowerCase().includes('outcome') ||\n        s.toLowerCase().includes('consequence')\n    );\n    \n    if (impactSentences.length > 0) {\n        formatted += '📈 Impact Assessment:\\n';\n        impactSentences.slice(0, 2).forEach((impact, index) => {\n            formatted += `   • ${capitalizeFirst(impact)}.\\n`;\n        });\n    }\n    \n    return formatted.trim();\n}\n\n// Enhanced conversation response with more depth\nfunction formatEnhancedConversationResponse(sentences, structure) {\n    let formatted = '';\n    \n    // Warm greeting or acknowledgment\n    const greeting = sentences.find(s => \n        s.toLowerCase().includes('hello') || \n        s.toLowerCase().includes('hi') || \n        s.toLowerCase().includes('hey') ||\n        s.toLowerCase().includes('thanks') ||\n        s.toLowerCase().includes('thank you') ||\n        s.toLowerCase().includes('appreciate')\n    );\n    \n    if (greeting) {\n        formatted += `${capitalizeFirst(greeting)}.\\n\\n`;\n    }\n    \n    // Main response with expanded context\n    const mainResponse = sentences.filter(s => \n        !greeting?.includes(s) &&\n        s.length > 10\n    );\n    \n    if (mainResponse.length > 0) {\n        formatted += '💭 My Thoughts:\\n';\n        mainResponse.slice(0, 4).forEach((response, index) => {\n            formatted += `   ${capitalizeFirst(response)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Personal insights or experiences\n    const personalInsights = sentences.filter(s => \n        s.toLowerCase().includes('think') || \n        s.toLowerCase().includes('believe') || \n        s.toLowerCase().includes('feel') ||\n        s.toLowerCase().includes('experience') ||\n        s.toLowerCase().includes('opinion') ||\n        s.toLowerCase().includes('view')\n    );\n    \n    if (personalInsights.length > 0) {\n        formatted += '🤔 Personal Perspective:\\n';\n        personalInsights.slice(0, 2).forEach((insight, index) => {\n            formatted += `   • ${capitalizeFirst(insight)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Engaging follow-up questions\n    const followUp = sentences.find(s => \n        s.toLowerCase().includes('what about you') || \n        s.toLowerCase().includes('how about') || \n        s.toLowerCase().includes('what do you think') ||\n        s.toLowerCase().includes('any thoughts') ||\n        s.toLowerCase().includes('your experience') ||\n        s.toLowerCase().includes('your opinion')\n    );\n    \n    if (followUp) {\n        formatted += `💬 ${capitalizeFirst(followUp)}`;\n    } else {\n        // Generate engaging follow-up\n        formatted += `💬 What are your thoughts on this topic? I'd love to hear your perspective!`;\n    }\n    \n    return formatted.trim();\n}\n\n// Enhanced customer service response with comprehensive approach\nfunction formatEnhancedCustomerServiceResponse(sentences, structure) {\n    let formatted = '';\n    \n    // Empathetic acknowledgment\n    const acknowledgment = sentences.find(s => \n        s.toLowerCase().includes('understand') || \n        s.toLowerCase().includes('apologize') || \n        s.toLowerCase().includes('sorry') ||\n        s.toLowerCase().includes('concern') ||\n        s.toLowerCase().includes('issue') ||\n        s.toLowerCase().includes('problem')\n    );\n    \n    if (acknowledgment) {\n        formatted += `🤝 ${capitalizeFirst(acknowledgment)}.\\n\\n`;\n    }\n    \n    // Detailed problem understanding\n    const problemAnalysis = sentences.filter(s => \n        s.toLowerCase().includes('situation') || \n        s.toLowerCase().includes('circumstance') || \n        s.toLowerCase().includes('experience') ||\n        s.toLowerCase().includes('issue') ||\n        s.toLowerCase().includes('problem') ||\n        s.toLowerCase().includes('concern')\n    );\n    \n    if (problemAnalysis.length > 0) {\n        formatted += '📋 Understanding Your Situation:\\n';\n        problemAnalysis.slice(0, 3).forEach((analysis, index) => {\n            formatted += `   • ${capitalizeFirst(analysis)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Immediate solutions and actions\n    const solutions = sentences.filter(s => \n        s.toLowerCase().includes('solution') || \n        s.toLowerCase().includes('resolve') || \n        s.toLowerCase().includes('fix') ||\n        s.toLowerCase().includes('address') ||\n        s.toLowerCase().includes('correct') ||\n        s.toLowerCase().includes('improve')\n    );\n    \n    if (solutions.length > 0) {\n        formatted += '🔧 Immediate Solutions:\\n';\n        solutions.slice(0, 4).forEach((solution, index) => {\n            formatted += `   ${index + 1}. ${capitalizeFirst(solution)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Long-term improvements\n    const improvements = sentences.filter(s => \n        s.toLowerCase().includes('improve') || \n        s.toLowerCase().includes('enhance') || \n        s.toLowerCase().includes('better') ||\n        s.toLowerCase().includes('upgrade') ||\n        s.toLowerCase().includes('develop') ||\n        s.toLowerCase().includes('advance')\n    );\n    \n    if (improvements.length > 0) {\n        formatted += '🚀 Long-term Improvements:\\n';\n        improvements.slice(0, 3).forEach((improvement, index) => {\n            formatted += `   • ${capitalizeFirst(improvement)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Compensation or goodwill gestures\n    const compensation = sentences.filter(s => \n        s.toLowerCase().includes('compensate') || \n        s.toLowerCase().includes('refund') || \n        s.toLowerCase().includes('discount') ||\n        s.toLowerCase().includes('credit') ||\n        s.toLowerCase().includes('offer') ||\n        s.toLowerCase().includes('gesture')\n    );\n    \n    if (compensation.length > 0) {\n        formatted += '🎁 Goodwill Gestures:\\n';\n        compensation.slice(0, 2).forEach((gesture, index) => {\n            formatted += `   • ${capitalizeFirst(gesture)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Follow-up and contact information\n    const followUp = sentences.find(s => \n        s.toLowerCase().includes('contact') || \n        s.toLowerCase().includes('reach') || \n        s.toLowerCase().includes('follow up') ||\n        s.toLowerCase().includes('get in touch') ||\n        s.toLowerCase().includes('available')\n    );\n    \n    if (followUp) {\n        formatted += `📞 ${capitalizeFirst(followUp)}`;\n    } else {\n        formatted += `📞 Please don't hesitate to reach out if you need any further assistance.`;\n    }\n    \n    return formatted.trim();\n}\n\n// Enhanced general response with comprehensive structure\nfunction formatEnhancedGeneralResponse(sentences, structure) {\n    let formatted = '';\n    \n    // Main point with context\n    const mainPoint = sentences[0];\n    if (mainPoint) {\n        formatted += `📌 Main Point:\\n${capitalizeFirst(mainPoint)}.\\n\\n`;\n    }\n    \n    // Detailed explanation\n    const explanations = sentences.slice(1, 6);\n    if (explanations.length > 0) {\n        formatted += '📋 Detailed Explanation:\\n';\n        explanations.forEach((explanation, index) => {\n            formatted += `   ${index + 1}. ${capitalizeFirst(explanation)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Key insights and takeaways\n    const insights = sentences.filter(s => \n        s.toLowerCase().includes('important') || \n        s.toLowerCase().includes('key') || \n        s.toLowerCase().includes('essential') ||\n        s.toLowerCase().includes('critical') ||\n        s.toLowerCase().includes('significant') ||\n        s.toLowerCase().includes('notable')\n    );\n    \n    if (insights.length > 0) {\n        formatted += '💡 Key Insights:\\n';\n        insights.slice(0, 3).forEach((insight, index) => {\n            formatted += `   • ${capitalizeFirst(insight)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Practical applications or examples\n    const applications = sentences.filter(s => \n        s.toLowerCase().includes('example') || \n        s.toLowerCase().includes('instance') || \n        s.toLowerCase().includes('case') ||\n        s.toLowerCase().includes('scenario') ||\n        s.toLowerCase().includes('situation') ||\n        s.toLowerCase().includes('application')\n    );\n    \n    if (applications.length > 0) {\n        formatted += '🔍 Practical Examples:\\n';\n        applications.slice(0, 2).forEach((app, index) => {\n            formatted += `   ${index + 1}. ${capitalizeFirst(app)}.\\n`;\n        });\n        formatted += '\\n';\n    }\n    \n    // Comprehensive conclusion\n    const conclusion = sentences.find(s => \n        s.toLowerCase().includes('therefore') || \n        s.toLowerCase().includes('thus') || \n        s.toLowerCase().includes('in summary') ||\n        s.toLowerCase().includes('overall') ||\n        s.toLowerCase().includes('conclusion') ||\n        s.toLowerCase().includes('final')\n    );\n    \n    if (conclusion) {\n        formatted += `🎯 ${capitalizeFirst(conclusion)}`;\n    } else {\n        // Generate a comprehensive conclusion\n        formatted += `🎯 In summary, this topic encompasses multiple important aspects that deserve careful consideration and thoughtful discussion.`;\n    }\n    \n    return formatted.trim();\n}\n\nclass LLMService {\n    constructor() {\n        this.apiKey = process.env.REACT_APP_OPENAI_API_KEY || '';\n        this.anthropicKey = process.env.REACT_APP_ANTHROPIC_API_KEY || '';\n        this.useLocalFallback = true;\n    }\n\n    // Analyze voice input with sentiment, key points, and suggestions\n    async analyzeVoiceInput(transcript, context = {}) {\n        if (!transcript || transcript.trim().length === 0) {\n            return {\n                success: false,\n                error: 'No transcript provided'\n            };\n        }\n\n        try {\n            // Try OpenAI first\n            if (this.apiKey) {\n                const result = await this.analyzeWithOpenAI(transcript, context);\n                if (result.success) return result;\n            }\n\n            // Try Anthropic if OpenAI fails\n            if (this.anthropicKey) {\n                const result = await this.analyzeWithAnthropic(transcript, context);\n                if (result.success) return result;\n            }\n\n            // Fallback to local analysis\n            if (this.useLocalFallback) {\n                return this.analyzeLocally(transcript, context);\n            }\n\n            return {\n                success: false,\n                error: 'No AI service available'\n            };\n\n        } catch (error) {\n            console.error('LLM analysis error:', error);\n            return {\n                success: false,\n                error: error.message || 'Analysis failed'\n            };\n        }\n    }\n\n    // NVIDIA Llama 3.3 Nemotron Super Analysis with Enhanced Thinking and Structure\n    async analyzeWithOpenAI(transcript, context) {\n        try {\n            const response = await fetch('https://api.openai.com/v1/chat/completions', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${this.apiKey}`\n                },\n                body: JSON.stringify({\n                    model: 'gpt-4',\n                    messages: [\n                        {\n                            role: 'system',\n                            content: `You are an expert voice analysis assistant with deep reasoning capabilities and excellent conversational understanding. \n\n**ENHANCED THINKING PROCESS**:\n1. **CONTEXTUAL UNDERSTANDING**: What is the person really saying in this specific context?\n2. **EMOTIONAL INTELLIGENCE**: How is the speaker feeling? What emotions are expressed?\n3. **INTENT ANALYSIS**: What is the speaker trying to accomplish or communicate?\n4. **STRUCTURAL ANALYSIS**: How is the content organized and what's the logical flow?\n5. **CONVERSATIONAL IMPACT**: How does this fit into a broader conversation or interaction?\n\n**STRUCTURED ANALYSIS APPROACH**:\n- Analyze both explicit content and implicit meanings\n- Consider emotional undertones and conversational nuances\n- Identify key themes and how they connect\n- Evaluate the effectiveness of communication\n- Provide insights that enhance conversational understanding\n\n**RESPONSE STRUCTURE**:\n- Organize findings in a logical, easy-to-follow format\n- Highlight the most important insights first\n- Connect related points to show understanding\n- Provide actionable suggestions that improve communication\n\nAnalyze the user's voice input and provide structured insights in JSON format:\n{\n    \"sentiment\": \"positive/negative/neutral\",\n    \"confidence\": 0.0-1.0,\n    \"keyPoints\": [\"point1\", \"point2\"],\n    \"topics\": [\"topic1\", \"topic2\"],\n    \"suggestions\": [\"suggestion1\", \"suggestion2\"],\n    \"tone\": \"professional/casual/emotional/etc\",\n    \"actionItems\": [\"action1\", \"action2\"],\n    \"summary\": \"brief summary\",\n    \"wordCount\": number,\n    \"speakingPace\": \"fast/normal/slow\",\n    \"conversationalFlow\": \"structured/rambling/focused\",\n    \"engagementLevel\": \"high/medium/low\"\n}`\n                        },\n                        {\n                            role: 'user',\n                            content: `Analyze this voice input with enhanced conversational understanding: \"${transcript}\"\n                            \nContext: ${JSON.stringify(context)}`\n                        }\n                    ],\n                    temperature: 0.4,\n                    max_tokens: 500\n                })\n            });\n\n            if (!response.ok) {\n                throw new Error(`OpenAI API error: ${response.status}`);\n            }\n\n            const data = await response.json();\n            const analysis = JSON.parse(data.choices[0].message.content);\n\n            return {\n                success: true,\n                provider: 'Meta Llama 3.1 70B Instruct',\n                analysis: {\n                    ...analysis,\n                    transcript: transcript,\n                    timestamp: new Date().toISOString()\n                }\n            };\n\n        } catch (error) {\n            console.error('NVIDIA Llama analysis failed:', error);\n            throw error;\n        }\n    }\n\n    // Anthropic Claude Analysis\n    async analyzeWithAnthropic(transcript, context) {\n        try {\n            const response = await fetch('https://api.anthropic.com/v1/messages', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-api-key': this.anthropicKey,\n                    'anthropic-version': '2023-06-01'\n                },\n                body: JSON.stringify({\n                    model: 'claude-3-sonnet-20240229',\n                    max_tokens: 500,\n                    messages: [\n                        {\n                            role: 'user',\n                            content: `Analyze this voice input and provide a JSON response with:\n- sentiment (positive/negative/neutral)\n- confidence (0.0-1.0)\n- keyPoints (array of main points)\n- topics (array of topics discussed)\n- suggestions (array of improvement suggestions)\n- tone (professional/casual/emotional/etc)\n- actionItems (array of next steps)\n- summary (brief summary)\n- wordCount (number)\n- speakingPace (fast/normal/slow)\n\nVoice input: \"${transcript}\"\nContext: ${JSON.stringify(context)}`\n                        }\n                    ]\n                })\n            });\n\n            if (!response.ok) {\n                throw new Error(`Anthropic API error: ${response.status}`);\n            }\n\n            const data = await response.json();\n            const analysis = JSON.parse(data.content[0].text);\n\n            return {\n                success: true,\n                provider: 'Anthropic Claude',\n                analysis: {\n                    ...analysis,\n                    transcript: transcript,\n                    timestamp: new Date().toISOString()\n                }\n            };\n\n        } catch (error) {\n            console.error('Anthropic analysis failed:', error);\n            throw error;\n        }\n    }\n\n    // Local fallback analysis (basic sentiment and key points)\n    analyzeLocally(transcript, context) {\n        const words = transcript.toLowerCase().split(/\\s+/);\n        const wordCount = words.length;\n\n        // Basic sentiment analysis\n        const positiveWords = ['good', 'great', 'excellent', 'amazing', 'wonderful', 'love', 'like', 'happy', 'satisfied', 'perfect'];\n        const negativeWords = ['bad', 'terrible', 'awful', 'hate', 'dislike', 'unhappy', 'disappointed', 'poor', 'worst', 'horrible'];\n        \n        let positiveCount = 0;\n        let negativeCount = 0;\n\n        words.forEach(word => {\n            if (positiveWords.includes(word)) positiveCount++;\n            if (negativeWords.includes(word)) negativeCount++;\n        });\n\n        let sentiment = 'neutral';\n        let confidence = 0.5;\n\n        if (positiveCount > negativeCount) {\n            sentiment = 'positive';\n            confidence = Math.min(0.9, 0.5 + (positiveCount - negativeCount) * 0.1);\n        } else if (negativeCount > positiveCount) {\n            sentiment = 'negative';\n            confidence = Math.min(0.9, 0.5 + (negativeCount - positiveCount) * 0.1);\n        }\n\n        // Extract key points (simple approach)\n        const sentences = transcript.split(/[.!?]+/).filter(s => s.trim().length > 0);\n        const keyPoints = sentences.slice(0, 3).map(s => s.trim());\n\n        // Determine speaking pace\n        const speakingPace = wordCount > 200 ? 'fast' : wordCount > 100 ? 'normal' : 'slow';\n\n        // Basic tone detection\n        const tone = this.detectTone(transcript);\n\n        return {\n            success: true,\n            provider: 'Local Analysis',\n            analysis: {\n                sentiment,\n                confidence,\n                keyPoints,\n                topics: this.extractTopics(transcript),\n                suggestions: this.generateSuggestions(sentiment, wordCount, tone),\n                tone,\n                actionItems: this.generateActionItems(transcript),\n                summary: sentences[0] || 'No clear summary available',\n                wordCount,\n                speakingPace,\n                transcript,\n                timestamp: new Date().toISOString()\n            }\n        };\n    }\n\n    // Helper methods for local analysis\n    detectTone(transcript) {\n        const text = transcript.toLowerCase();\n        \n        if (text.includes('!') || text.includes('amazing') || text.includes('wow')) {\n            return 'enthusiastic';\n        } else if (text.includes('please') || text.includes('thank you') || text.includes('appreciate')) {\n            return 'polite';\n        } else if (text.includes('problem') || text.includes('issue') || text.includes('concern')) {\n            return 'concerned';\n        } else if (text.includes('think') || text.includes('believe') || text.includes('consider')) {\n            return 'thoughtful';\n        } else {\n            return 'neutral';\n        }\n    }\n\n    extractTopics(transcript) {\n        const text = transcript.toLowerCase();\n        const topics = [];\n\n        if (text.includes('work') || text.includes('job') || text.includes('career')) {\n            topics.push('work/career');\n        }\n        if (text.includes('family') || text.includes('home') || text.includes('personal')) {\n            topics.push('personal/family');\n        }\n        if (text.includes('health') || text.includes('exercise') || text.includes('fitness')) {\n            topics.push('health/fitness');\n        }\n        if (text.includes('money') || text.includes('finance') || text.includes('budget')) {\n            topics.push('finance');\n        }\n        if (text.includes('travel') || text.includes('vacation') || text.includes('trip')) {\n            topics.push('travel');\n        }\n\n        return topics.length > 0 ? topics : ['general'];\n    }\n\n    generateSuggestions(sentiment, wordCount, tone) {\n        const suggestions = [];\n\n        if (wordCount < 10) {\n            suggestions.push('Try speaking for longer to provide more context');\n        }\n        if (wordCount > 200) {\n            suggestions.push('Consider breaking your thoughts into smaller segments');\n        }\n        if (sentiment === 'negative') {\n            suggestions.push('Consider focusing on positive aspects or solutions');\n        }\n        if (tone === 'concerned') {\n            suggestions.push('Try to balance concerns with potential solutions');\n        }\n\n        return suggestions.length > 0 ? suggestions : ['Your voice input was clear and well-structured'];\n    }\n\n    generateActionItems(transcript) {\n        const text = transcript.toLowerCase();\n        const actions = [];\n\n        if (text.includes('need to') || text.includes('should') || text.includes('must')) {\n            actions.push('Review and prioritize mentioned tasks');\n        }\n        if (text.includes('problem') || text.includes('issue')) {\n            actions.push('Address the mentioned concerns');\n        }\n        if (text.includes('plan') || text.includes('schedule')) {\n            actions.push('Create a plan based on your input');\n        }\n\n        return actions.length > 0 ? actions : ['Consider what next steps you\\'d like to take'];\n    }\n\n    // Generate review from voice input\n    async generateReviewFromVoice(transcript, reviewType = 'general', rating = 5) {\n        const analysis = await this.analyzeVoiceInput(transcript, { reviewType, rating });\n        \n        if (!analysis.success) {\n            return analysis;\n        }\n\n        // Generate review text based on analysis\n        const reviewText = this.formatReviewText(analysis.analysis, reviewType, rating);\n        \n        return {\n            ...analysis,\n            reviewText\n        };\n    }\n\n    formatReviewText(analysis, reviewType, rating) {\n        const { sentiment, keyPoints, tone, summary } = analysis;\n        \n        let reviewText = '';\n        \n        // Start with a natural opening based on sentiment and tone\n        if (sentiment === 'positive') {\n            if (tone === 'enthusiastic') {\n                reviewText += `Had an amazing time at this ${reviewType}! `;\n            } else if (tone === 'casual') {\n                reviewText += `Really enjoyed this ${reviewType}. `;\n            } else {\n                reviewText += `Great experience with this ${reviewType}. `;\n            }\n        } else if (sentiment === 'negative') {\n            if (tone === 'critical') {\n                reviewText += `Unfortunately, this ${reviewType} was disappointing. `;\n            } else {\n                reviewText += `Wasn't impressed with this ${reviewType}. `;\n            }\n        } else {\n            reviewText += `Mixed experience with this ${reviewType}. `;\n        }\n        \n        // Add key points naturally\n        if (keyPoints && keyPoints.length > 0) {\n            const points = keyPoints.slice(0, 2); // Limit to 2 main points\n            if (points.length === 1) {\n                reviewText += points[0];\n            } else {\n                reviewText += points.join(' ');\n            }\n        } else if (summary) {\n            reviewText += summary;\n        }\n        \n        // Add natural closing based on sentiment and tone\n        if (sentiment === 'positive') {\n            if (tone === 'enthusiastic') {\n                reviewText += ' Definitely worth checking out!';\n            } else if (tone === 'casual') {\n                reviewText += ' Would go back for sure.';\n            } else {\n                reviewText += ' Recommended.';\n            }\n        } else if (sentiment === 'negative') {\n            if (tone === 'critical') {\n                reviewText += ' Wouldn\\'t recommend.';\n            } else {\n                reviewText += ' Probably won\\'t return.';\n            }\n        } else {\n            reviewText += ' Decent option if you\\'re in the area.';\n        }\n        \n        // Add rating subtly at the end\n        if (rating && rating > 0) {\n            reviewText += `\\n\\nRating: ${rating}/5`;\n        }\n        \n        // Clean the response before returning\n        return cleanAIResponse(reviewText);\n    }\n}\n\nexport default new LLMService(); ","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport VoiceAnalysis from '../components/VoiceAnalysis';\nimport LocationAttachment from '../components/LocationAttachment';\nimport llmService from '../services/llmService';\nimport './ReviewGenerator.css';\n\nconst ReviewGenerator = () => {\n    const [reviewData, setReviewData] = useState({\n        reviewType: 'restaurant',\n        rating: 5,\n        tone: 'professional',\n        pros: '',\n        cons: '',\n        experience: ''\n    });\n    const [generatedReview, setGeneratedReview] = useState('');\n    const [isGenerating, setIsGenerating] = useState(false);\n    const [analysis, setAnalysis] = useState(null);\n    const [isAnalyzing, setIsAnalyzing] = useState(false);\n    const [showAnalysis, setShowAnalysis] = useState(false);\n    const [locationData, setLocationData] = useState(null);\n    const history = useHistory();\n    const [ratingAutoAdjusted, setRatingAutoAdjusted] = useState(false);\n    const [modelInfo, setModelInfo] = useState(null);\n\n    // Load model information on component mount\n    useEffect(() => {\n        fetchModelInfo();\n    }, []);\n\n    const fetchModelInfo = async () => {\n        try {\n            const res = await fetch('/api/models');\n            const data = await res.json();\n            if (data.success) {\n                const reviewModel = data.models.find(m => m.useCase === 'review_generation');\n                setModelInfo(reviewModel);\n            }\n        } catch (error) {\n            console.warn('Failed to fetch model info:', error);\n        }\n    };\n\n    const reviewTypes = [\n        { value: 'restaurant', label: 'Restaurant', icon: '🍽️', color: '#ff6b6b' },\n        { value: 'hotel', label: 'Hotel', icon: '🏨', color: '#20c997' },\n        { value: 'product', label: 'Product', icon: '📱', color: '#f7b731' },\n        { value: 'service', label: 'Service', icon: '🛠️', color: '#4b7bec' },\n        { value: 'experience', label: 'Experience', icon: '🎯', color: '#a55eea' },\n        { value: 'app', label: 'App/Software', icon: '💻', color: '#45aaf2' },\n        { value: 'place', label: 'Place/Location', icon: '📍', color: '#26de81' },\n        { value: 'general', label: 'General', icon: '📝', color: '#778ca3' }\n    ];\n\n    const tones = [\n        { value: 'professional', label: 'Professional', icon: '👔', color: '#667eea' },\n        { value: 'casual', label: 'Casual', icon: '😊', color: '#ffa726' },\n        { value: 'enthusiastic', label: 'Enthusiastic', icon: '🎉', color: '#ff7043' },\n        { value: 'critical', label: 'Critical', icon: '🤔', color: '#ef5350' },\n        { value: 'balanced', label: 'Balanced', icon: '⚖️', color: '#66bb6a' }\n    ];\n\n    const handleInputChange = (field, value) => {\n        setReviewData(prev => {\n            const updatedData = {\n                ...prev,\n                [field]: value\n            };\n            \n            // Auto-adjust rating based on content for text fields\n            if (field === 'pros' || field === 'cons' || field === 'experience') {\n                const allContent = [\n                    updatedData.pros,\n                    updatedData.cons, \n                    updatedData.experience\n                ].filter(Boolean).join(' ');\n                \n                const suggestedRating = autoAdjustRating(allContent);\n                if (suggestedRating && suggestedRating !== updatedData.rating) {\n                    updatedData.rating = suggestedRating;\n                    setRatingAutoAdjusted(true);\n                    console.log(`Auto-adjusted rating to ${suggestedRating} based on content`);\n                }\n            }\n            \n            // Clear auto-adjusted flag when user manually changes rating\n            if (field === 'rating') {\n                setRatingAutoAdjusted(false);\n            }\n            \n            return updatedData;\n        });\n    };\n\n    const generateReview = () => {\n        // Validate input\n        const hasContent = reviewData.pros.trim() || reviewData.cons.trim() || reviewData.experience.trim();\n        if (!hasContent) {\n            alert('Please provide some content in at least one field (pros, cons, or experience) before generating a review.');\n            return;\n        }\n\n        setIsGenerating(true);\n        \n        try {\n            const review = createReview(reviewData, locationData);\n            setGeneratedReview(review);\n            \n            // Save review to localStorage for history\n            const reviewHistory = JSON.parse(localStorage.getItem('reviewHistory') || '[]');\n            const newReview = {\n                id: Date.now(),\n                reviewType: reviewData.reviewType,\n                itemName: `${reviewData.reviewType.charAt(0).toUpperCase() + reviewData.reviewType.slice(1)} Review`,\n                category: reviewData.reviewType,\n                rating: reviewData.rating,\n                tone: reviewData.tone,\n                pros: reviewData.pros,\n                cons: reviewData.cons,\n                experience: reviewData.experience,\n                location: locationData,\n                review: review,\n                timestamp: new Date().toISOString()\n            };\n            reviewHistory.unshift(newReview);\n            localStorage.setItem('reviewHistory', JSON.stringify(reviewHistory.slice(0, 50))); // Keep last 50\n            \n            // Auto-analyze the generated review\n            setTimeout(() => {\n                analyzeReview(review);\n            }, 500);\n        } catch (error) {\n            console.error('Review generation error:', error);\n            alert('Failed to generate review. Please try again.');\n        } finally {\n            setIsGenerating(false);\n        }\n    };\n\n    const analyzeReview = async (reviewText) => {\n        if (!reviewText || reviewText.trim().length === 0) {\n            return;\n        }\n\n        setIsAnalyzing(true);\n        try {\n            const result = await llmService.analyzeVoiceInput(reviewText, {\n                reviewType: reviewData.reviewType,\n                rating: reviewData.rating,\n                tone: reviewData.tone,\n                isGeneratedReview: true,\n                timestamp: new Date().toISOString()\n            });\n            \n            if (result.success) {\n                setAnalysis(result);\n                setShowAnalysis(true);\n                console.log('Review analysis result:', result);\n            } else {\n                console.warn('Analysis returned with errors:', result.error);\n                setAnalysis({\n                    success: false,\n                    error: result.error || 'Analysis failed'\n                });\n            }\n        } catch (error) {\n            console.error('Review analysis failed:', error);\n            setAnalysis({\n                success: false,\n                error: error.message || 'Analysis failed'\n            });\n        } finally {\n            setIsAnalyzing(false);\n        }\n    };\n\n    const createReview = (data, location = null) => {\n        const { reviewType, rating, tone, pros, cons, experience } = data;\n        \n        // Define different sentence structures and formats for different review types\n        const reviewFormats = {\n            restaurant: {\n                openings: {\n                    positive: [\n                        \"Just had dinner at this place and it was absolutely fantastic!\",\n                        \"Visited this restaurant recently and wow, what an experience!\",\n                        \"Tried this spot for the first time and I'm already planning my next visit.\",\n                        \"Went here for a meal and left completely satisfied.\",\n                        \"Stopped by this restaurant and was blown away by the quality.\"\n                    ],\n                    negative: [\n                        \"Unfortunately, this restaurant didn't live up to expectations.\",\n                        \"Had high hopes for this place, but it fell short.\",\n                        \"Visited this restaurant and left disappointed.\",\n                        \"Tried this spot and it wasn't what I was looking for.\",\n                        \"Went here expecting great food, but that wasn't the case.\"\n                    ],\n                    neutral: [\n                        \"This restaurant was okay, nothing special.\",\n                        \"Had a decent meal here, but it wasn't memorable.\",\n                        \"Visited this place and it was just average.\",\n                        \"Tried this restaurant and it was fine, but not great.\",\n                        \"Went here and it was a mixed experience.\"\n                    ]\n                },\n                prosFormat: \"What really stood out was\",\n                consFormat: \"Areas that could use improvement include\",\n                experienceFormat: \"The overall dining experience was\"\n            },\n            hotel: {\n                openings: {\n                    positive: [\n                        \"Stayed at this hotel and it exceeded all expectations!\",\n                        \"Booked a room here and was impressed from check-in to check-out.\",\n                        \"Spent the night at this place and it was absolutely perfect.\",\n                        \"Checked into this hotel and immediately felt at home.\",\n                        \"Had an overnight stay here and it was exceptional.\"\n                    ],\n                    negative: [\n                        \"Unfortunately, this hotel didn't meet basic standards.\",\n                        \"Booked a room here and was disappointed with the experience.\",\n                        \"Stayed at this place and it was far from comfortable.\",\n                        \"Checked into this hotel and immediately noticed issues.\",\n                        \"Had an overnight stay here and it was problematic.\"\n                    ],\n                    neutral: [\n                        \"This hotel was adequate for the price.\",\n                        \"Stayed here and it was okay, nothing special.\",\n                        \"Booked a room and it was functional but basic.\",\n                        \"Checked into this hotel and it was average.\",\n                        \"Had an overnight stay here and it was fine.\"\n                    ]\n                },\n                prosFormat: \"The best aspects were\",\n                consFormat: \"Issues that need attention include\",\n                experienceFormat: \"My overall stay was\"\n            },\n            product: {\n                openings: {\n                    positive: [\n                        \"Bought this product and it's been a game-changer!\",\n                        \"Tried out this item and I'm thoroughly impressed.\",\n                        \"Purchased this recently and it's exceeded expectations.\",\n                        \"Got my hands on this and it's absolutely worth it.\",\n                        \"Tested this product and it's fantastic.\"\n                    ],\n                    negative: [\n                        \"Unfortunately, this product didn't work as advertised.\",\n                        \"Bought this item and it was a waste of money.\",\n                        \"Tried this product and it failed to deliver.\",\n                        \"Purchased this and it's been problematic.\",\n                        \"Got this item and it's not worth the price.\"\n                    ],\n                    neutral: [\n                        \"This product is okay, but nothing special.\",\n                        \"Bought this item and it's functional but basic.\",\n                        \"Tried this product and it's average at best.\",\n                        \"Purchased this and it's decent but not great.\",\n                        \"Got this item and it's fine for the price.\"\n                    ]\n                },\n                prosFormat: \"The strengths of this product include\",\n                consFormat: \"Areas where this product falls short are\",\n                experienceFormat: \"My overall experience with this product has been\"\n            },\n            service: {\n                openings: {\n                    positive: [\n                        \"Used this service and it was incredibly professional!\",\n                        \"Hired this company and they delivered beyond expectations.\",\n                        \"Tried this service out and it was excellent.\",\n                        \"Went with this provider and couldn't be happier.\",\n                        \"Engaged this service and it was outstanding.\"\n                    ],\n                    negative: [\n                        \"Unfortunately, this service was disappointing.\",\n                        \"Hired this company and they didn't deliver.\",\n                        \"Tried this service and it was a waste of time.\",\n                        \"Went with this provider and regretted it.\",\n                        \"Engaged this service and it was problematic.\"\n                    ],\n                    neutral: [\n                        \"This service was adequate but not exceptional.\",\n                        \"Hired this company and they did an okay job.\",\n                        \"Tried this service and it was functional.\",\n                        \"Went with this provider and it was average.\",\n                        \"Engaged this service and it was fine.\"\n                    ]\n                },\n                prosFormat: \"What they did well was\",\n                consFormat: \"Areas for improvement include\",\n                experienceFormat: \"My overall experience with this service was\"\n            },\n            experience: {\n                openings: {\n                    positive: [\n                        \"Had this experience and it was absolutely incredible!\",\n                        \"Went through this and it was life-changing.\",\n                        \"Tried this activity and it was beyond amazing.\",\n                        \"Participated in this and it was unforgettable.\",\n                        \"Experienced this and it was phenomenal.\"\n                    ],\n                    negative: [\n                        \"Unfortunately, this experience was disappointing.\",\n                        \"Went through this and it was a letdown.\",\n                        \"Tried this activity and it wasn't worth it.\",\n                        \"Participated in this and it was underwhelming.\",\n                        \"Experienced this and it was not what I expected.\"\n                    ],\n                    neutral: [\n                        \"This experience was okay, nothing special.\",\n                        \"Went through this and it was average.\",\n                        \"Tried this activity and it was fine.\",\n                        \"Participated in this and it was decent.\",\n                        \"Experienced this and it was alright.\"\n                    ]\n                },\n                prosFormat: \"The highlights were\",\n                consFormat: \"The low points included\",\n                experienceFormat: \"Overall, this experience was\"\n            },\n            app: {\n                openings: {\n                    positive: [\n                        \"Downloaded this app and it's been incredibly useful!\",\n                        \"Tried this software and it's exceeded all expectations.\",\n                        \"Used this application and it's become essential.\",\n                        \"Tested this app and it's fantastic.\",\n                        \"Installed this and it's been a great addition.\"\n                    ],\n                    negative: [\n                        \"Unfortunately, this app has been problematic.\",\n                        \"Downloaded this software and it's been frustrating.\",\n                        \"Tried this application and it's not user-friendly.\",\n                        \"Tested this app and it's full of bugs.\",\n                        \"Installed this and it's been disappointing.\"\n                    ],\n                    neutral: [\n                        \"This app is functional but not impressive.\",\n                        \"Downloaded this software and it's okay.\",\n                        \"Tried this application and it's average.\",\n                        \"Tested this app and it's decent.\",\n                        \"Installed this and it's fine.\"\n                    ]\n                },\n                prosFormat: \"The app's strengths include\",\n                consFormat: \"Issues with the app include\",\n                experienceFormat: \"My overall experience with this app has been\"\n            },\n            place: {\n                openings: {\n                    positive: [\n                        \"Visited this place and it was absolutely beautiful!\",\n                        \"Went to this location and it was incredible.\",\n                        \"Explored this area and it was amazing.\",\n                        \"Checked out this spot and it was wonderful.\",\n                        \"Stopped by this place and it was fantastic.\"\n                    ],\n                    negative: [\n                        \"Unfortunately, this place was disappointing.\",\n                        \"Went to this location and it wasn't worth the visit.\",\n                        \"Explored this area and it was underwhelming.\",\n                        \"Checked out this spot and it was a letdown.\",\n                        \"Stopped by this place and it was not what I expected.\"\n                    ],\n                    neutral: [\n                        \"This place was okay, nothing special.\",\n                        \"Went to this location and it was average.\",\n                        \"Explored this area and it was fine.\",\n                        \"Checked out this spot and it was decent.\",\n                        \"Stopped by this place and it was alright.\"\n                    ]\n                },\n                prosFormat: \"What made this place special was\",\n                consFormat: \"Areas that could be improved include\",\n                experienceFormat: \"My overall impression of this place was\"\n            },\n            general: {\n                openings: {\n                    positive: [\n                        \"Tried this out and it was absolutely fantastic!\",\n                        \"Experienced this and it exceeded expectations.\",\n                        \"Went with this option and it was excellent.\",\n                        \"Chose this and it was a great decision.\",\n                        \"Decided to try this and it was wonderful.\"\n                    ],\n                    negative: [\n                        \"Unfortunately, this didn't meet expectations.\",\n                        \"Tried this out and it was disappointing.\",\n                        \"Experienced this and it fell short.\",\n                        \"Went with this option and regretted it.\",\n                        \"Chose this and it wasn't worth it.\"\n                    ],\n                    neutral: [\n                        \"This was okay, nothing special.\",\n                        \"Tried this out and it was average.\",\n                        \"Experienced this and it was fine.\",\n                        \"Went with this option and it was decent.\",\n                        \"Chose this and it was alright.\"\n                    ]\n                },\n                prosFormat: \"What I liked was\",\n                consFormat: \"Areas for improvement include\",\n                experienceFormat: \"My overall experience was\"\n            }\n        };\n\n        const format = reviewFormats[reviewType] || reviewFormats.general;\n        let review = '';\n        \n        // Select appropriate opening based on rating\n        let openingCategory;\n        if (rating >= 4) openingCategory = 'positive';\n        else if (rating <= 2) openingCategory = 'negative';\n        else openingCategory = 'neutral';\n        \n        const openings = format.openings[openingCategory];\n        const selectedOpening = openings[Math.floor(Math.random() * openings.length)];\n        review += selectedOpening + ' ';\n        \n        // Add pros with varied sentence structures\n        if (pros && pros.trim()) {\n            const prosText = pros.trim();\n            const prosFormats = [\n                `${format.prosFormat} ${prosText}.`,\n                `What really impressed me was ${prosText}.`,\n                `I particularly enjoyed ${prosText}.`,\n                `The standout feature was ${prosText}.`,\n                `What made this great was ${prosText}.`\n            ];\n            const selectedProsFormat = prosFormats[Math.floor(Math.random() * prosFormats.length)];\n            review += `\\n\\n${selectedProsFormat}`;\n        }\n        \n        // Add cons with varied sentence structures\n        if (cons && cons.trim()) {\n            const consText = cons.trim();\n            const consFormats = [\n                `${format.consFormat} ${consText}.`,\n                `However, ${consText}.`,\n                `On the downside, ${consText}.`,\n                `The main issue was ${consText}.`,\n                `What could be better is ${consText}.`\n            ];\n            const selectedConsFormat = consFormats[Math.floor(Math.random() * consFormats.length)];\n            review += `\\n\\n${selectedConsFormat}`;\n        }\n        \n        // Add experience details with varied sentence structures\n        if (experience && experience.trim()) {\n            const expText = experience.trim();\n            const expFormats = [\n                `${format.experienceFormat} ${expText}.`,\n                `Overall, ${expText}.`,\n                `In summary, ${expText}.`,\n                `My takeaway was ${expText}.`,\n                `The bottom line is ${expText}.`\n            ];\n            const selectedExpFormat = expFormats[Math.floor(Math.random() * expFormats.length)];\n            review += `\\n\\n${selectedExpFormat}`;\n        }\n        \n        // Add location information if available\n        if (location) {\n            if (location.address) {\n                review += `\\n\\n📍 ${location.address}`;\n            } else {\n                review += `\\n\\n📍 ${location.latitude.toFixed(6)}, ${location.longitude.toFixed(6)}`;\n            }\n        }\n        \n        // Add varied closing statements based on rating and tone\n        const closings = {\n            positive: {\n                enthusiastic: [\n                    \"Definitely recommend checking this out!\",\n                    \"Cannot recommend this enough!\",\n                    \"Absolutely worth your time and money!\",\n                    \"This is a must-try experience!\",\n                    \"You won't regret giving this a shot!\"\n                ],\n                casual: [\n                    \"Would definitely go back.\",\n                    \"Highly recommend this place.\",\n                    \"This is worth checking out.\",\n                    \"I'll definitely return here.\",\n                    \"This gets my full recommendation.\"\n                ],\n                professional: [\n                    \"This exceeded expectations and comes highly recommended.\",\n                    \"The quality and service make this a worthwhile choice.\",\n                    \"This represents excellent value for the experience provided.\",\n                    \"I would confidently recommend this to others.\",\n                    \"This demonstrates the standards I look for in quality experiences.\"\n                ]\n            },\n            negative: {\n                critical: [\n                    \"Would not recommend this to anyone.\",\n                    \"This was a complete waste of time and money.\",\n                    \"Avoid this at all costs.\",\n                    \"This falls far short of acceptable standards.\",\n                    \"I cannot recommend this experience.\"\n                ],\n                balanced: [\n                    \"Probably won't return.\",\n                    \"This wasn't worth the effort.\",\n                    \"I'd suggest looking elsewhere.\",\n                    \"This didn't meet my expectations.\",\n                    \"I wouldn't choose this again.\"\n                ]\n            },\n            neutral: {\n                balanced: [\n                    \"Might give it another try.\",\n                    \"It's okay if you're in the area.\",\n                    \"Decent option for the price.\",\n                    \"Worth a try if you're curious.\",\n                    \"Not bad, but not great either.\"\n                ]\n            }\n        };\n        \n        const closingCategory = rating >= 4 ? 'positive' : rating <= 2 ? 'negative' : 'neutral';\n        const toneCategory = tone === 'enthusiastic' ? 'enthusiastic' : tone === 'critical' ? 'critical' : 'balanced';\n        const availableClosings = closings[closingCategory][toneCategory] || closings[closingCategory].balanced || closings.neutral.balanced;\n        const selectedClosing = availableClosings[Math.floor(Math.random() * availableClosings.length)];\n        \n        review += `\\n\\n${selectedClosing}`;\n        \n        return review;\n    };\n\n    const copyToClipboard = () => {\n        navigator.clipboard.writeText(generatedReview);\n        alert('Review copied to clipboard!');\n    };\n\n    const resetReview = () => {\n        setReviewData({\n            reviewType: 'restaurant',\n            rating: 5,\n            tone: 'professional',\n            pros: '',\n            cons: '',\n            experience: ''\n        });\n        setGeneratedReview('');\n        setAnalysis(null);\n        setShowAnalysis(false);\n        setLocationData(null);\n        setRatingAutoAdjusted(false);\n    };\n\n    const handleLocationChange = (location) => {\n        setLocationData(location);\n    };\n\n    const handleGenerateReviewFromAnalysis = async (transcript, analysisData) => {\n        try {\n            const result = await llmService.generateReviewFromVoice(\n                transcript, \n                reviewData.reviewType, \n                reviewData.rating\n            );\n            \n            if (result.success) {\n                setGeneratedReview(result.reviewText);\n            }\n        } catch (error) {\n            console.error('Review generation failed:', error);\n        }\n    };\n\n    const handleSaveAnalysis = (analysisData) => {\n        const analysisRecord = {\n            id: Date.now(),\n            analysis: analysisData,\n            reviewData: reviewData,\n            timestamp: new Date().toISOString()\n        };\n        \n        // Save to localStorage\n        const existingAnalyses = JSON.parse(localStorage.getItem('reviewAnalyses') || '[]');\n        localStorage.setItem('reviewAnalyses', JSON.stringify([analysisRecord, ...existingAnalyses]));\n        \n        alert('Analysis saved successfully!');\n    };\n\n    // Auto-adjust rating based on content analysis\n    const autoAdjustRating = (content) => {\n        if (!content || content.trim().length === 0) return;\n        \n        let suggestedRating = 3; // Default neutral rating\n        const text = content.toLowerCase();\n        \n        // Positive keywords\n        const positiveKeywords = ['amazing', 'excellent', 'great', 'good', 'love', 'perfect', 'best', 'fantastic', 'wonderful', 'outstanding', 'awesome', 'brilliant'];\n        const negativeKeywords = ['terrible', 'awful', 'bad', 'horrible', 'worst', 'disappointing', 'poor', 'mediocre', 'overpriced', 'scam', 'hate', 'disgusting'];\n        \n        const positiveCount = positiveKeywords.filter(word => text.includes(word)).length;\n        const negativeCount = negativeKeywords.filter(word => text.includes(word)).length;\n        \n        if (positiveCount > negativeCount && positiveCount >= 2) {\n            suggestedRating = 5;\n        } else if (positiveCount > negativeCount && positiveCount >= 1) {\n            suggestedRating = 4;\n        } else if (negativeCount > positiveCount && negativeCount >= 2) {\n            suggestedRating = 1;\n        } else if (negativeCount > positiveCount && negativeCount >= 1) {\n            suggestedRating = 2;\n        }\n        \n        // Special cases\n        if (text.includes('overpriced') || text.includes('scam') || text.includes('rip off')) {\n            suggestedRating = Math.max(1, suggestedRating - 1);\n        }\n        if (text.includes('worth it') || text.includes('recommend') || text.includes('love it')) {\n            suggestedRating = Math.min(5, suggestedRating + 1);\n        }\n        \n        return suggestedRating;\n    };\n\n    const generateAIReview = async () => {\n        // Validate input\n        const hasContent = reviewData.pros.trim() || reviewData.cons.trim() || reviewData.experience.trim();\n        if (!hasContent) {\n            alert('Please provide some content in at least one field (pros, cons, or experience) before generating a review.');\n            return;\n        }\n\n        const apiKey = localStorage.getItem('nvidiaApiKey');\n        if (!apiKey || apiKey.trim().length === 0) {\n            alert('Please enter your NVIDIA API key in the Voice Review section first to use AI-powered review generation.');\n            return;\n        }\n\n        setIsGenerating(true);\n        \n        try {\n            // Combine all content into a single transcript\n            const combinedContent = [\n                reviewData.pros,\n                reviewData.cons,\n                reviewData.experience\n            ].filter(Boolean).join('. ');\n            \n            // Use the VoiceService to generate AI review\n            const VoiceService = (await import('../services/VoiceService')).default;\n            const review = await VoiceService.generateReview(\n                combinedContent,\n                {\n                    sentiment: 'neutral',\n                    confidence: 0.8,\n                    keyPoints: ['User-provided content'],\n                    topics: [reviewData.reviewType],\n                    summary: 'Review based on user input'\n                },\n                apiKey,\n                reviewData.reviewType\n            );\n            \n            let reviewText = review;\n            \n            // Add location information to the review if available (more naturally)\n            if (locationData) {\n                if (locationData.address) {\n                    reviewText += `\\n\\n📍 ${locationData.address}`;\n                } else {\n                    reviewText += `\\n\\n📍 ${locationData.latitude.toFixed(6)}, ${locationData.longitude.toFixed(6)}`;\n                }\n            }\n\n            // Add rating if specified (more subtly)\n            if (reviewData.rating && reviewData.rating > 0) {\n                reviewText += `\\n\\nRating: ${reviewData.rating}/5`;\n            }\n            \n            setGeneratedReview(reviewText);\n            \n            // Save review to localStorage for history\n            const reviewHistory = JSON.parse(localStorage.getItem('reviewHistory') || '[]');\n            const newReview = {\n                id: Date.now(),\n                reviewType: reviewData.reviewType,\n                itemName: `${reviewData.reviewType.charAt(0).toUpperCase() + reviewData.reviewType.slice(1)} Review`,\n                category: reviewData.reviewType,\n                rating: reviewData.rating,\n                tone: reviewData.tone,\n                pros: reviewData.pros,\n                cons: reviewData.cons,\n                experience: reviewData.experience,\n                location: locationData,\n                review: reviewText,\n                isAIGenerated: true,\n                timestamp: new Date().toISOString()\n            };\n            reviewHistory.unshift(newReview);\n            localStorage.setItem('reviewHistory', JSON.stringify(reviewHistory.slice(0, 50)));\n            \n            // Auto-analyze the generated review\n            setTimeout(() => {\n                analyzeReview(reviewText);\n            }, 500);\n            \n        } catch (error) {\n            console.error('AI review generation error:', error);\n            alert('Failed to generate AI review. Please check your API key and try again.');\n        } finally {\n            setIsGenerating(false);\n        }\n    };\n\n    return (\n        <div className=\"review-generator\">\n            <div className=\"review-container\">\n                {/* Beautiful Header Section */}\n                <div className=\"review-header\">\n                    <div className=\"header-content\">\n                        <div className=\"header-icon\">✨</div>\n                        <h1>AI-Powered Review Generator</h1>\n                        <p>Create professional, engaging reviews with advanced AI analysis</p>\n                        <div className=\"header-features\">\n                            <span className=\"feature-badge\">🤖 {modelInfo?.name || 'Meta Llama 3.1 70B'}</span>\n                            <span className=\"feature-badge\">🎯 Smart Analysis</span>\n                            <span className=\"feature-badge\">📱 Mobile Optimized</span>\n                        </div>\n                        {modelInfo && (\n                            <div style={{\n                                background: 'rgba(255, 255, 255, 0.1)',\n                                borderRadius: '12px',\n                                padding: '16px',\n                                marginTop: '16px',\n                                backdropFilter: 'blur(10px)',\n                                border: '1px solid rgba(255, 255, 255, 0.2)'\n                            }}>\n                                <p style={{\n                                    margin: '0 0 8px 0',\n                                    color: '#fff',\n                                    fontSize: '14px',\n                                    opacity: '0.9'\n                                }}>\n                                    {modelInfo.description}\n                                </p>\n                                <div style={{\n                                    display: 'flex',\n                                    flexWrap: 'wrap',\n                                    gap: '6px'\n                                }}>\n                                    {modelInfo.strengths.map((strength, index) => (\n                                        <span key={index} style={{\n                                            background: 'rgba(255, 255, 255, 0.2)',\n                                            color: '#fff',\n                                            padding: '3px 8px',\n                                            borderRadius: '10px',\n                                            fontSize: '11px',\n                                            fontWeight: '500'\n                                        }}>\n                                            {strength}\n                                        </span>\n                                    ))}\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n\n                {!generatedReview ? (\n                    <div className=\"review-form\">\n                        {/* Review Settings Section */}\n                        <div className=\"form-section settings-section\">\n                            <div className=\"section-header\">\n                                <h2>🎯 Review Settings</h2>\n                                <p>Configure your review preferences</p>\n                            </div>\n                            \n                            <div className=\"settings-grid\">\n                                <div className=\"setting-group\">\n                                    <label className=\"setting-label\">\n                                        <span className=\"label-icon\">📝</span>\n                                        Review Type\n                                    </label>\n                                    <div className=\"type-options\">\n                                        {reviewTypes.map(type => (\n                                            <button\n                                                key={type.value}\n                                                className={`type-option ${reviewData.reviewType === type.value ? 'active' : ''}`}\n                                                onClick={() => handleInputChange('reviewType', type.value)}\n                                                style={{\n                                                    '--accent-color': type.color\n                                                }}\n                                            >\n                                                <span className=\"type-icon\">{type.icon}</span>\n                                                <span className=\"type-label\">{type.label}</span>\n                                            </button>\n                                        ))}\n                                    </div>\n                                </div>\n\n                                <div className=\"setting-group\">\n                                    <label className=\"setting-label\">\n                                        <span className=\"label-icon\">🎭</span>\n                                        Writing Tone\n                                    </label>\n                                    <div className=\"tone-options\">\n                                        {tones.map(tone => (\n                                            <button\n                                                key={tone.value}\n                                                className={`tone-option ${reviewData.tone === tone.value ? 'active' : ''}`}\n                                                onClick={() => handleInputChange('tone', tone.value)}\n                                                style={{\n                                                    '--accent-color': tone.color\n                                                }}\n                                            >\n                                                <span className=\"tone-icon\">{tone.icon}</span>\n                                                <span className=\"tone-label\">{tone.label}</span>\n                                            </button>\n                                        ))}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* Rating Section */}\n                        <div className=\"form-section rating-section\">\n                            <div className=\"section-header\">\n                                <h2>⭐ Rating</h2>\n                                <p>Set your overall rating</p>\n                            </div>\n                            \n                            <div className=\"rating-container\">\n                                <div className=\"rating-display\">\n                                    <span className=\"rating-label\">Rating: {reviewData.rating}/5</span>\n                                    <div className=\"rating-stars\">\n                                        {[1, 2, 3, 4, 5].map(star => (\n                                            <button\n                                                key={star}\n                                                className={`star-btn ${star <= reviewData.rating ? 'active' : ''}`}\n                                                onClick={() => {\n                                                    handleInputChange('rating', star);\n                                                    setRatingAutoAdjusted(false);\n                                                }}\n                                            >\n                                                ⭐\n                                            </button>\n                                        ))}\n                                    </div>\n                                    {ratingAutoAdjusted && (\n                                        <div className=\"auto-adjusted-indicator\">\n                                            <span className=\"ai-badge\">🤖 AI Suggested</span>\n                                            <span className=\"adjustment-note\">Rating adjusted based on your content</span>\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* Content Section */}\n                        <div className=\"form-section content-section\">\n                            <div className=\"section-header\">\n                                <h2>✍️ Review Content</h2>\n                                <p>Share your experience and thoughts</p>\n                            </div>\n                            \n                            <div className=\"content-grid\">\n                                <div className=\"content-group positive-group\">\n                                    <label className=\"content-label\">\n                                        <span className=\"label-icon\">✅</span>\n                                        What did you like? (Pros)\n                                    </label>\n                                    <div className=\"input-field\">\n                                        <textarea\n                                            value={reviewData.pros}\n                                            onChange={(e) => handleInputChange('pros', e.target.value)}\n                                            placeholder=\"Describe what you liked about this experience...\"\n                                            rows=\"4\"\n                                            className=\"content-textarea positive-textarea\"\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className=\"content-group negative-group\">\n                                    <label className=\"content-label\">\n                                        <span className=\"label-icon\">⚠️</span>\n                                        What could be improved? (Cons)\n                                    </label>\n                                    <div className=\"input-field\">\n                                        <textarea\n                                            value={reviewData.cons}\n                                            onChange={(e) => handleInputChange('cons', e.target.value)}\n                                            placeholder=\"Describe areas for improvement...\"\n                                            rows=\"4\"\n                                            className=\"content-textarea negative-textarea\"\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className=\"content-group full-width experience-group\">\n                                    <label className=\"content-label\">\n                                        <span className=\"label-icon\">💭</span>\n                                        Additional Experience Details\n                                    </label>\n                                    <div className=\"input-field\">\n                                        <textarea\n                                            value={reviewData.experience}\n                                            onChange={(e) => handleInputChange('experience', e.target.value)}\n                                            placeholder=\"Share your overall experience and thoughts...\"\n                                            rows=\"5\"\n                                            className=\"content-textarea experience-textarea\"\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* Location Section */}\n                        <div className=\"form-section location-section\">\n                            <div className=\"section-header\">\n                                <h2>📍 Location Attachment</h2>\n                                <p>Add location context to your review</p>\n                            </div>\n                            <LocationAttachment \n                                onLocationChange={handleLocationChange}\n                                initialLocation={locationData}\n                                transcript={reviewData.experience || reviewData.pros || reviewData.cons}\n                                apiKey={localStorage.getItem('nvidiaApiKey') || ''}\n                            />\n                        </div>\n\n                        {/* Action Buttons */}\n                        <div className=\"form-actions\">\n                            <div className=\"action-buttons\">\n                                <button\n                                    className=\"generate-btn ai-generate-btn\"\n                                    onClick={generateAIReview}\n                                    disabled={isGenerating}\n                                >\n                                    {isGenerating ? (\n                                        <>\n                                            <span className=\"loading-spinner\"></span>\n                                            <span>Generating AI Review...</span>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <span className=\"btn-icon\">🤖</span>\n                                            <span>Generate AI Review</span>\n                                            <span className=\"btn-badge\">Advanced</span>\n                                        </>\n                                    )}\n                                </button>\n                                \n                                <button\n                                    className=\"generate-btn regular-generate-btn\"\n                                    onClick={generateReview}\n                                    disabled={isGenerating}\n                                >\n                                    {isGenerating ? (\n                                        <>\n                                            <span className=\"loading-spinner\"></span>\n                                            <span>Generating Review...</span>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <span className=\"btn-icon\">✨</span>\n                                            <span>Generate Regular Review</span>\n                                            <span className=\"btn-badge\">Quick</span>\n                                        </>\n                                    )}\n                                </button>\n                                \n                                <button className=\"reset-btn\" onClick={resetReview}>\n                                    <span className=\"btn-icon\">🔄</span>\n                                    <span>Reset Form</span>\n                                </button>\n                            </div>\n                        </div>\n                        \n                        {/* Help Section */}\n                        <div className=\"help-section\">\n                            <div className=\"help-card\">\n                                <h3>💡 How it works</h3>\n                                <div className=\"help-content\">\n                                    <div className=\"help-item\">\n                                        <span className=\"help-icon\">🤖</span>\n                                        <div>\n                                            <strong>AI Review:</strong> Uses Meta Llama 3.1 70B for sophisticated, context-aware review generation\n                                        </div>\n                                    </div>\n                                    <div className=\"help-item\">\n                                        <span className=\"help-icon\">✨</span>\n                                        <div>\n                                            <strong>Regular Review:</strong> Uses template-based generation for quick, consistent results\n                                        </div>\n                                    </div>\n                                    <div className=\"help-item\">\n                                        <span className=\"help-icon\">🎯</span>\n                                        <div>\n                                            <strong>Smart Rating:</strong> AI automatically suggests ratings based on your content\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"result-section\">\n                        <div className=\"result-header\">\n                            <div className=\"result-title\">\n                                <h2>🎉 Your Review is Ready!</h2>\n                                <p>Generated with {analysis?.provider || 'AI'} analysis</p>\n                            </div>\n                            <div className=\"result-actions\">\n                                <button onClick={copyToClipboard} className=\"action-btn copy-btn\">\n                                    <span className=\"btn-icon\">📋</span>\n                                    <span>Copy Review</span>\n                                </button>\n                                <button \n                                    onClick={() => setShowAnalysis(!showAnalysis)} \n                                    className=\"action-btn analysis-btn\"\n                                >\n                                    <span className=\"btn-icon\">🧠</span>\n                                    <span>{showAnalysis ? 'Hide Analysis' : 'Show AI Analysis'}</span>\n                                </button>\n                                <button onClick={resetReview} className=\"action-btn new-btn\">\n                                    <span className=\"btn-icon\">🎤</span>\n                                    <span>Create Another Review</span>\n                                </button>\n                            </div>\n                        </div>\n\n                        <div className=\"review-content\">\n                            <div className=\"review-display\">\n                                <pre>{generatedReview}</pre>\n                            </div>\n                        </div>\n\n                        {isAnalyzing && (\n                            <div className=\"analyzing-indicator\">\n                                <div className=\"loading-spinner\"></div>\n                                <p>🤖 AI is analyzing your review...</p>\n                            </div>\n                        )}\n\n                        {showAnalysis && analysis && (\n                            <div className=\"analysis-section\">\n                                <h3>🧠 AI Analysis of Your Review</h3>\n                                <VoiceAnalysis\n                                    analysis={analysis}\n                                    onGenerateReview={handleGenerateReviewFromAnalysis}\n                                    onSaveAnalysis={handleSaveAnalysis}\n                                />\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default ReviewGenerator; ","import React, { useState, useEffect, useRef } from 'react';\nimport './VoiceRecognition.css';\n\nconst VoiceRecognition = ({ onTranscript, placeholder = \"Tap to start speaking...\", disabled = false, enableLLMEnhancement = true }) => {\n    const [isListening, setIsListening] = useState(false);\n    const [transcript, setTranscript] = useState('');\n    const [interimTranscript, setInterimTranscript] = useState('');\n    const [error, setError] = useState('');\n    const [isSupported, setIsSupported] = useState(false);\n    const [isInitialized, setIsInitialized] = useState(false);\n    const [isMobile, setIsMobile] = useState(false);\n    const [retryCount, setRetryCount] = useState(0);\n    const [browserInfo, setBrowserInfo] = useState('');\n    const [showManualInput, setShowManualInput] = useState(false);\n    const [manualText, setManualText] = useState('');\n    const [isEnhancing, setIsEnhancing] = useState(false);\n    const [enhancedTranscript, setEnhancedTranscript] = useState('');\n    const [apiKey, setApiKey] = useState(() => {\n        return localStorage.getItem('nvidiaApiKey') || '';\n    });\n    const recognitionRef = useRef(null);\n    const timeoutRef = useRef(null);\n\n    useEffect(() => {\n        // Detect mobile device and browser\n        const checkDeviceAndBrowser = () => {\n            const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n            const isMobileDevice = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent.toLowerCase());\n            setIsMobile(isMobileDevice);\n            \n            // Detect browser\n            let browser = 'Unknown';\n            if (userAgent.includes('Chrome')) browser = 'Chrome';\n            else if (userAgent.includes('Safari')) browser = 'Safari';\n            else if (userAgent.includes('Firefox')) browser = 'Firefox';\n            else if (userAgent.includes('Edge')) browser = 'Edge';\n            \n            setBrowserInfo(`${browser} on ${isMobileDevice ? 'Mobile' : 'Desktop'}`);\n        };\n        \n        checkDeviceAndBrowser();\n        initializeSpeechRecognition();\n        \n        return () => {\n            if (recognitionRef.current) {\n                try {\n                    recognitionRef.current.abort();\n                } catch (e) {\n                    console.log('Cleanup error:', e);\n                }\n            }\n            if (timeoutRef.current) {\n                clearTimeout(timeoutRef.current);\n            }\n        };\n    }, []);\n\n    // Monitor API key changes\n    useEffect(() => {\n        const checkApiKey = () => {\n            const storedApiKey = localStorage.getItem('nvidiaApiKey');\n            if (storedApiKey !== apiKey) {\n                console.log('API key updated:', { \n                    oldLength: apiKey.length, \n                    newLength: storedApiKey?.length,\n                    oldKey: apiKey.substring(0, 10) + '...',\n                    newKey: storedApiKey ? storedApiKey.substring(0, 10) + '...' : 'none'\n                });\n                setApiKey(storedApiKey || '');\n            }\n        };\n        \n        // Check immediately\n        checkApiKey();\n        \n        // Set up interval to check periodically\n        const interval = setInterval(checkApiKey, 2000);\n        \n        return () => clearInterval(interval);\n    }, []); // Remove apiKey dependency to prevent infinite loop\n\n    const initializeSpeechRecognition = () => {\n        try {\n            // Check for speech recognition support with fallbacks\n            const SpeechRecognition = window.SpeechRecognition || \n                                    window.webkitSpeechRecognition || \n                                    window.mozSpeechRecognition || \n                                    window.msSpeechRecognition;\n            \n            if (!SpeechRecognition) {\n                setError(`Speech recognition is not supported in ${browserInfo}. Please use Chrome, Edge, or Safari.`);\n                setIsSupported(false);\n                return;\n            }\n\n            // Create recognition instance\n            recognitionRef.current = new SpeechRecognition();\n            setupRecognition();\n            setIsSupported(true);\n            setIsInitialized(true);\n            setRetryCount(0);\n            \n        } catch (error) {\n            console.error('Failed to initialize speech recognition:', error);\n            setError('Failed to initialize speech recognition. Please refresh the page and try again.');\n            setIsSupported(false);\n        }\n    };\n\n    const setupRecognition = () => {\n        const recognition = recognitionRef.current;\n        \n        if (!recognition) return;\n\n        // Configure recognition settings\n        recognition.continuous = !isMobile; // Disable continuous on mobile for better performance\n        recognition.interimResults = true;\n        recognition.lang = 'en-US';\n        recognition.maxAlternatives = isMobile ? 3 : 1; // More alternatives for mobile\n\n        // Mobile-specific optimizations\n        if (isMobile) {\n            recognition.continuous = false;\n            recognition.maxAlternatives = 3;\n            // Add a timeout for mobile to prevent hanging\n            recognition.timeout = 10000; // 10 seconds\n        }\n\n        // Event handlers\n        recognition.onstart = () => {\n            console.log('Speech recognition started');\n            setIsListening(true);\n            setError('');\n            \n            // Set a timeout for mobile to auto-stop if no speech detected\n            if (isMobile) {\n                timeoutRef.current = setTimeout(() => {\n                    if (isListening && !interimTranscript) {\n                        console.log('Auto-stopping due to timeout');\n                        stopListening();\n                        setError('No speech detected. Please try speaking again.');\n                    }\n                }, 15000); // 15 seconds timeout\n            }\n        };\n\n        recognition.onresult = (event) => {\n            let finalTranscript = '';\n            let interimTranscript = '';\n\n            try {\n                for (let i = event.resultIndex; i < event.results.length; i++) {\n                    const resultTranscript = event.results[i][0].transcript;\n                    if (event.results[i].isFinal) {\n                        finalTranscript += resultTranscript;\n                    } else {\n                        interimTranscript += resultTranscript;\n                    }\n                }\n\n                console.log('Voice recognition result:', { finalTranscript, interimTranscript });\n\n                if (finalTranscript) {\n                    const newTranscript = transcript + finalTranscript;\n                    setInterimTranscript('');\n                    \n                    // Clear timeout since we got results\n                    if (timeoutRef.current) {\n                        clearTimeout(timeoutRef.current);\n                        timeoutRef.current = null;\n                    }\n                    \n                    // Process with LLM enhancement\n                    processTranscript(newTranscript, true);\n                } else {\n                    setInterimTranscript(interimTranscript);\n                }\n            } catch (error) {\n                console.error('Error processing speech recognition result:', error);\n                setError('Error processing speech. Please try again.');\n            }\n        };\n\n        recognition.onerror = (event) => {\n            console.error('Speech recognition error:', event.error);\n            setIsListening(false);\n            \n            // Clear timeout\n            if (timeoutRef.current) {\n                clearTimeout(timeoutRef.current);\n                timeoutRef.current = null;\n            }\n            \n            let errorMessage = '';\n            switch (event.error) {\n                case 'no-speech':\n                    errorMessage = isMobile \n                        ? 'No speech detected. Please tap the microphone and try speaking again. Make sure to speak clearly and hold your device close.'\n                        : 'No speech detected. Please try speaking again.';\n                    break;\n                case 'audio-capture':\n                    errorMessage = isMobile\n                        ? 'Audio capture failed. Please check your microphone permissions in device settings and try again.'\n                        : 'Audio capture failed. Please check your microphone permissions and try again.';\n                    break;\n                case 'not-allowed':\n                    errorMessage = isMobile\n                        ? 'Microphone access denied. Please go to Settings > Privacy & Security > Microphone and enable access for this app, then refresh the page.'\n                        : 'Microphone access denied. Please allow microphone access in your browser settings and refresh the page.';\n                    break;\n                case 'network':\n                    errorMessage = 'Network error. Please check your internet connection and try again.';\n                    break;\n                case 'service-not-allowed':\n                    errorMessage = 'Speech recognition service not allowed. Please try a different browser.';\n                    break;\n                case 'bad-grammar':\n                    errorMessage = 'Speech recognition grammar error. Please try speaking more clearly.';\n                    break;\n                case 'language-not-supported':\n                    errorMessage = 'Language not supported. Please try speaking in English.';\n                    break;\n                case 'aborted':\n                    errorMessage = 'Speech recognition was interrupted. Please try again.';\n                    break;\n                default:\n                    errorMessage = `Speech recognition error: ${event.error}. Please try again.`;\n            }\n            \n            setError(errorMessage);\n            \n            // Increment retry count for auto-retry logic\n            setRetryCount(prev => prev + 1);\n        };\n\n        recognition.onend = () => {\n            console.log('Speech recognition ended');\n            setIsListening(false);\n            \n            // Clear timeout\n            if (timeoutRef.current) {\n                clearTimeout(timeoutRef.current);\n                timeoutRef.current = null;\n            }\n            \n            // Auto-restart on mobile for better UX (but limit retries)\n            if (isMobile && retryCount < 2) {\n                setTimeout(() => {\n                    if (!isListening && retryCount < 2) {\n                        console.log('Auto-restarting speech recognition...');\n                        startListening();\n                    }\n                }, 500);\n            }\n        };\n\n        recognition.onaudiostart = () => {\n            console.log('Audio capturing started');\n        };\n\n        recognition.onaudioend = () => {\n            console.log('Audio capturing ended');\n        };\n\n        recognition.onsoundstart = () => {\n            console.log('Sound detected');\n        };\n\n        recognition.onsoundend = () => {\n            console.log('Sound ended');\n        };\n\n        recognition.onspeechstart = () => {\n            console.log('Speech started');\n        };\n\n        recognition.onspeechend = () => {\n            console.log('Speech ended');\n        };\n    };\n\n    const startListening = () => {\n        if (!isSupported || disabled || !isInitialized) {\n            console.log('Cannot start listening:', { isSupported, disabled, isInitialized });\n            return;\n        }\n        \n        try {\n            setError('');\n            console.log('Starting speech recognition...');\n            \n            // Reset retry count when manually starting\n            setRetryCount(0);\n            \n            recognitionRef.current.start();\n        } catch (error) {\n            console.error('Error starting speech recognition:', error);\n            setError('Failed to start speech recognition. Please try again.');\n            \n            // Try to reinitialize if there's an error\n            setTimeout(() => {\n                console.log('Attempting to reinitialize speech recognition...');\n                initializeSpeechRecognition();\n            }, 1000);\n        }\n    };\n\n    const stopListening = () => {\n        if (recognitionRef.current && isListening) {\n            try {\n                console.log('Stopping speech recognition...');\n                recognitionRef.current.stop();\n                \n                // Clear timeout\n                if (timeoutRef.current) {\n                    clearTimeout(timeoutRef.current);\n                    timeoutRef.current = null;\n                }\n            } catch (error) {\n                console.error('Error stopping speech recognition:', error);\n            }\n        }\n    };\n\n    const clearTranscript = () => {\n        setTranscript('');\n        setInterimTranscript('');\n        setEnhancedTranscript('');\n        if (onTranscript) {\n            onTranscript('');\n        }\n    };\n\n    const handleToggleListening = () => {\n        if (isListening) {\n            stopListening();\n        } else {\n            startListening();\n        }\n    };\n\n    const copyToClipboard = () => {\n        const textToCopy = transcript || interimTranscript;\n        if (textToCopy) {\n            navigator.clipboard.writeText(textToCopy).then(() => {\n                // Show a brief success message\n                const originalText = document.title;\n                document.title = 'Copied to clipboard!';\n                setTimeout(() => {\n                    document.title = originalText;\n                }, 1000);\n            }).catch(err => {\n                console.error('Failed to copy text: ', err);\n            });\n        }\n    };\n\n    const retryInitialization = () => {\n        setError('');\n        setIsInitialized(false);\n        setTimeout(() => {\n            initializeSpeechRecognition();\n        }, 500);\n    };\n\n    const handleManualInput = async () => {\n        if (manualText.trim()) {\n            const newTranscript = transcript + manualText;\n            setManualText('');\n            setShowManualInput(false);\n            \n            // Process with LLM enhancement\n            await processTranscript(newTranscript, true);\n        }\n    };\n\n    const toggleManualInput = () => {\n        setShowManualInput(!showManualInput);\n        if (showManualInput) {\n            setManualText('');\n        }\n    };\n\n    // LLM-powered voice recognition enhancement\n    const enhanceTranscriptWithLLM = async (rawTranscript) => {\n        console.log('LLM enhancement check:', {\n            enableLLMEnhancement,\n            hasApiKey: !!apiKey.trim(),\n            hasTranscript: !!rawTranscript.trim(),\n            transcriptLength: rawTranscript.length\n        });\n\n        if (!enableLLMEnhancement || !apiKey.trim() || !rawTranscript.trim()) {\n            console.log('LLM enhancement skipped:', {\n                enableLLMEnhancement,\n                hasApiKey: !!apiKey.trim(),\n                hasTranscript: !!rawTranscript.trim()\n            });\n            return rawTranscript;\n        }\n\n        setIsEnhancing(true);\n        setError('');\n\n        try {\n            const prompt = `Please improve and correct this voice-to-text transcript. Fix any spelling errors, grammar issues, and make it more coherent while preserving the original meaning and tone. Only return the corrected text, nothing else.\n\nOriginal transcript: \"${rawTranscript}\"\n\nCorrected transcript:`;\n\n            console.log('Sending LLM enhancement request:', { prompt, apiKeyLength: apiKey.length });\n\n            const response = await fetch('/api/llama', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    prompt: prompt,\n                    apiKey: apiKey\n                })\n            });\n\n            console.log('LLM response status:', response.status);\n\n            if (!response.ok) {\n                throw new Error(`Failed to enhance transcript: ${response.status}`);\n            }\n\n            const data = await response.json();\n            console.log('LLM response data:', data);\n            \n            if (data.success && data.response) {\n                const enhanced = data.response.trim();\n                console.log('LLM enhanced transcript:', { original: rawTranscript, enhanced });\n                return enhanced;\n            } else {\n                console.warn('LLM enhancement failed, using original transcript:', data);\n                return rawTranscript;\n            }\n        } catch (error) {\n            console.error('LLM enhancement error:', error);\n            setError('Failed to enhance transcript with AI. Using original version.');\n            return rawTranscript;\n        } finally {\n            setIsEnhancing(false);\n        }\n    };\n\n    // Enhanced transcript processing\n    const processTranscript = async (newTranscript, isFinal = false) => {\n        if (isFinal && enableLLMEnhancement && apiKey.trim()) {\n            // Store original transcript first\n            setTranscript(newTranscript);\n            \n            // Enhance final transcript with LLM\n            const enhanced = await enhanceTranscriptWithLLM(newTranscript);\n            \n            // Only set enhanced transcript if it's different from original\n            if (enhanced !== newTranscript) {\n                setEnhancedTranscript(enhanced);\n                console.log('Enhanced transcript available:', { original: newTranscript, enhanced });\n            } else {\n                setEnhancedTranscript('');\n            }\n            \n            // Always call onTranscript with the original first\n            if (onTranscript) {\n                onTranscript(newTranscript);\n            }\n        } else {\n            // Use original transcript\n            setTranscript(newTranscript);\n            setEnhancedTranscript('');\n            \n            if (onTranscript) {\n                onTranscript(newTranscript);\n            }\n        }\n    };\n\n    // Debug function for testing LLM enhancement\n    const debugLLMEnhancement = async () => {\n        console.log('=== LLM Enhancement Debug ===');\n        console.log('enableLLMEnhancement:', enableLLMEnhancement);\n        console.log('apiKey length:', apiKey.length);\n        console.log('apiKey preview:', apiKey.substring(0, 10) + '...');\n        console.log('current transcript:', transcript);\n        \n        if (!apiKey.trim()) {\n            console.error('❌ No API key available');\n            return;\n        }\n        \n        if (!transcript.trim()) {\n            console.error('❌ No transcript to enhance');\n            return;\n        }\n        \n        console.log('🧪 Testing LLM enhancement...');\n        const enhanced = await enhanceTranscriptWithLLM(transcript);\n        console.log('Enhanced result:', enhanced);\n    };\n\n    // Expose debug function to window for console access\n    useEffect(() => {\n        if (typeof window !== 'undefined') {\n            window.debugVoiceRecognition = debugLLMEnhancement;\n            console.log('Debug function available: window.debugVoiceRecognition()');\n        }\n    }, [apiKey, transcript, enableLLMEnhancement]);\n\n    if (!isSupported) {\n        return (\n            <div className=\"voice-recognition-error\">\n                <div className=\"error-icon\">🎤</div>\n                <h3>Speech Recognition Not Supported</h3>\n                <p>{error}</p>\n                <div className=\"error-actions\">\n                    <button onClick={retryInitialization} className=\"retry-btn\">\n                        🔄 Try Again\n                    </button>\n                </div>\n                <div className=\"mobile-tips\">\n                    <h4>Mobile Tips:</h4>\n                    <ul>\n                        <li>Use Chrome or Safari on your mobile device</li>\n                        <li>Allow microphone permissions when prompted</li>\n                        <li>Speak clearly and in a quiet environment</li>\n                        <li>Hold your device close to your mouth</li>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n\n    const displayText = transcript || interimTranscript || placeholder;\n    const isActive = isListening || interimTranscript;\n\n    return (\n        <div className=\"voice-recognition\">\n            {/* LLM Enhancement Controls */}\n            {enableLLMEnhancement && (\n                <div className=\"llm-enhancement-controls\">\n                    <div className=\"enhancement-status\">\n                        <span className=\"enhancement-icon\">🤖</span>\n                        <span className=\"enhancement-text\">\n                            {isEnhancing ? 'AI Enhancing...' : 'AI Enhancement Ready'}\n                        </span>\n                        <span className=\"api-key-status\">\n                            {apiKey.trim() ? \n                                `🔑 API Key: ${apiKey.substring(0, 8)}...` : \n                                '⚠️ No API Key'\n                            }\n                        </span>\n                    </div>\n                    {transcript && !isEnhancing && (\n                        <button\n                            onClick={() => enhanceTranscriptWithLLM(transcript)}\n                            className=\"test-enhancement-btn\"\n                            title=\"Test LLM enhancement\"\n                        >\n                            🧪 Test Enhancement\n                        </button>\n                    )}\n                </div>\n            )}\n\n            <div className=\"voice-controls\">\n                <button\n                    className={`voice-button ${isListening ? 'listening' : ''} ${disabled ? 'disabled' : ''}`}\n                    onClick={handleToggleListening}\n                    disabled={disabled}\n                    aria-label={isListening ? 'Stop listening' : 'Start listening'}\n                >\n                    <span className=\"mic-icon\">\n                        {isListening ? '🔴' : '🎤'}\n                    </span>\n                    <span className=\"button-text\">\n                        {isListening ? (isMobile ? 'Tap to Stop' : 'Click to Stop') : (isMobile ? 'Tap to Speak' : 'Click to Speak')}\n                    </span>\n                </button>\n                \n                <button\n                    onClick={toggleManualInput}\n                    className=\"action-btn manual-btn\"\n                    title=\"Type manually\"\n                    aria-label=\"Type text manually\"\n                >\n                    ✏️ Type\n                </button>\n                \n                {(transcript || interimTranscript) && (\n                    <div className=\"voice-actions\">\n                        <button\n                            onClick={copyToClipboard}\n                            className=\"action-btn copy-btn\"\n                            title=\"Copy to clipboard\"\n                            aria-label=\"Copy transcript to clipboard\"\n                        >\n                            📋 Copy\n                        </button>\n                        <button\n                            onClick={clearTranscript}\n                            className=\"action-btn clear-btn\"\n                            title=\"Clear transcript\"\n                            aria-label=\"Clear transcript\"\n                        >\n                            🗑️ Clear\n                        </button>\n                    </div>\n                )}\n            </div>\n\n            {/* Manual Text Input */}\n            {showManualInput && (\n                <div className=\"manual-input-section\">\n                    <textarea\n                        value={manualText}\n                        onChange={(e) => setManualText(e.target.value)}\n                        placeholder=\"Type your review here...\"\n                        className=\"manual-textarea\"\n                        rows=\"3\"\n                        autoFocus\n                    />\n                    <div className=\"manual-input-actions\">\n                        <button\n                            onClick={handleManualInput}\n                            className=\"action-btn add-btn\"\n                            disabled={!manualText.trim() || isEnhancing}\n                        >\n                            {isEnhancing ? '🤖 Enhancing...' : '➕ Add Text'}\n                        </button>\n                        <button\n                            onClick={toggleManualInput}\n                            className=\"action-btn cancel-btn\"\n                        >\n                            ❌ Cancel\n                        </button>\n                    </div>\n                </div>\n            )}\n\n            <div className={`transcript-area ${isActive ? 'active' : ''}`}>\n                <div className=\"transcript-content\">\n                    {displayText}\n                </div>\n                {isListening && (\n                    <div className=\"listening-indicator\">\n                        <div className=\"pulse-dot\"></div>\n                        <span>Listening...</span>\n                    </div>\n                )}\n                {isEnhancing && (\n                    <div className=\"enhancing-indicator\">\n                        <div className=\"enhancing-spinner\"></div>\n                        <span>🤖 AI is enhancing your transcript...</span>\n                    </div>\n                )}\n            </div>\n\n            {/* Enhanced Transcript Display */}\n            {enhancedTranscript && enhancedTranscript !== transcript && (\n                <div className=\"enhanced-transcript-section\">\n                    <h4>🤖 AI Enhanced Version:</h4>\n                    <div className=\"enhanced-content\">\n                        {enhancedTranscript}\n                    </div>\n                    <div className=\"enhanced-actions\">\n                        <button\n                            onClick={() => {\n                                setTranscript(enhancedTranscript);\n                                if (onTranscript) onTranscript(enhancedTranscript);\n                            }}\n                            className=\"action-btn use-enhanced-btn\"\n                        >\n                            ✅ Use Enhanced Version\n                        </button>\n                        <button\n                            onClick={() => setEnhancedTranscript('')}\n                            className=\"action-btn keep-original-btn\"\n                        >\n                            🔄 Keep Original\n                        </button>\n                    </div>\n                </div>\n            )}\n\n            {error && (\n                <div className=\"error-message\">\n                    <span className=\"error-icon\">⚠️</span>\n                    <span>{error}</span>\n                    <div className=\"error-actions\">\n                        <button onClick={retryInitialization} className=\"retry-link\">\n                            Try Again\n                        </button>\n                        <button onClick={toggleManualInput} className=\"manual-link\">\n                            Type Instead\n                        </button>\n                    </div>\n                </div>\n            )}\n\n            {isMobile && (\n                <div className=\"mobile-hints\">\n                    <p>💡 <strong>Mobile Tips:</strong> Speak clearly, hold device close, and ensure microphone permissions are enabled.</p>\n                    <p>📝 <strong>Alternative:</strong> If voice doesn't work, use the \"Type\" button to enter text manually.</p>\n                    {enableLLMEnhancement && (\n                        <p>🤖 <strong>AI Enhancement:</strong> Your transcript will be automatically improved with AI for better accuracy.</p>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default VoiceRecognition; ","import React, { useState, useEffect } from 'react';\n\nconst ModelInfo = ({ useCase, style = {} }) => {\n  const [modelInfo, setModelInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchModelInfo();\n  }, [useCase]);\n\n  const fetchModelInfo = async () => {\n    try {\n      setLoading(true);\n      const res = await fetch('/api/models');\n      const data = await res.json();\n      if (data.success) {\n        const model = data.models.find(m => m.useCase === useCase);\n        setModelInfo(model);\n      }\n    } catch (error) {\n      console.warn('Failed to fetch model info:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div style={{\n        background: 'linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%)',\n        borderRadius: '12px',\n        padding: '16px',\n        border: '1px solid #bae6fd',\n        ...style\n      }}>\n        <div style={{\n          display: 'flex',\n          alignItems: 'center',\n          gap: '8px'\n        }}>\n          <div style={{\n            width: '16px',\n            height: '16px',\n            border: '2px solid #0ea5e9',\n            borderTop: '2px solid transparent',\n            borderRadius: '50%',\n            animation: 'spin 1s linear infinite'\n          }}></div>\n          <span style={{ color: '#0c4a6e', fontSize: '14px' }}>Loading model info...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (!modelInfo) {\n    return null;\n  }\n\n  return (\n    <div style={{\n      background: 'linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%)',\n      borderRadius: '12px',\n      padding: '16px',\n      border: '1px solid #bae6fd',\n      ...style\n    }}>\n      <div style={{\n        display: 'flex',\n        alignItems: 'center',\n        gap: '8px',\n        marginBottom: '8px'\n      }}>\n        <span style={{ fontSize: '18px' }}>🤖</span>\n        <h4 style={{ \n          margin: '0', \n          color: '#0c4a6e', \n          fontSize: '14px',\n          fontWeight: '600'\n        }}>\n          AI Model: {modelInfo.name}\n        </h4>\n      </div>\n      <p style={{ \n        margin: '0 0 8px 0', \n        color: '#0369a1', \n        lineHeight: '1.4',\n        fontSize: '12px'\n      }}>\n        {modelInfo.description}\n      </p>\n      <div style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '4px'\n      }}>\n        {modelInfo.strengths.map((strength, index) => (\n          <span key={index} style={{\n            background: '#0ea5e9',\n            color: '#fff',\n            padding: '2px 6px',\n            borderRadius: '8px',\n            fontSize: '10px',\n            fontWeight: '500'\n          }}>\n            {strength}\n          </span>\n        ))}\n      </div>\n      <style jsx>{`\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default ModelInfo; ","import React, { useState } from 'react';\nimport VoiceRecognition from '../components/VoiceRecognition';\nimport VoiceAnalysis from '../components/VoiceAnalysis';\nimport LocationAttachment from '../components/LocationAttachment';\nimport ModelInfo from '../components/ModelInfo';\nimport VoiceService from '../services/VoiceService';\nimport './VoiceReview.css';\n\nconst VoiceReview = () => {\n    const [transcript, setTranscript] = useState('');\n    const [analysis, setAnalysis] = useState(null);\n    const [isAnalyzing, setIsAnalyzing] = useState(false);\n    const [reviewType, setReviewType] = useState('restaurant');\n    const [rating, setRating] = useState(5);\n    const [generatedReview, setGeneratedReview] = useState('');\n    const [savedReviews, setSavedReviews] = useState([]);\n    const [locationData, setLocationData] = useState(null);\n    const [apiKey, setApiKey] = useState(() => {\n        // Load API key from localStorage on component mount\n        return localStorage.getItem('nvidiaApiKey') || '';\n    });\n    const [error, setError] = useState('');\n    const [ratingAutoAdjusted, setRatingAutoAdjusted] = useState(false);\n\n    // Save API key to localStorage whenever it changes\n    const handleApiKeyChange = (newApiKey) => {\n        setApiKey(newApiKey);\n        if (newApiKey.trim()) {\n            localStorage.setItem('nvidiaApiKey', newApiKey);\n        } else {\n            localStorage.removeItem('nvidiaApiKey');\n        }\n    };\n\n    const handleTranscript = (newTranscript) => {\n        setTranscript(newTranscript);\n        setAnalysis(null); // Clear previous analysis when new transcript is added\n        setError('');\n        setRatingAutoAdjusted(false); // Reset auto-adjusted flag for new input\n    };\n\n    // Auto-adjust rating based on voice content and sentiment\n    const autoAdjustRating = (transcript, analysisData) => {\n        if (!transcript || !analysisData) return;\n        \n        const { sentiment, confidence, keyPoints, summary } = analysisData;\n        let suggestedRating = 3; // Default neutral rating\n        \n        // Base rating on sentiment\n        switch (sentiment) {\n            case 'positive':\n                suggestedRating = 4;\n                break;\n            case 'negative':\n                suggestedRating = 2;\n                break;\n            case 'neutral':\n                suggestedRating = 3;\n                break;\n        }\n        \n        // Adjust based on confidence\n        if (confidence >= 0.9) {\n            // High confidence - keep the sentiment-based rating\n        } else if (confidence >= 0.7) {\n            // Medium confidence - slightly adjust toward neutral\n            if (suggestedRating > 3) suggestedRating--;\n            else if (suggestedRating < 3) suggestedRating++;\n        } else {\n            // Low confidence - default to neutral\n            suggestedRating = 3;\n        }\n        \n        // Analyze key points for additional context\n        if (keyPoints && keyPoints.length > 0) {\n            const positiveKeywords = ['amazing', 'excellent', 'great', 'good', 'love', 'perfect', 'best', 'fantastic', 'wonderful', 'outstanding'];\n            const negativeKeywords = ['terrible', 'awful', 'bad', 'horrible', 'worst', 'disappointing', 'poor', 'mediocre', 'overpriced', 'scam'];\n            \n            const text = transcript.toLowerCase() + ' ' + keyPoints.join(' ').toLowerCase();\n            \n            const positiveCount = positiveKeywords.filter(word => text.includes(word)).length;\n            const negativeCount = negativeKeywords.filter(word => text.includes(word)).length;\n            \n            if (positiveCount > negativeCount && positiveCount >= 2) {\n                suggestedRating = Math.min(5, suggestedRating + 1);\n            } else if (negativeCount > positiveCount && negativeCount >= 2) {\n                suggestedRating = Math.max(1, suggestedRating - 1);\n            }\n        }\n        \n        // Special cases based on content\n        const text = transcript.toLowerCase();\n        if (text.includes('overpriced') || text.includes('scam') || text.includes('rip off')) {\n            suggestedRating = Math.max(1, suggestedRating - 1);\n        }\n        if (text.includes('worth it') || text.includes('recommend') || text.includes('love it')) {\n            suggestedRating = Math.min(5, suggestedRating + 1);\n        }\n        \n        return suggestedRating;\n    };\n\n    const analyzeVoiceInput = async (inputTranscript) => {\n        if (!inputTranscript || inputTranscript.trim().length === 0) {\n            setError('Please record some voice input first');\n            return;\n        }\n\n        if (!apiKey.trim()) {\n            setError('Please enter your NVIDIA API key');\n            return;\n        }\n\n        setIsAnalyzing(true);\n        setError('');\n\n        try {\n            console.log('Analyzing voice input:', inputTranscript.substring(0, 100) + '...');\n            const analysisResult = await VoiceService.getVoiceAnalysis(inputTranscript, apiKey);\n            \n            // Add the original transcript to the analysis result\n            const analysisWithTranscript = {\n                ...analysisResult,\n                transcript: inputTranscript\n            };\n            \n            setAnalysis(analysisWithTranscript);\n            \n            // Auto-adjust rating based on analysis\n            if (analysisResult.success) {\n                const suggestedRating = autoAdjustRating(inputTranscript, analysisResult);\n                if (suggestedRating && suggestedRating !== rating) {\n                    setRating(suggestedRating);\n                    console.log(`Auto-adjusted rating from ${rating} to ${suggestedRating} based on voice content`);\n                    setRatingAutoAdjusted(true);\n                }\n            }\n            \n            if (!analysisResult.success) {\n                setError(analysisResult.error || 'Analysis failed');\n            }\n        } catch (error) {\n            console.error('Voice analysis error:', error);\n            setError(error.message || 'Failed to analyze voice input');\n        } finally {\n            setIsAnalyzing(false);\n        }\n    };\n\n    const handleGenerateReview = async (inputTranscript, analysisData, reviewTypeParam) => {\n        // Validate API key first\n        if (!apiKey || typeof apiKey !== 'string' || apiKey.trim().length === 0) {\n            throw new Error('Please enter your NVIDIA API key');\n        }\n\n        // Validate API key format (should be a reasonable length, not an error message)\n        if (apiKey.length < 10 || apiKey.includes('TypeError') || apiKey.includes('Cannot read properties')) {\n            throw new Error('Invalid API key. Please enter a valid NVIDIA API key');\n        }\n\n        try {\n            // Combine review type from component state and parameter\n            const finalReviewType = reviewTypeParam || reviewType;\n            \n            console.log('Generating review with:', {\n                transcript: inputTranscript ? inputTranscript.substring(0, 100) + '...' : 'undefined',\n                reviewType: finalReviewType,\n                rating,\n                hasLocation: !!locationData,\n                apiKeyLength: apiKey.length,\n                apiKeyStart: apiKey.substring(0, 10) + '...'\n            });\n            \n            // Validate inputs before making the API call\n            if (!inputTranscript || inputTranscript.trim().length === 0) {\n                throw new Error('No transcript provided for review generation');\n            }\n            \n            if (!analysisData) {\n                throw new Error('No analysis data provided for review generation');\n            }\n            \n            const review = await VoiceService.generateReview(inputTranscript, analysisData, apiKey, finalReviewType);\n            \n            let reviewText = review;\n            \n            // Add location information to the review if available\n            if (locationData) {\n                reviewText += `\\n\\n📍 Location: `;\n                if (locationData.address) {\n                    reviewText += locationData.address;\n                } else {\n                    reviewText += `${locationData.latitude.toFixed(6)}, ${locationData.longitude.toFixed(6)}`;\n                }\n                if (locationData.accuracy) {\n                    reviewText += ` (Accuracy: ±${Math.round(locationData.accuracy)}m)`;\n                }\n            }\n\n            // Add rating if specified\n            if (rating && rating > 0) {\n                reviewText += `\\n\\n⭐ Rating: ${rating}/5`;\n            }\n            \n            setGeneratedReview(reviewText);\n            \n            // Auto-save the generated review\n            const reviewData = {\n                id: Date.now(),\n                type: finalReviewType,\n                rating,\n                review: reviewText,\n                transcript: inputTranscript,\n                analysis: analysisData,\n                location: locationData,\n                timestamp: new Date().toISOString()\n            };\n            \n            console.log('Saving review data:', reviewData);\n            \n            setSavedReviews(prev => [reviewData, ...prev]);\n            \n            // Save to localStorage\n            const existingReviews = JSON.parse(localStorage.getItem('voiceReviews') || '[]');\n            const updatedReviews = [reviewData, ...existingReviews];\n            localStorage.setItem('voiceReviews', JSON.stringify(updatedReviews));\n            \n            console.log('Saved to localStorage. Total voice reviews:', updatedReviews.length);\n            console.log('Current localStorage voiceReviews:', localStorage.getItem('voiceReviews'));\n            \n            // Show success message\n            alert('✅ Review generated and saved successfully! Check the Review History to see your saved reviews.');\n            \n            return reviewText;\n        } catch (error) {\n            console.error('Review generation error:', error);\n            throw error;\n        }\n    };\n\n    const handleSaveAnalysis = (analysisData) => {\n        const analysisRecord = {\n            id: Date.now(),\n            analysis: analysisData,\n            timestamp: new Date().toISOString()\n        };\n        \n        // Save to localStorage\n        const existingAnalyses = JSON.parse(localStorage.getItem('voiceAnalyses') || '[]');\n        localStorage.setItem('voiceAnalyses', JSON.stringify([analysisRecord, ...existingAnalyses]));\n        \n        alert('Analysis saved successfully!');\n    };\n\n    const clearAll = () => {\n        setTranscript('');\n        setAnalysis(null);\n        setGeneratedReview('');\n        setLocationData(null);\n        setError('');\n        setRatingAutoAdjusted(false);\n    };\n\n    const handleLocationChange = (location) => {\n        setLocationData(location);\n    };\n\n    return (\n        <div className=\"voice-review\">\n            <div className=\"voice-review-container\">\n                <div className=\"voice-review-header\">\n                    <h1>🎤 AI Voice Review Generator</h1>\n                    <p>Speak your experience and let NVIDIA Llama AI analyze and generate a professional review</p>\n                </div>\n\n                <div className=\"voice-review-content\">\n                    {/* Model Information */}\n                    <ModelInfo \n                        useCase=\"voice_analysis\" \n                        style={{ marginBottom: '24px' }}\n                    />\n\n                    {/* API Key Section */}\n                    <div className=\"api-key-section\">\n                        <label htmlFor=\"voiceApiKey\">NVIDIA API Key:</label>\n                        <input\n                            type=\"password\"\n                            id=\"voiceApiKey\"\n                            value={apiKey}\n                            onChange={(e) => handleApiKeyChange(e.target.value)}\n                            placeholder=\"Enter your NVIDIA API key\"\n                            className=\"api-key-input\"\n                        />\n                        <small>\n                            Get your API key from{' '}\n                            <a \n                                href=\"https://integrate.api.nvidia.com\" \n                                target=\"_blank\" \n                                rel=\"noopener noreferrer\"\n                            >\n                                NVIDIA API Portal\n                            </a>\n                            {' '}• This key is shared across all AI features\n                        </small>\n                    </div>\n\n                    <div className=\"voice-input-section\">\n                        <h2>🎤 Voice Input</h2>\n                        <div className=\"voice-input-header\">\n                            <div className=\"review-type-selector\">\n                                <label htmlFor=\"reviewType\">Review Type:</label>\n                                <select \n                                    id=\"reviewType\"\n                                    value={reviewType} \n                                    onChange={(e) => setReviewType(e.target.value)}\n                                    className=\"review-type-input\"\n                                >\n                                    <option value=\"restaurant\">🍽️ Restaurant</option>\n                                    <option value=\"hotel\">🏨 Hotel</option>\n                                    <option value=\"product\">📱 Product</option>\n                                    <option value=\"service\">🛠️ Service</option>\n                                    <option value=\"experience\">🎯 Experience</option>\n                                    <option value=\"app\">💻 App/Software</option>\n                                    <option value=\"place\">📍 Place/Location</option>\n                                    <option value=\"general\">📝 General</option>\n                                </select>\n                            </div>\n                        </div>\n                        <VoiceRecognition\n                            onTranscript={handleTranscript}\n                            placeholder=\"Click the microphone and speak about your experience...\"\n                            enableLLMEnhancement={true}\n                        />\n                        \n                        {transcript && (\n                            <div className=\"transcript-display\">\n                                <h3>Your Voice Input:</h3>\n                                <p>{transcript}</p>\n                                <div className=\"transcript-actions\">\n                                    <button \n                                        onClick={() => analyzeVoiceInput(transcript)} \n                                        disabled={isAnalyzing || !apiKey.trim()}\n                                        className=\"analyze-btn\"\n                                    >\n                                        {isAnalyzing ? '🤖 Analyzing...' : '🔍 Analyze Voice'}\n                                    </button>\n                                    <button onClick={clearAll} className=\"clear-btn\">\n                                        🗑️ Clear All\n                                    </button>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n\n                    {/* Rating Section */}\n                    <div className=\"rating-section\">\n                        <h2>⭐ Rating</h2>\n                        <div className=\"rating-container\">\n                            <div className=\"setting-group\">\n                                <label htmlFor=\"rating\">Rating: {rating}/5</label>\n                                <div className=\"rating-input\">\n                                    {[1, 2, 3, 4, 5].map(star => (\n                                        <button\n                                            key={star}\n                                            className={`star-btn ${star <= rating ? 'active' : ''}`}\n                                            onClick={() => {\n                                                setRating(star);\n                                                setRatingAutoAdjusted(false); // Clear auto-adjust flag when manually changed\n                                            }}\n                                        >\n                                            ⭐\n                                        </button>\n                                    ))}\n                                    {ratingAutoAdjusted && (\n                                        <span className=\"auto-adjusted-badge\">\n                                            🤖 AI Suggested\n                                        </span>\n                                    )}\n                                </div>\n                                {ratingAutoAdjusted && (\n                                    <small className=\"auto-adjusted-note\">\n                                        Rating was automatically adjusted based on your voice content. You can change it manually.\n                                    </small>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"location-section\">\n                        <LocationAttachment \n                            onLocationChange={handleLocationChange}\n                            initialLocation={locationData}\n                            transcript={transcript}\n                            apiKey={apiKey}\n                        />\n                    </div>\n\n                    {/* Error Display */}\n                    {error && (\n                        <div className=\"error-message\">\n                            <span className=\"error-icon\">⚠️</span>\n                            {error}\n                        </div>\n                    )}\n\n                    {/* Voice Analysis Section */}\n                    {analysis && (\n                        <div className=\"analysis-section\">\n                            <h2>📊 AI Analysis</h2>\n                            <VoiceAnalysis \n                                analysis={analysis}\n                                onGenerateReview={handleGenerateReview}\n                                onSaveAnalysis={handleSaveAnalysis}\n                                parentReviewType={reviewType}\n                            />\n                        </div>\n                    )}\n\n                    {/* Generated Review Display */}\n                    {generatedReview && (\n                        <div className=\"generated-review-section\">\n                            <h2>📝 Generated Review</h2>\n                            <div className=\"review-content\">\n                                <p>{generatedReview}</p>\n                            </div>\n                            <div className=\"review-actions\">\n                                <button \n                                    onClick={() => navigator.clipboard.writeText(generatedReview)}\n                                    className=\"copy-btn\"\n                                >\n                                    📋 Copy Review\n                                </button>\n                            </div>\n                        </div>\n                    )}\n\n                    {/* Instructions */}\n                    <div className=\"instructions\">\n                        <h3>💡 How to Use:</h3>\n                        <ol>\n                            <li>Enter your NVIDIA API key above</li>\n                            <li>Click the microphone to start recording</li>\n                            <li>Speak about your experience clearly</li>\n                            <li>Select the review type and rating</li>\n                            <li>Optionally attach your location</li>\n                            <li>Click \"Analyze Voice\" to get AI insights</li>\n                            <li>Generate professional reviews from your voice input</li>\n                        </ol>\n                        \n                        <div className=\"tips\">\n                            <h4>🎯 Tips for Better Results:</h4>\n                            <ul>\n                                <li>Speak clearly and at a normal pace</li>\n                                <li>Use a quiet environment for better recognition</li>\n                                <li>Be specific about what you're reviewing</li>\n                                <li>Include both positive and negative points</li>\n                                <li>Mention specific features or experiences</li>\n                                <li>Describe the atmosphere, service, or quality</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default VoiceReview; ","import React, { useState } from 'react';\nimport VoiceRecognition from '../components/VoiceRecognition';\nimport './VoiceTest.css';\n\nconst VoiceTest = () => {\n    const [testResults, setTestResults] = useState([]);\n    const [browserInfo, setBrowserInfo] = useState({});\n\n    React.useEffect(() => {\n        // Get browser information\n        const info = {\n            userAgent: navigator.userAgent,\n            platform: navigator.platform,\n            language: navigator.language,\n            cookieEnabled: navigator.cookieEnabled,\n            onLine: navigator.onLine,\n            speechRecognition: !!(window.SpeechRecognition || window.webkitSpeechRecognition),\n            mediaDevices: !!navigator.mediaDevices,\n            getUserMedia: !!navigator.mediaDevices?.getUserMedia,\n        };\n        setBrowserInfo(info);\n    }, []);\n\n    const addTestResult = (message, type = 'info') => {\n        const timestamp = new Date().toLocaleTimeString();\n        setTestResults(prev => [...prev, { message, type, timestamp }]);\n    };\n\n    const testMicrophone = async () => {\n        try {\n            addTestResult('Testing microphone access...', 'info');\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            addTestResult('✅ Microphone access granted!', 'success');\n            stream.getTracks().forEach(track => track.stop());\n        } catch (error) {\n            addTestResult(`❌ Microphone access failed: ${error.message}`, 'error');\n        }\n    };\n\n    const clearResults = () => {\n        setTestResults([]);\n    };\n\n    const handleVoiceTranscript = (transcript) => {\n        addTestResult(`🎤 Voice input: \"${transcript}\"`, 'success');\n    };\n\n    return (\n        <div className=\"voice-test\">\n            <div className=\"test-container\">\n                <h1>🎤 Voice Recognition Test</h1>\n                <p>Use this page to test and debug voice recognition issues</p>\n\n                <div className=\"test-sections\">\n                    <div className=\"test-section\">\n                        <h2>Browser Information</h2>\n                        <div className=\"browser-info\">\n                            {Object.entries(browserInfo).map(([key, value]) => (\n                                <div key={key} className=\"info-item\">\n                                    <strong>{key}:</strong> \n                                    <span className={value ? 'success' : 'error'}>\n                                        {typeof value === 'boolean' ? (value ? '✅ Yes' : '❌ No') : value}\n                                    </span>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n\n                    <div className=\"test-section\">\n                        <h2>Microphone Test</h2>\n                        <button onClick={testMicrophone} className=\"test-btn\">\n                            🎤 Test Microphone Access\n                        </button>\n                    </div>\n\n                    <div className=\"test-section\">\n                        <h2>Voice Recognition Test</h2>\n                        <VoiceRecognition\n                            onTranscript={handleVoiceTranscript}\n                            placeholder=\"Speak something to test voice recognition...\"\n                        />\n                    </div>\n\n                    <div className=\"test-section\">\n                        <h2>Test Results</h2>\n                        <div className=\"test-controls\">\n                            <button onClick={clearResults} className=\"clear-btn\">\n                                🗑️ Clear Results\n                            </button>\n                        </div>\n                        <div className=\"test-results\">\n                            {testResults.length === 0 ? (\n                                <p className=\"no-results\">No test results yet. Try the tests above!</p>\n                            ) : (\n                                testResults.map((result, index) => (\n                                    <div key={index} className={`test-result ${result.type}`}>\n                                        <span className=\"timestamp\">[{result.timestamp}]</span>\n                                        <span className=\"message\">{result.message}</span>\n                                    </div>\n                                ))\n                            )}\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"troubleshooting-tips\">\n                    <h2>🔧 Troubleshooting Tips</h2>\n                    <ul>\n                        <li><strong>Browser Support:</strong> Use Chrome, Edge, or Safari</li>\n                        <li><strong>HTTPS Required:</strong> Voice recognition needs secure connection</li>\n                        <li><strong>Microphone Permissions:</strong> Allow microphone access when prompted</li>\n                        <li><strong>Clear Speech:</strong> Speak clearly and at normal volume</li>\n                        <li><strong>Quiet Environment:</strong> Reduce background noise</li>\n                        <li><strong>Check Console:</strong> Press F12 to see detailed error messages</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default VoiceTest; ","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ReviewHistory.css';\n\nconst ReviewHistory = () => {\n    const [reviews, setReviews] = useState([]);\n    const [filteredReviews, setFilteredReviews] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [filterType, setFilterType] = useState('all');\n    const [expandedReviews, setExpandedReviews] = useState(new Set());\n\n    useEffect(() => {\n        loadReviews();\n    }, []);\n\n    useEffect(() => {\n        filterReviews();\n    }, [reviews, searchTerm, filterType]);\n\n    const loadReviews = () => {\n        // Load from old reviewHistory\n        const savedReviews = JSON.parse(localStorage.getItem('reviewHistory') || '[]');\n        \n        // Load from new voiceReviews\n        const voiceReviews = JSON.parse(localStorage.getItem('voiceReviews') || '[]');\n        \n        console.log('Loading reviews from localStorage:');\n        console.log('- reviewHistory:', savedReviews.length, 'reviews');\n        console.log('- voiceReviews:', voiceReviews.length, 'reviews');\n        console.log('- voiceReviews data:', voiceReviews);\n        \n        // Combine and format voice reviews to match the expected structure\n        const formattedVoiceReviews = voiceReviews.map(voiceReview => ({\n            id: voiceReview.id,\n            reviewType: voiceReview.type,\n            itemName: `${voiceReview.type.charAt(0).toUpperCase() + voiceReview.type.slice(1)} Review`,\n            category: voiceReview.type,\n            rating: voiceReview.rating,\n            tone: 'voice-generated',\n            pros: '',\n            cons: '',\n            experience: voiceReview.transcript || '',\n            review: voiceReview.review,\n            location: voiceReview.location,\n            timestamp: voiceReview.timestamp,\n            isVoiceReview: true\n        }));\n        \n        console.log('Formatted voice reviews:', formattedVoiceReviews);\n        \n        // Combine all reviews and sort by timestamp (newest first)\n        const allReviews = [...savedReviews, ...formattedVoiceReviews]\n            .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n        \n        console.log('Total combined reviews:', allReviews.length);\n        \n        setReviews(allReviews);\n    };\n\n    const filterReviews = () => {\n        let filtered = reviews;\n\n        // Filter by type\n        if (filterType !== 'all') {\n            filtered = filtered.filter(review => review.reviewType === filterType);\n        }\n\n        // Filter by search term\n        if (searchTerm) {\n            filtered = filtered.filter(review => \n                review.itemName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                review.category.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                review.review.toLowerCase().includes(searchTerm.toLowerCase())\n            );\n        }\n\n        setFilteredReviews(filtered);\n    };\n\n    const deleteReview = (id) => {\n        if (window.confirm('Are you sure you want to delete this review?')) {\n            const updatedReviews = reviews.filter(review => review.id !== id);\n            setReviews(updatedReviews);\n            \n            // Separate reviews by type\n            const regularReviews = updatedReviews.filter(review => !review.isVoiceReview);\n            const voiceReviews = updatedReviews.filter(review => review.isVoiceReview);\n            \n            // Update both storage systems\n            localStorage.setItem('reviewHistory', JSON.stringify(regularReviews));\n            \n            // Convert voice reviews back to original format\n            const originalVoiceReviews = voiceReviews.map(review => ({\n                id: review.id,\n                type: review.reviewType,\n                rating: review.rating,\n                review: review.review,\n                transcript: review.experience,\n                analysis: review.analysis,\n                timestamp: review.timestamp\n            }));\n            localStorage.setItem('voiceReviews', JSON.stringify(originalVoiceReviews));\n        }\n    };\n\n    const copyReview = (review) => {\n        navigator.clipboard.writeText(review.review);\n        alert('Review copied to clipboard!');\n    };\n\n    const toggleReviewExpansion = (reviewId) => {\n        setExpandedReviews(prev => {\n            const newSet = new Set(prev);\n            if (newSet.has(reviewId)) {\n                newSet.delete(reviewId);\n            } else {\n                newSet.add(reviewId);\n            }\n            return newSet;\n        });\n    };\n\n    const formatDate = (timestamp) => {\n        return new Date(timestamp).toLocaleDateString('en-US', {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit'\n        });\n    };\n\n    const getReviewTypeIcon = (type) => {\n        const icons = {\n            product: '📱',\n            restaurant: '🍽️',\n            hotel: '🏨',\n            movie: '🎬',\n            book: '📚',\n            service: '🛠️',\n            experience: '🎯',\n            app: '💻',\n            place: '📍',\n            general: '📝'\n        };\n        return icons[type] || '📝';\n    };\n\n    const getRatingStars = (rating) => {\n        return '⭐'.repeat(rating) + '☆'.repeat(5 - rating);\n    };\n\n    const formatLocation = (location) => {\n        if (!location) return null;\n        \n        if (location.address) {\n            return location.address;\n        } else if (location.latitude && location.longitude) {\n            return `${location.latitude.toFixed(6)}, ${location.longitude.toFixed(6)}`;\n        }\n        return null;\n    };\n\n    return (\n        <div className=\"review-history\">\n            <div className=\"history-container\">\n                <div className=\"history-header\">\n                    <h1>Review History</h1>\n                    <p>Your previously generated reviews</p>\n                    <button \n                        onClick={loadReviews} \n                        className=\"refresh-btn\"\n                        title=\"Refresh reviews\"\n                    >\n                        🔄 Refresh\n                    </button>\n                </div>\n\n                <div className=\"filters-section\">\n                    <div className=\"search-box\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search reviews...\"\n                            value={searchTerm}\n                            onChange={(e) => setSearchTerm(e.target.value)}\n                        />\n                        <span className=\"search-icon\">🔍</span>\n                    </div>\n\n                    <div className=\"filter-buttons\">\n                        <button\n                            className={`filter-btn ${filterType === 'all' ? 'active' : ''}`}\n                            onClick={() => setFilterType('all')}\n                        >\n                            All\n                        </button>\n                        <button\n                            className={`filter-btn ${filterType === 'restaurant' ? 'active' : ''}`}\n                            onClick={() => setFilterType('restaurant')}\n                        >\n                            🍽️ Restaurants\n                        </button>\n                        <button\n                            className={`filter-btn ${filterType === 'hotel' ? 'active' : ''}`}\n                            onClick={() => setFilterType('hotel')}\n                        >\n                            🏨 Hotels\n                        </button>\n                        <button\n                            className={`filter-btn ${filterType === 'product' ? 'active' : ''}`}\n                            onClick={() => setFilterType('product')}\n                        >\n                            📱 Products\n                        </button>\n                        <button\n                            className={`filter-btn ${filterType === 'service' ? 'active' : ''}`}\n                            onClick={() => setFilterType('service')}\n                        >\n                            🛠️ Services\n                        </button>\n                        <button\n                            className={`filter-btn ${filterType === 'experience' ? 'active' : ''}`}\n                            onClick={() => setFilterType('experience')}\n                        >\n                            🎯 Experiences\n                        </button>\n                        <button\n                            className={`filter-btn ${filterType === 'app' ? 'active' : ''}`}\n                            onClick={() => setFilterType('app')}\n                        >\n                            💻 Apps\n                        </button>\n                        <button\n                            className={`filter-btn ${filterType === 'place' ? 'active' : ''}`}\n                            onClick={() => setFilterType('place')}\n                        >\n                            📍 Places\n                        </button>\n                        <button\n                            className={`filter-btn ${filterType === 'general' ? 'active' : ''}`}\n                            onClick={() => setFilterType('general')}\n                        >\n                            📝 General\n                        </button>\n                    </div>\n                </div>\n\n                {filteredReviews.length === 0 ? (\n                    <div className=\"empty-state colorful\">\n                        <div className=\"empty-icon\">📝</div>\n                        <h3>No reviews found</h3>\n                        <p>\n                            {reviews.length === 0 \n                                ? \"You haven't generated any reviews yet. Start by creating your first review!\"\n                                : \"No reviews match your current search or filter criteria.\"\n                            }\n                        </p>\n                        {reviews.length === 0 && (\n                            <Link to=\"/generate\" className=\"cta-button\">✨ Generate Your First Review</Link>\n                        )}\n                    </div>\n                ) : (\n                    <div className=\"reviews-grid\">\n                        {filteredReviews.map((review) => (\n                            <div key={review.id} className={`review-card review-type-${review.reviewType}`}>\n                                <div className=\"review-card-header\">\n                                    <span className=\"type-icon\" title={review.reviewType}>{getReviewTypeIcon(review.reviewType)}</span>\n                                    <span className=\"review-title\">{review.itemName}</span>\n                                    <span className=\"review-rating\" title={`Rating: ${review.rating}/5`}>\n                                        {getRatingStars(review.rating)} <span className=\"rating-num\">{review.rating}/5</span>\n                                    </span>\n                                    {review.isVoiceReview && <span className=\"voice-badge\" title=\"Voice Review\">🎤</span>}\n                                </div>\n                                <div className=\"review-card-body\">\n                                    <div className=\"review-preview-text\">\n                                        {review.review.length > 180 && !expandedReviews.has(review.id)\n                                            ? (\n                                                <>\n                                                    {review.review.substring(0, 180)}... \n                                                    <button onClick={() => toggleReviewExpansion(review.id)} className=\"expand-btn\" title=\"Read full review\">Read more</button>\n                                                </>\n                                            )\n                                            : (\n                                                <>\n                                                    {review.review}\n                                                    {review.review.length > 180 && expandedReviews.has(review.id) && (\n                                                        <button onClick={() => toggleReviewExpansion(review.id)} className=\"collapse-btn\" title=\"Show less\">Show less</button>\n                                                    )}\n                                                </>\n                                            )\n                                        }\n                                    </div>\n                                    {review.location && (\n                                        <div className=\"review-location\">\n                                            <span className=\"location-icon\">📍</span>\n                                            <span className=\"location-text\">{formatLocation(review.location)}</span>\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"review-card-footer\">\n                                    <span className=\"review-date\">{formatDate(review.timestamp)}</span>\n                                    <span className=\"review-tone\">{review.tone}</span>\n                                    <div className=\"review-actions\">\n                                        <button onClick={() => copyReview(review)} className=\"action-btn copy\" title=\"Copy review\">📋</button>\n                                        <button onClick={() => deleteReview(review.id)} className=\"action-btn delete\" title=\"Delete review\">🗑️</button>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                )}\n\n                {filteredReviews.length > 0 && (\n                    <div className=\"history-stats\">\n                        <p>\n                            Showing {filteredReviews.length} of {reviews.length} reviews\n                        </p>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default ReviewHistory; ","import React, { useState } from 'react';\nimport './Llma.css';\nimport apiConfig from '../config/api';\n\nconst Llma = () => {\n  const [inputText, setInputText] = useState('');\n  const [response, setResponse] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [apiKey, setApiKey] = useState(() => {\n    // Load API key from localStorage on component mount\n    return localStorage.getItem('nvidiaApiKey') || '';\n  });\n  const [error, setError] = useState('');\n  const [conversationHistory, setConversationHistory] = useState([]);\n\n  // Save API key to localStorage whenever it changes\n  const handleApiKeyChange = (newApiKey) => {\n    setApiKey(newApiKey);\n    if (newApiKey.trim()) {\n      localStorage.setItem('nvidiaApiKey', newApiKey);\n    } else {\n      localStorage.removeItem('nvidiaApiKey');\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!apiKey) {\n      setError('Please enter your NVIDIA API key');\n      return;\n    }\n\n    if (!inputText.trim()) {\n      setError('Please enter some text to process');\n      return;\n    }\n\n    setIsLoading(true);\n    setError('');\n    setResponse('');\n\n    try {\n      // Add user message to conversation history\n      const userMessage = { role: 'user', content: inputText, timestamp: new Date() };\n      setConversationHistory(prev => [...prev, userMessage]);\n\n      // Note: This would need to be implemented with a backend service\n      // due to CORS restrictions and API key security\n      const result = await callLlamaAPI(inputText, apiKey, conversationHistory);\n      setResponse(result);\n      \n      // Add AI response to conversation history\n      const aiMessage = { role: 'assistant', content: result, timestamp: new Date() };\n      setConversationHistory(prev => [...prev, aiMessage]);\n    } catch (err) {\n      setError(`Error: ${err.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const callLlamaAPI = async (text, key, history) => {\n    // This is a placeholder implementation\n    // In a real application, you would need a backend service to handle the API call\n    // due to CORS restrictions and to keep the API key secure\n    \n    const response = await fetch(`${apiConfig.baseURL}/llama`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        text: text,\n        apiKey: key,\n        conversationHistory: history\n      })\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.error || 'Failed to get response from Llama API');\n    }\n\n    const data = await response.json();\n    return data.response;\n  };\n\n  const examplePrompts = [\n    \"Hey, what's up? How's your day going?\",\n    \"Can you help me understand something?\",\n    \"What do you think about AI and the future?\",\n    \"Tell me a funny story or joke\"\n  ];\n\n  const handleExampleClick = (example) => {\n    setInputText(example);\n  };\n\n  const clearConversation = () => {\n    setConversationHistory([]);\n    setResponse('');\n    setError('');\n  };\n\n  return (\n    <div className=\"llma-container\">\n      <div className=\"llma-header\">\n        <h2>💬 Chat with AI</h2>\n        <p>Have a natural conversation with NVIDIA's advanced AI</p>\n      </div>\n\n      <div className=\"llma-content\">\n        <div className=\"api-key-section\">\n          <label htmlFor=\"apiKey\">NVIDIA API Key:</label>\n          <input\n            type=\"password\"\n            id=\"apiKey\"\n            value={apiKey}\n            onChange={(e) => handleApiKeyChange(e.target.value)}\n            placeholder=\"Enter your NVIDIA API key\"\n            className=\"api-key-input\"\n          />\n          <small>\n            Get your API key from{' '}\n            <a \n              href=\"https://integrate.api.nvidia.com\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n            >\n              NVIDIA API Portal\n            </a>\n            {' '}• This key is shared across all AI features\n          </small>\n        </div>\n\n        {/* Conversation History */}\n        {conversationHistory.length > 0 && (\n          <div className=\"conversation-history\">\n            <div className=\"history-header\">\n              <h4>💬 Conversation</h4>\n              <button onClick={clearConversation} className=\"clear-conversation-btn\">\n                🗑️ Clear Chat\n              </button>\n            </div>\n            <div className=\"messages-container\">\n              {conversationHistory.map((message, index) => (\n                <div key={index} className={`message ${message.role}`}>\n                  <div className=\"message-content\">\n                    {message.content}\n                  </div>\n                  <div className=\"message-timestamp\">\n                    {message.timestamp.toLocaleTimeString()}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        <form onSubmit={handleSubmit} className=\"llma-form\">\n          <div className=\"input-section\">\n            <label htmlFor=\"userInput\">Your Message:</label>\n            <textarea\n              id=\"userInput\"\n              value={inputText}\n              onChange={(e) => setInputText(e.target.value)}\n              placeholder=\"Type your message here... Just chat naturally!\"\n              rows=\"3\"\n              className=\"text-input\"\n            />\n          </div>\n\n          <div className=\"example-prompts\">\n            <h4>💡 Conversation Starters:</h4>\n            <div className=\"prompt-buttons\">\n              {examplePrompts.map((prompt, index) => (\n                <button\n                  key={index}\n                  type=\"button\"\n                  onClick={() => handleExampleClick(prompt)}\n                  className=\"example-btn\"\n                >\n                  {prompt}\n                </button>\n              ))}\n            </div>\n          </div>\n\n          <button \n            type=\"submit\" \n            disabled={isLoading || !inputText.trim() || !apiKey}\n            className=\"submit-btn\"\n          >\n            {isLoading ? '🤔 Thinking...' : '💬 Send Message'}\n          </button>\n        </form>\n\n        {error && (\n          <div className=\"error-message\">\n            <span className=\"error-icon\">⚠️</span>\n            {error}\n          </div>\n        )}\n\n        {isLoading && (\n          <div className=\"loading-indicator\">\n            <div className=\"loading-spinner\"></div>\n            <p>AI is thinking...</p>\n          </div>\n        )}\n\n        {response && conversationHistory.length === 0 && (\n          <div className=\"response-section\">\n            <h3>💬 AI Response:</h3>\n            <div className=\"response-content\">\n              <pre>{response}</pre>\n            </div>\n            <button \n              onClick={() => navigator.clipboard.writeText(response)}\n              className=\"copy-btn\"\n            >\n              📋 Copy Response\n            </button>\n          </div>\n        )}\n      </div>\n\n      <div className=\"llma-info\">\n        <h4>ℹ️ About This Chat</h4>\n        <ul>\n          <li><strong>Model:</strong> Meta Llama 3.1 70B Instruct</li>\n          <li><strong>Style:</strong> Natural, conversational responses</li>\n          <li><strong>Capabilities:</strong> Casual chat, questions, storytelling</li>\n          <li><strong>Tone:</strong> Friendly and approachable</li>\n        </ul>\n        \n        <div className=\"api-info\">\n          <h5>🔧 Chat Configuration:</h5>\n          <pre className=\"api-config\">\n{`{\n  \"model\": \"meta/llama-3.1-70b-instruct\",\n  \"temperature\": 0.7,\n  \"top_p\": 0.9,\n  \"max_tokens\": 3072,\n  \"style\": \"conversational\"\n}`}\n          </pre>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Llma;","import React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => {\n    const location = useLocation();\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n    const toggleMenu = () => {\n        setIsMenuOpen(!isMenuOpen);\n    };\n\n    const closeMenu = () => {\n        setIsMenuOpen(false);\n    };\n\n    return (\n        <header className=\"header\">\n            <div className=\"header-content\">\n                <Link to=\"/\" className=\"logo\" onClick={closeMenu}>\n                    <span className=\"logo-icon\">⭐</span>\n                    <span className=\"logo-text\">ReviewGen</span>\n                </Link>\n                \n                {/* Mobile hamburger menu */}\n                <button \n                    className={`hamburger ${isMenuOpen ? 'active' : ''}`}\n                    onClick={toggleMenu}\n                    aria-label=\"Toggle navigation menu\"\n                >\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </button>\n                \n                <nav className={`nav-menu ${isMenuOpen ? 'active' : ''}`}>\n                    <Link \n                        to=\"/\" \n                        className={`nav-link ${location.pathname === '/' ? 'active' : ''}`}\n                        onClick={closeMenu}\n                    >\n                        🏠 Home\n                    </Link>\n                    <Link \n                        to=\"/generate\" \n                        className={`nav-link ${location.pathname === '/generate' ? 'active' : ''}`}\n                        onClick={closeMenu}\n                    >\n                        ✍️ Generate\n                    </Link>\n                    <Link \n                        to=\"/voice\" \n                        className={`nav-link ${location.pathname === '/voice' ? 'active' : ''}`}\n                        onClick={closeMenu}\n                    >\n                        🎤 Voice\n                    </Link>\n                    <Link \n                        to=\"/llama\" \n                        className={`nav-link ${location.pathname === '/llama' ? 'active' : ''}`}\n                        onClick={closeMenu}\n                    >\n                        🤖 Llama\n                    </Link>\n                    <Link \n                        to=\"/history\" \n                        className={`nav-link ${location.pathname === '/history' ? 'active' : ''}`}\n                        onClick={closeMenu}\n                    >\n                        📚 History\n                    </Link>\n                    <Link \n                        to=\"/customer-service-response\" \n                        className={`nav-link ${location.pathname === '/customer-service-response' ? 'active' : ''}`}\n                        onClick={closeMenu}\n                    >\n                        💬 Chatty Agent\n                    </Link>\n                    <Link \n                        to=\"/models\" \n                        className={`nav-link ${location.pathname === '/models' ? 'active' : ''}`}\n                        onClick={closeMenu}\n                    >\n                        🤖 AI Models\n                    </Link>\n                    <Link \n                        to=\"/blog\" \n                        className={`nav-link ${location.pathname.startsWith('/blog') && !location.pathname.includes('/blog-creator') ? 'active' : ''}`}\n                        onClick={closeMenu}\n                    >\n                        📝 Blog\n                    </Link>\n                    <Link \n                        to=\"/blog-creator\" \n                        className={`nav-link ${location.pathname === '/blog-creator' ? 'active' : ''}`}\n                        onClick={closeMenu}\n                    >\n                        ✍️ Blog Creator\n                    </Link>\n                </nav>\n            </div>\n            \n            {/* Mobile menu overlay */}\n            {isMenuOpen && (\n                <div className=\"mobile-overlay\" onClick={closeMenu}></div>\n            )}\n        </header>\n    );\n};\n\nexport default Header; ","import React, { useState, useEffect } from 'react';\n\nexport default function CustomerServiceResponse() {\n  const [review, setReview] = useState('');\n  const [sentiment, setSentiment] = useState('negative');\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [modelInfo, setModelInfo] = useState(null);\n  const [staffName, setStaffName] = useState('');\n\n  // Load model information on component mount\n  useEffect(() => {\n    fetchModelInfo();\n  }, []);\n\n  const fetchModelInfo = async () => {\n    try {\n      const res = await fetch('/api/models');\n      const data = await res.json();\n      if (data.success) {\n        const customerServiceModel = data.models.find(m => m.useCase === 'customer_service');\n        setModelInfo(customerServiceModel);\n      }\n    } catch (error) {\n      console.warn('Failed to fetch model info:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setResponse('');\n    setError('');\n    setStaffName('');\n    try {\n      const apiKey = process.env.REACT_APP_NVIDIA_API_KEY || '';\n      const res = await fetch('/api/voice/customer-service-response', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ review, sentiment, apiKey }),\n      });\n      const data = await res.json();\n      if (data.success) {\n        setStaffName(data.staffName || 'Customer Care Team');\n        setResponse(data.response || data.message || 'No response');\n      } else {\n        setError(data.error || 'Error generating response');\n      }\n    } catch (err) {\n      setError('Network error');\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div style={{ \n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n      padding: '20px',\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif'\n    }}>\n      <div style={{ \n        maxWidth: 800, \n        margin: '0 auto',\n        background: 'rgba(255, 255, 255, 0.95)',\n        borderRadius: '24px',\n        boxShadow: '0 20px 60px rgba(0, 0, 0, 0.15)',\n        overflow: 'hidden',\n        backdropFilter: 'blur(10px)'\n      }}>\n        {/* Header Section */}\n        <div style={{\n          background: 'linear-gradient(135deg, #4f8cff 0%, #38e8ff 100%)',\n          padding: '40px 32px',\n          textAlign: 'center',\n          position: 'relative',\n          overflow: 'hidden'\n        }}>\n          <div style={{\n            position: 'absolute',\n            top: '-50%',\n            right: '-20%',\n            width: '200px',\n            height: '200px',\n            background: 'rgba(255, 255, 255, 0.1)',\n            borderRadius: '50%',\n            animation: 'float 6s ease-in-out infinite'\n          }}></div>\n          <div style={{\n            position: 'absolute',\n            bottom: '-30%',\n            left: '-10%',\n            width: '150px',\n            height: '150px',\n            background: 'rgba(255, 255, 255, 0.08)',\n            borderRadius: '50%',\n            animation: 'float 8s ease-in-out infinite reverse'\n          }}></div>\n          \n          <span style={{ \n            fontSize: '64px', \n            marginBottom: '16px', \n            display: 'block',\n            filter: 'drop-shadow(0 4px 8px rgba(0,0,0,0.1))'\n          }}>👨‍💼</span>\n          <h1 style={{ \n            margin: '0 0 12px 0', \n            fontWeight: '800', \n            fontSize: '36px', \n            letterSpacing: '-0.5px',\n            color: '#fff',\n            textShadow: '0 2px 4px rgba(0,0,0,0.1)'\n          }}>\n            Customer Relationship Agent\n          </h1>\n          <p style={{ \n            margin: '0', \n            fontSize: '18px', \n            opacity: '0.95',\n            color: '#fff',\n            fontWeight: '500'\n          }}>\n            Transform customer feedback into warm, personal conversations\n          </p>\n        </div>\n\n        {/* Main Content */}\n        <div style={{\n          padding: '40px 32px',\n          background: '#fff'\n        }}>\n          {/* Model Information */}\n          {modelInfo && (\n            <div style={{\n              background: 'linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%)',\n              borderRadius: '16px',\n              padding: '20px',\n              marginBottom: '24px',\n              border: '1px solid #bae6fd'\n            }}>\n              <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                gap: '12px',\n                marginBottom: '12px'\n              }}>\n                <span style={{ fontSize: '24px' }}>🤖</span>\n                <h3 style={{ \n                  margin: '0', \n                  color: '#0c4a6e', \n                  fontSize: '18px',\n                  fontWeight: '700'\n                }}>\n                  AI Model: {modelInfo.name}\n                </h3>\n              </div>\n              <p style={{ \n                margin: '0 0 12px 0', \n                color: '#0369a1', \n                lineHeight: '1.5',\n                fontSize: '14px'\n              }}>\n                {modelInfo.description}\n              </p>\n              <div style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: '8px'\n              }}>\n                {modelInfo.strengths.map((strength, index) => (\n                  <span key={index} style={{\n                    background: '#0ea5e9',\n                    color: '#fff',\n                    padding: '4px 8px',\n                    borderRadius: '12px',\n                    fontSize: '12px',\n                    fontWeight: '500'\n                  }}>\n                    {strength}\n                  </span>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Instructions */}\n          <div style={{\n            background: 'linear-gradient(135deg, #f8f9ff 0%, #e8f4ff 100%)',\n            borderRadius: '16px',\n            padding: '24px',\n            marginBottom: '32px',\n            border: '1px solid #e1e8ff'\n          }}>\n            <h3 style={{ \n              margin: '0 0 12px 0', \n              color: '#2d3748', \n              fontSize: '20px',\n              fontWeight: '700',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px'\n            }}>\n              💡 How it works\n            </h3>\n            <p style={{ \n              margin: '0', \n              color: '#4a5568', \n              lineHeight: '1.6',\n              fontSize: '15px'\n            }}>\n              Paste customer feedback below, select the sentiment, and our AI will generate a warm, personal response \n              as if a customer relationship agent is having a genuine conversation with them - using friendly, \n              empathetic language that builds trust and shows we care about their experience.\n            </p>\n          </div>\n\n          <form onSubmit={handleSubmit}>\n            {/* Review Input Section */}\n            <div style={{ marginBottom: '28px' }}>\n              <label style={{ \n                display: 'block', \n                marginBottom: '12px', \n                fontWeight: '700', \n                color: '#2d3748',\n                fontSize: '16px',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '8px'\n              }}>\n                📝 Customer Feedback\n              </label>\n              <textarea\n                value={review}\n                onChange={e => setReview(e.target.value)}\n                placeholder=\"Paste the customer feedback here... For example: 'The food was cold and the service was terrible. I waited 30 minutes for my order and when it finally came, it was completely wrong.'\"\n                rows={8}\n                style={{ \n                  width: '100%', \n                  borderRadius: '12px', \n                  border: '2px solid #e2e8f0', \n                  padding: '20px', \n                  fontSize: '16px', \n                  background: '#fafbfc',\n                  minHeight: '200px',\n                  resize: 'vertical',\n                  fontFamily: 'inherit',\n                  lineHeight: '1.6',\n                  transition: 'all 0.3s ease',\n                  boxSizing: 'border-box'\n                }}\n                onFocus={(e) => {\n                  e.target.style.borderColor = '#667eea';\n                  e.target.style.background = '#fff';\n                  e.target.style.boxShadow = '0 0 0 3px rgba(102, 126, 234, 0.1)';\n                }}\n                onBlur={(e) => {\n                  e.target.style.borderColor = '#e2e8f0';\n                  e.target.style.background = '#fafbfc';\n                  e.target.style.boxShadow = 'none';\n                }}\n                required\n              />\n            </div>\n\n            {/* Sentiment Selection */}\n            <div style={{ marginBottom: '32px' }}>\n              <label style={{ \n                display: 'block', \n                marginBottom: '12px', \n                fontWeight: '700', \n                color: '#2d3748',\n                fontSize: '16px',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '8px'\n              }}>\n                🎭 Feedback Sentiment\n              </label>\n              <div style={{\n                display: 'flex',\n                gap: '12px',\n                flexWrap: 'wrap'\n              }}>\n                {[\n                  { value: 'negative', label: 'Negative', icon: '😞', color: '#e53e3e' },\n                  { value: 'neutral', label: 'Neutral', icon: '😐', color: '#d69e2e' },\n                  { value: 'positive', label: 'Positive', icon: '😊', color: '#38a169' }\n                ].map(option => (\n                  <button\n                    key={option.value}\n                    type=\"button\"\n                    onClick={() => setSentiment(option.value)}\n                    style={{\n                      padding: '12px 20px',\n                      borderRadius: '12px',\n                      border: `2px solid ${sentiment === option.value ? option.color : '#e2e8f0'}`,\n                      background: sentiment === option.value ? `${option.color}15` : '#fff',\n                      color: sentiment === option.value ? option.color : '#4a5568',\n                      cursor: 'pointer',\n                      transition: 'all 0.3s ease',\n                      fontSize: '15px',\n                      fontWeight: '600',\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '8px',\n                      minWidth: '120px',\n                      justifyContent: 'center'\n                    }}\n                    onMouseEnter={(e) => {\n                      if (sentiment !== option.value) {\n                        e.target.style.borderColor = option.color;\n                        e.target.style.transform = 'translateY(-2px)';\n                      }\n                    }}\n                    onMouseLeave={(e) => {\n                      if (sentiment !== option.value) {\n                        e.target.style.borderColor = '#e2e8f0';\n                        e.target.style.transform = 'translateY(0)';\n                      }\n                    }}\n                  >\n                    <span style={{ fontSize: '18px' }}>{option.icon}</span>\n                    {option.label}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Submit Button */}\n            <button \n              type=\"submit\" \n              disabled={loading}\n              style={{ \n                width: '100%',\n                background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                color: '#fff', \n                border: 'none', \n                borderRadius: '12px', \n                padding: '16px 32px', \n                fontWeight: '700', \n                fontSize: '18px', \n                cursor: 'pointer',\n                boxShadow: '0 4px 16px rgba(102, 126, 234, 0.3)',\n                transition: 'all 0.3s ease',\n                position: 'relative',\n                overflow: 'hidden'\n              }}\n              onMouseEnter={(e) => {\n                if (!loading) {\n                  e.target.style.transform = 'translateY(-2px)';\n                  e.target.style.boxShadow = '0 8px 24px rgba(102, 126, 234, 0.4)';\n                }\n              }}\n              onMouseLeave={(e) => {\n                if (!loading) {\n                  e.target.style.transform = 'translateY(0)';\n                  e.target.style.boxShadow = '0 4px 16px rgba(102, 126, 234, 0.3)';\n                }\n              }}\n            >\n              {loading ? (\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: '12px' }}>\n                  <div style={{\n                    width: '20px',\n                    height: '20px',\n                    border: '2px solid rgba(255,255,255,0.3)',\n                    borderTop: '2px solid #fff',\n                    borderRadius: '50%',\n                    animation: 'spin 1s linear infinite'\n                  }}></div>\n                  Generating Response...\n                </div>\n              ) : (\n                '💬 Generate Relationship Response'\n              )}\n            </button>\n          </form>\n\n          {/* Error Message */}\n          {error && (\n            <div style={{ \n              marginTop: '24px',\n              background: 'linear-gradient(135deg, #fed7d7 0%, #feb2b2 100%)',\n              border: '1px solid #fc8181',\n              borderRadius: '12px', \n              padding: '16px', \n              color: '#c53030',\n              fontWeight: '600', \n              textAlign: 'center',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              gap: '8px'\n            }}>\n              <span style={{ fontSize: '20px' }}>⚠️</span>\n              {error}\n            </div>\n          )}\n\n          {/* Conversational Chat Response Section */}\n          {(response) && (\n            <div style={{ \n              marginTop: '32px',\n              background: 'linear-gradient(135deg, #f8f9ff 0%, #e8f4ff 100%)',\n              borderRadius: '16px',\n              padding: '28px',\n              border: '1px solid #c6f6d5',\n              animation: 'slideInUp 0.5s ease-out'\n            }}>\n              {/* Chat Conversation */}\n              <div style={{ display: 'flex', flexDirection: 'column', gap: '24px' }}>\n                {/* Customer Review Bubble */}\n                <div style={{ display: 'flex', alignItems: 'flex-start', gap: '16px' }}>\n                  <div style={{\n                    background: 'linear-gradient(135deg, #fbbf24 0%, #f59e42 100%)',\n                    borderRadius: '50%',\n                    width: '40px',\n                    height: '40px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    fontSize: '18px',\n                    color: '#fff',\n                    border: '3px solid #fff',\n                    boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)'\n                  }}>\n                    🧑\n                  </div>\n                  <div style={{ maxWidth: '80%' }}>\n                    <div style={{\n                      background: '#fff',\n                      borderRadius: '20px',\n                      padding: '16px',\n                      border: '1px solid #e2e8f0',\n                      marginBottom: '4px',\n                      fontSize: '15px',\n                      color: '#2d3748',\n                      lineHeight: '1.7',\n                      fontFamily: 'inherit',\n                      whiteSpace: 'pre-line'\n                    }}>\n                      {review}\n                    </div>\n                    <div style={{ fontSize: '11px', color: '#94a3b8', fontStyle: 'italic', textAlign: 'left' }}>\n                      Customer • {new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                    </div>\n                  </div>\n                </div>\n                {/* Staff Reply Bubbles (single message) */}\n                <div style={{ display: 'flex', alignItems: 'flex-start', gap: '16px', flexDirection: 'row-reverse' }}>\n                  <div style={{\n                    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                    borderRadius: '50%',\n                    width: '40px',\n                    height: '40px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    fontSize: '18px',\n                    color: '#fff',\n                    border: '3px solid #fff',\n                    boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)'\n                  }}>\n                    👨‍💼\n                  </div>\n                  <div style={{ maxWidth: '80%' }}>\n                    <div style={{\n                      background: '#e0e7ff',\n                      borderRadius: '20px',\n                      padding: '16px',\n                      border: '1px solid #c7d2fe',\n                      marginBottom: '4px',\n                      fontSize: '15px',\n                      color: '#2d3748',\n                      lineHeight: '1.7',\n                      fontFamily: 'inherit',\n                      whiteSpace: 'pre-line',\n                      textAlign: 'left'\n                    }}>\n                      {response}\n                    </div>\n                    <div style={{ fontSize: '11px', color: '#94a3b8', fontStyle: 'italic', textAlign: 'right' }}>\n                      {staffName || 'Relationship Agent'} • {new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* Chat Status */}\n              <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                gap: '8px',\n                marginBottom: '20px',\n                padding: '12px 16px',\n                background: 'rgba(79, 140, 255, 0.1)',\n                borderRadius: '12px',\n                border: '1px solid rgba(79, 140, 255, 0.2)'\n              }}>\n                <div style={{\n                  width: '8px',\n                  height: '8px',\n                  background: '#10b981',\n                  borderRadius: '50%',\n                  animation: 'pulse 2s infinite'\n                }}></div>\n                <span style={{\n                  fontSize: '13px',\n                  color: '#4f8cff',\n                  fontWeight: '500'\n                }}>\n                  {staffName ? `${staffName} is online and ready to help` : 'Customer Relationship Agent is online'}\n                </span>\n              </div>\n\n              <div style={{\n                display: 'flex',\n                gap: '12px',\n                justifyContent: 'center'\n              }}>\n                <button \n                  onClick={() => navigator.clipboard.writeText(response)}\n                  style={{\n                    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                    color: '#fff',\n                    border: 'none',\n                    borderRadius: '8px',\n                    padding: '12px 24px',\n                    fontWeight: '600',\n                    cursor: 'pointer',\n                    transition: 'all 0.3s ease',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '8px'\n                  }}\n                  onMouseEnter={(e) => {\n                    e.target.style.transform = 'translateY(-1px)';\n                    e.target.style.boxShadow = '0 4px 12px rgba(102, 126, 234, 0.3)';\n                  }}\n                  onMouseLeave={(e) => {\n                    e.target.style.transform = 'translateY(0)';\n                    e.target.style.boxShadow = 'none';\n                  }}\n                >\n                  📋 Copy Response\n                </button>\n                <button \n                  onClick={() => {\n                    setReview('');\n                    setResponse('');\n                    setError('');\n                  }}\n                  style={{\n                    background: '#e2e8f0',\n                    color: '#4a5568',\n                    border: 'none',\n                    borderRadius: '8px',\n                    padding: '12px 24px',\n                    fontWeight: '600',\n                    cursor: 'pointer',\n                    transition: 'all 0.3s ease'\n                  }}\n                  onMouseEnter={(e) => {\n                    e.target.style.background = '#cbd5e0';\n                    e.target.style.transform = 'translateY(-1px)';\n                  }}\n                  onMouseLeave={(e) => {\n                    e.target.style.background = '#e2e8f0';\n                    e.target.style.transform = 'translateY(0)';\n                  }}\n                >\n                  🔄 New Response\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <style jsx>{`\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n        \n        @keyframes slideInUp {\n          from {\n            opacity: 0;\n            transform: translateY(20px);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n        \n        @keyframes float {\n          0%, 100% { transform: translateY(0px); }\n          50% { transform: translateY(-20px); }\n        }\n        \n        @keyframes pulse {\n          0%, 100% { opacity: 1; }\n          50% { opacity: 0.5; }\n        }\n      `}</style>\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\n\nconst ModelsInfo = () => {\n  const [models, setModels] = useState([]);\n  const [useCases, setUseCases] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchModelsInfo();\n  }, []);\n\n  const fetchModelsInfo = async () => {\n    try {\n      setLoading(true);\n      const res = await fetch('/api/models');\n      const data = await res.json();\n      if (data.success) {\n        setModels(data.models);\n        setUseCases(data.useCases);\n      } else {\n        setError('Failed to fetch model information');\n      }\n    } catch (error) {\n      setError('Network error while fetching model information');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div style={{\n        minHeight: '100vh',\n        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n        padding: '20px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }}>\n        <div style={{\n          background: 'rgba(255, 255, 255, 0.95)',\n          borderRadius: '16px',\n          padding: '40px',\n          textAlign: 'center',\n          boxShadow: '0 20px 60px rgba(0, 0, 0, 0.15)'\n        }}>\n          <div style={{\n            width: '40px',\n            height: '40px',\n            border: '4px solid #667eea',\n            borderTop: '4px solid transparent',\n            borderRadius: '50%',\n            animation: 'spin 1s linear infinite',\n            margin: '0 auto 20px'\n          }}></div>\n          <p style={{ margin: 0, color: '#4a5568' }}>Loading model information...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div style={{\n        minHeight: '100vh',\n        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n        padding: '20px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }}>\n        <div style={{\n          background: 'rgba(255, 255, 255, 0.95)',\n          borderRadius: '16px',\n          padding: '40px',\n          textAlign: 'center',\n          boxShadow: '0 20px 60px rgba(0, 0, 0, 0.15)'\n        }}>\n          <span style={{ fontSize: '48px', marginBottom: '16px', display: 'block' }}>⚠️</span>\n          <h2 style={{ margin: '0 0 12px 0', color: '#e53e3e' }}>Error</h2>\n          <p style={{ margin: 0, color: '#4a5568' }}>{error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n      padding: '20px',\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif'\n    }}>\n      <div style={{\n        maxWidth: 1200,\n        margin: '0 auto',\n        background: 'rgba(255, 255, 255, 0.95)',\n        borderRadius: '24px',\n        boxShadow: '0 20px 60px rgba(0, 0, 0, 0.15)',\n        overflow: 'hidden',\n        backdropFilter: 'blur(10px)'\n      }}>\n        {/* Header */}\n        <div style={{\n          background: 'linear-gradient(135deg, #4f8cff 0%, #38e8ff 100%)',\n          padding: '40px 32px',\n          textAlign: 'center'\n        }}>\n          <span style={{ \n            fontSize: '64px', \n            marginBottom: '16px', \n            display: 'block',\n            filter: 'drop-shadow(0 4px 8px rgba(0,0,0,0.1))'\n          }}>🤖</span>\n          <h1 style={{ \n            margin: '0 0 12px 0', \n            fontWeight: '800', \n            fontSize: '36px', \n            color: '#fff',\n            textShadow: '0 2px 4px rgba(0,0,0,0.1)'\n          }}>\n            AI Models Configuration\n          </h1>\n          <p style={{ \n            margin: '0', \n            fontSize: '18px', \n            color: '#fff',\n            opacity: '0.95'\n          }}>\n            Specialized LLM models for different use cases\n          </p>\n        </div>\n\n        {/* Content */}\n        <div style={{ padding: '40px 32px' }}>\n          {/* Use Cases Overview */}\n          <div style={{ marginBottom: '40px' }}>\n            <h2 style={{ \n              margin: '0 0 20px 0', \n              color: '#2d3748', \n              fontSize: '24px',\n              fontWeight: '700'\n            }}>\n              Use Cases\n            </h2>\n            <div style={{\n              display: 'grid',\n              gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\n              gap: '20px'\n            }}>\n              {Object.entries(useCases).map(([useCase, description]) => (\n                <div key={useCase} style={{\n                  background: 'linear-gradient(135deg, #f7fafc 0%, #edf2f7 100%)',\n                  borderRadius: '16px',\n                  padding: '24px',\n                  border: '1px solid #e2e8f0'\n                }}>\n                  <h3 style={{\n                    margin: '0 0 12px 0',\n                    color: '#2d3748',\n                    fontSize: '18px',\n                    fontWeight: '600',\n                    textTransform: 'capitalize'\n                  }}>\n                    {useCase.replace('_', ' ')}\n                  </h3>\n                  <p style={{\n                    margin: 0,\n                    color: '#4a5568',\n                    lineHeight: '1.6'\n                  }}>\n                    {description}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Models Details */}\n          <div>\n            <h2 style={{ \n              margin: '0 0 20px 0', \n              color: '#2d3748', \n              fontSize: '24px',\n              fontWeight: '700'\n            }}>\n              Model Configurations\n            </h2>\n            <div style={{\n              display: 'grid',\n              gridTemplateColumns: 'repeat(auto-fit, minmax(350px, 1fr))',\n              gap: '24px'\n            }}>\n              {models.map((model) => (\n                <div key={model.key} style={{\n                  background: 'linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%)',\n                  borderRadius: '16px',\n                  padding: '24px',\n                  border: '1px solid #bae6fd',\n                  transition: 'transform 0.2s ease, box-shadow 0.2s ease'\n                }}>\n                  <div style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '12px',\n                    marginBottom: '16px'\n                  }}>\n                    <span style={{ fontSize: '24px' }}>🤖</span>\n                    <div>\n                      <h3 style={{\n                        margin: '0 0 4px 0',\n                        color: '#0c4a6e',\n                        fontSize: '18px',\n                        fontWeight: '700'\n                      }}>\n                        {model.name}\n                      </h3>\n                      <p style={{\n                        margin: 0,\n                        color: '#0369a1',\n                        fontSize: '14px',\n                        fontWeight: '500',\n                        textTransform: 'capitalize'\n                      }}>\n                        {model.useCase.replace('_', ' ')}\n                      </p>\n                    </div>\n                  </div>\n\n                  <p style={{\n                    margin: '0 0 16px 0',\n                    color: '#0369a1',\n                    lineHeight: '1.6',\n                    fontSize: '14px'\n                  }}>\n                    {model.description}\n                  </p>\n\n                  <div style={{ marginBottom: '16px' }}>\n                    <h4 style={{\n                      margin: '0 0 8px 0',\n                      color: '#0c4a6e',\n                      fontSize: '14px',\n                      fontWeight: '600'\n                    }}>\n                      Strengths\n                    </h4>\n                    <div style={{\n                      display: 'flex',\n                      flexWrap: 'wrap',\n                      gap: '6px'\n                    }}>\n                      {model.strengths.map((strength, index) => (\n                        <span key={index} style={{\n                          background: '#0ea5e9',\n                          color: '#fff',\n                          padding: '4px 8px',\n                          borderRadius: '12px',\n                          fontSize: '11px',\n                          fontWeight: '500'\n                        }}>\n                          {strength}\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div style={{\n                    display: 'grid',\n                    gridTemplateColumns: '1fr 1fr',\n                    gap: '12px'\n                  }}>\n                    <div>\n                      <span style={{\n                        color: '#0c4a6e',\n                        fontSize: '12px',\n                        fontWeight: '600',\n                        textTransform: 'uppercase',\n                        letterSpacing: '0.5px'\n                      }}>\n                        Temperature\n                      </span>\n                      <p style={{\n                        margin: '4px 0 0 0',\n                        color: '#0369a1',\n                        fontSize: '16px',\n                        fontWeight: '600'\n                      }}>\n                        {model.temperature}\n                      </p>\n                    </div>\n                    <div>\n                      <span style={{\n                        color: '#0c4a6e',\n                        fontSize: '12px',\n                        fontWeight: '600',\n                        textTransform: 'uppercase',\n                        letterSpacing: '0.5px'\n                      }}>\n                        Max Tokens\n                      </span>\n                      <p style={{\n                        margin: '4px 0 0 0',\n                        color: '#0369a1',\n                        fontSize: '16px',\n                        fontWeight: '600'\n                      }}>\n                        {model.maxTokens.toLocaleString()}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <style jsx>{`\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default ModelsInfo; ","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BlogIndex = () => {\n  const [activeTab, setActiveTab] = useState('published');\n  const [blogHistory, setBlogHistory] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterType, setFilterType] = useState('all');\n\n  useEffect(() => {\n    loadBlogHistory();\n  }, []);\n\n  const loadBlogHistory = () => {\n    try {\n      const history = JSON.parse(localStorage.getItem('blogHistory') || '[]');\n      setBlogHistory(history);\n    } catch (error) {\n      console.error('Error loading blog history:', error);\n      setBlogHistory([]);\n    }\n  };\n\n  const deleteBlog = (id) => {\n    const updatedHistory = blogHistory.filter(blog => blog.id !== id);\n    localStorage.setItem('blogHistory', JSON.stringify(updatedHistory));\n    setBlogHistory(updatedHistory);\n  };\n\n  const copyBlog = (blogPost) => {\n    navigator.clipboard.writeText(blogPost);\n    alert('Blog post copied to clipboard!');\n  };\n\n  const filteredBlogs = blogHistory.filter(blog => {\n    const matchesSearch = blog.topic.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         blog.restaurantName.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesFilter = filterType === 'all' || blog.restaurantType === filterType;\n    return matchesSearch && matchesFilter;\n  });\n\n  const formatDate = (timestamp) => {\n    return new Date(timestamp).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const getWordCount = (content) => {\n    return content.split(/\\s+/).length;\n  };\n\n  const getRestaurantTypeIcon = (type) => {\n    const icons = {\n      restaurant: '🍽️',\n      cafe: '☕',\n      pizzeria: '🍕',\n      bakery: '🥐',\n      bar: '🍺',\n      'food-truck': '🚚',\n      'fine-dining': '🍷',\n      'fast-casual': '🥪'\n    };\n    return icons[type] || '🍽️';\n  };\n\n  const getToneIcon = (tone) => {\n    const icons = {\n      professional: '👔',\n      casual: '😊',\n      enthusiastic: '🎉',\n      elegant: '✨',\n      rustic: '🏡',\n      modern: '🚀'\n    };\n    return icons[tone] || '📝';\n  };\n\n  const blogPosts = [\n    {\n      slug: 'overview',\n      title: 'AI-Powered Review Generation: The Complete Guide',\n      excerpt: 'Discover how our AI-powered platform revolutionizes review creation with voice analysis, sentiment detection, and professional writing assistance.',\n      category: 'Overview',\n      readTime: '8 min read',\n      date: 'July 2024',\n      image: '🤖',\n      color: '#667eea'\n    },\n    {\n      slug: 'restaurant-reviews',\n      title: 'Transform Your Restaurant Reviews with AI',\n      excerpt: 'Learn how AI can help you create compelling, authentic restaurant reviews that capture the essence of dining experiences.',\n      category: 'Restaurant',\n      readTime: '6 min read',\n      date: 'July 2024',\n      image: '🍽️',\n      color: '#ff6b6b'\n    },\n    {\n      slug: 'hotel-reviews',\n      title: 'AI Hotel Review Generation: A Traveler\\'s Best Friend',\n      excerpt: 'Create detailed hotel reviews that help fellow travelers make informed decisions with AI-powered insights and analysis.',\n      category: 'Hotel',\n      readTime: '7 min read',\n      date: 'July 2024',\n      image: '🏨',\n      color: '#20c997'\n    },\n    {\n      slug: 'product-reviews',\n      title: 'Smart Product Review Creation with AI',\n      excerpt: 'Generate comprehensive product reviews that highlight features, benefits, and real-world usage experiences.',\n      category: 'Product',\n      readTime: '5 min read',\n      date: 'July 2024',\n      image: '📱',\n      color: '#f7b731'\n    },\n    {\n      slug: 'customer-service-ai',\n      title: 'AI Customer Service Responses: Building Better Relationships',\n      excerpt: 'Explore how AI-powered customer service responses can transform negative reviews into positive customer experiences.',\n      category: 'Customer Service',\n      readTime: '9 min read',\n      date: 'July 2024',\n      image: '💬',\n      color: '#4b7bec'\n    },\n    {\n      slug: 'your-custom-post',\n      title: 'Your Custom Blog Post Title',\n      excerpt: 'Your custom blog post excerpt goes here. This should be a brief description of what the post covers.',\n      category: 'Custom',\n      readTime: '5 min read',\n      date: 'July 2024',\n      image: '📝',\n      color: '#a55eea'\n    }\n  ];\n\n  return (\n    <div style={{\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n      padding: '20px',\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif'\n    }}>\n      <div style={{\n        maxWidth: 1200,\n        margin: '0 auto',\n        background: 'rgba(255, 255, 255, 0.95)',\n        borderRadius: '24px',\n        boxShadow: '0 20px 60px rgba(0, 0, 0, 0.15)',\n        overflow: 'hidden',\n        backdropFilter: 'blur(10px)'\n      }}>\n        {/* Header */}\n        <div style={{\n          background: 'linear-gradient(135deg, #4f8cff 0%, #38e8ff 100%)',\n          padding: '40px 32px',\n          textAlign: 'center'\n        }}>\n          <span style={{ \n            fontSize: '64px', \n            marginBottom: '16px', \n            display: 'block',\n            filter: 'drop-shadow(0 4px 8px rgba(0,0,0,0.1))'\n          }}>📝</span>\n          <h1 style={{ \n            margin: '0 0 12px 0', \n            fontWeight: '800', \n            fontSize: '36px', \n            color: '#fff',\n            textShadow: '0 2px 4px rgba(0,0,0,0.1)'\n          }}>\n            ReviewGen Blog\n          </h1>\n          <p style={{ \n            margin: '0', \n            fontSize: '18px', \n            color: '#fff',\n            opacity: '0.95'\n          }}>\n            Insights, tips, and guides for AI-powered review generation\n          </p>\n        </div>\n\n        {/* Content */}\n        <div style={{ padding: '40px 32px' }}>\n          {/* Tab Navigation */}\n          <div style={{\n            display: 'flex',\n            gap: '8px',\n            marginBottom: '32px',\n            background: '#f8f9fa',\n            borderRadius: '12px',\n            padding: '4px',\n            border: '1px solid #e9ecef'\n          }}>\n            <button\n              onClick={() => setActiveTab('published')}\n              style={{\n                flex: 1,\n                padding: '12px 24px',\n                borderRadius: '8px',\n                border: 'none',\n                background: activeTab === 'published' ? '#667eea' : 'transparent',\n                color: activeTab === 'published' ? '#fff' : '#4a5568',\n                fontWeight: '600',\n                cursor: 'pointer',\n                transition: 'all 0.3s ease'\n              }}\n            >\n              📚 Published Articles ({blogPosts.length})\n            </button>\n            <button\n              onClick={() => setActiveTab('history')}\n              style={{\n                flex: 1,\n                padding: '12px 24px',\n                borderRadius: '8px',\n                border: 'none',\n                background: activeTab === 'history' ? '#667eea' : 'transparent',\n                color: activeTab === 'history' ? '#fff' : '#4a5568',\n                fontWeight: '600',\n                cursor: 'pointer',\n                transition: 'all 0.3s ease'\n              }}\n            >\n              ✍️ Your Blog Posts ({blogHistory.length})\n            </button>\n          </div>\n\n          {activeTab === 'published' ? (\n            /* Published Blog Posts */\n            <div>\n              <h2 style={{ \n                margin: '0 0 20px 0', \n                color: '#2d3748', \n                fontSize: '24px',\n                fontWeight: '700'\n              }}>\n                Latest Articles\n              </h2>\n              <div style={{\n                display: 'grid',\n                gridTemplateColumns: 'repeat(auto-fit, minmax(350px, 1fr))',\n                gap: '24px',\n                marginBottom: '40px'\n              }}>\n                {blogPosts.map((post) => (\n                  <Link \n                    key={post.slug}\n                    to={`/blog/${post.slug}`}\n                    style={{\n                      textDecoration: 'none',\n                      color: 'inherit',\n                      display: 'block'\n                    }}\n                  >\n                    <div style={{\n                      background: 'linear-gradient(135deg, #f7fafc 0%, #edf2f7 100%)',\n                      borderRadius: '16px',\n                      padding: '24px',\n                      border: '1px solid #e2e8f0',\n                      transition: 'all 0.3s ease',\n                      cursor: 'pointer',\n                      height: '100%',\n                      display: 'flex',\n                      flexDirection: 'column'\n                    }}\n                    onMouseEnter={(e) => {\n                      e.target.style.transform = 'translateY(-4px)';\n                      e.target.style.boxShadow = '0 12px 32px rgba(0, 0, 0, 0.15)';\n                    }}\n                    onMouseLeave={(e) => {\n                      e.target.style.transform = 'translateY(0)';\n                      e.target.style.boxShadow = 'none';\n                    }}\n                    >\n                      <div style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: '12px',\n                        marginBottom: '16px'\n                      }}>\n                        <div style={{\n                          background: `linear-gradient(135deg, ${post.color} 0%, ${post.color}dd 100%)`,\n                          borderRadius: '12px',\n                          width: '48px',\n                          height: '48px',\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          fontSize: '24px'\n                        }}>\n                          {post.image}\n                        </div>\n                        <div>\n                          <span style={{\n                            background: post.color,\n                            color: '#fff',\n                            padding: '4px 8px',\n                            borderRadius: '12px',\n                            fontSize: '11px',\n                            fontWeight: '600',\n                            textTransform: 'uppercase',\n                            letterSpacing: '0.5px'\n                          }}>\n                            {post.category}\n                          </span>\n                        </div>\n                      </div>\n\n                      <h3 style={{\n                        margin: '0 0 12px 0',\n                        color: '#2d3748',\n                        fontSize: '18px',\n                        fontWeight: '700',\n                        lineHeight: '1.4'\n                      }}>\n                        {post.title}\n                      </h3>\n\n                      <p style={{\n                        margin: '0 0 16px 0',\n                        color: '#4a5568',\n                        lineHeight: '1.6',\n                        fontSize: '14px',\n                        flex: 1\n                      }}>\n                        {post.excerpt}\n                      </p>\n\n                      <div style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center',\n                        marginTop: 'auto'\n                      }}>\n                        <span style={{\n                          color: '#718096',\n                          fontSize: '12px',\n                          fontWeight: '500'\n                        }}>\n                          {post.date}\n                        </span>\n                        <span style={{\n                          color: '#4a5568',\n                          fontSize: '12px',\n                          fontWeight: '600'\n                        }}>\n                          {post.readTime}\n                        </span>\n                      </div>\n                    </div>\n                  </Link>\n                ))}\n              </div>\n            </div>\n          ) : (\n            /* Blog History */\n            <div>\n              {/* Stats */}\n              <div style={{\n                display: 'grid',\n                gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n                gap: '20px',\n                marginBottom: '32px'\n              }}>\n                <div style={{\n                  background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                  borderRadius: '16px',\n                  padding: '24px',\n                  textAlign: 'center',\n                  color: '#fff'\n                }}>\n                  <div style={{ fontSize: '32px', marginBottom: '8px' }}>📝</div>\n                  <div style={{ fontSize: '24px', fontWeight: '700' }}>{blogHistory.length}</div>\n                  <div style={{ fontSize: '14px', opacity: '0.9' }}>Total Posts</div>\n                </div>\n                <div style={{\n                  background: 'linear-gradient(135deg, #20c997 0%, #14a085 100%)',\n                  borderRadius: '16px',\n                  padding: '24px',\n                  textAlign: 'center',\n                  color: '#fff'\n                }}>\n                  <div style={{ fontSize: '32px', marginBottom: '8px' }}>📊</div>\n                  <div style={{ fontSize: '24px', fontWeight: '700' }}>\n                    {blogHistory.reduce((total, blog) => total + getWordCount(blog.blogPost), 0).toLocaleString()}\n                  </div>\n                  <div style={{ fontSize: '14px', opacity: '0.9' }}>Total Words</div>\n                </div>\n                <div style={{\n                  background: 'linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%)',\n                  borderRadius: '16px',\n                  padding: '24px',\n                  textAlign: 'center',\n                  color: '#fff'\n                }}>\n                  <div style={{ fontSize: '32px', marginBottom: '8px' }}>🏪</div>\n                  <div style={{ fontSize: '24px', fontWeight: '700' }}>\n                    {new Set(blogHistory.map(blog => blog.restaurantName)).size}\n                  </div>\n                  <div style={{ fontSize: '14px', opacity: '0.9' }}>Restaurants</div>\n                </div>\n              </div>\n\n              {/* Filters */}\n              <div style={{\n                display: 'flex',\n                gap: '16px',\n                marginBottom: '24px',\n                flexWrap: 'wrap',\n                alignItems: 'center'\n              }}>\n                <div style={{ flex: 1, minWidth: '250px' }}>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search by topic or restaurant name...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    style={{\n                      width: '100%',\n                      padding: '12px 16px',\n                      border: '2px solid #e1e5e9',\n                      borderRadius: '8px',\n                      fontSize: '16px'\n                    }}\n                  />\n                </div>\n                <select\n                  value={filterType}\n                  onChange={(e) => setFilterType(e.target.value)}\n                  style={{\n                    padding: '12px 16px',\n                    border: '2px solid #e1e5e9',\n                    borderRadius: '8px',\n                    fontSize: '16px',\n                    minWidth: '150px'\n                  }}\n                >\n                  <option value=\"all\">All Types</option>\n                  <option value=\"restaurant\">Restaurant</option>\n                  <option value=\"cafe\">Café</option>\n                  <option value=\"pizzeria\">Pizzeria</option>\n                  <option value=\"bakery\">Bakery</option>\n                  <option value=\"bar\">Bar/Pub</option>\n                  <option value=\"food-truck\">Food Truck</option>\n                  <option value=\"fine-dining\">Fine Dining</option>\n                  <option value=\"fast-casual\">Fast Casual</option>\n                </select>\n                <button\n                  onClick={loadBlogHistory}\n                  style={{\n                    background: '#667eea',\n                    color: '#fff',\n                    border: 'none',\n                    borderRadius: '8px',\n                    padding: '12px 16px',\n                    fontWeight: '600',\n                    cursor: 'pointer'\n                  }}\n                >\n                  🔄 Refresh\n                </button>\n              </div>\n\n              {/* Blog Posts */}\n              {filteredBlogs.length === 0 ? (\n                <div style={{\n                  textAlign: 'center',\n                  padding: '60px 20px',\n                  color: '#6c757d'\n                }}>\n                  <div style={{ fontSize: '64px', marginBottom: '16px' }}>📝</div>\n                  <h3 style={{ margin: '0 0 12px 0', fontSize: '24px' }}>\n                    {blogHistory.length === 0 ? 'No blog posts yet' : 'No posts match your search'}\n                  </h3>\n                  <p style={{ margin: '0 0 24px 0', fontSize: '16px' }}>\n                    {blogHistory.length === 0 \n                      ? 'Create your first blog post to get started!' \n                      : 'Try adjusting your search or filter criteria.'\n                    }\n                  </p>\n                  {blogHistory.length === 0 && (\n                    <Link\n                      to=\"/blog-creator\"\n                      style={{\n                        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                        color: '#fff',\n                        padding: '12px 24px',\n                        borderRadius: '8px',\n                        textDecoration: 'none',\n                        fontWeight: '600',\n                        display: 'inline-block'\n                      }}\n                    >\n                      ✍️ Create Your First Blog Post\n                    </Link>\n                  )}\n                </div>\n              ) : (\n                <div style={{\n                  display: 'grid',\n                  gridTemplateColumns: 'repeat(auto-fit, minmax(350px, 1fr))',\n                  gap: '24px'\n                }}>\n                  {filteredBlogs.map((blog) => (\n                    <div key={blog.id} style={{\n                      background: '#f8f9fa',\n                      borderRadius: '16px',\n                      padding: '24px',\n                      border: '1px solid #e9ecef',\n                      transition: 'transform 0.2s ease, box-shadow 0.2s ease'\n                    }}>\n                      <div style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'flex-start',\n                        marginBottom: '16px'\n                      }}>\n                        <div>\n                          <h3 style={{\n                            margin: '0 0 8px 0',\n                            color: '#2d3748',\n                            fontSize: '18px',\n                            fontWeight: '700',\n                            lineHeight: '1.4'\n                          }}>\n                            {blog.topic}\n                          </h3>\n                          <p style={{\n                            margin: '0',\n                            color: '#4a5568',\n                            fontSize: '14px',\n                            fontWeight: '600'\n                          }}>\n                            {blog.restaurantName}\n                          </p>\n                        </div>\n                        <div style={{\n                          display: 'flex',\n                          gap: '8px'\n                        }}>\n                          <button\n                            onClick={() => copyBlog(blog.blogPost)}\n                            style={{\n                              background: '#28a745',\n                              color: '#fff',\n                              border: 'none',\n                              borderRadius: '6px',\n                              padding: '6px 10px',\n                              fontSize: '12px',\n                              cursor: 'pointer'\n                            }}\n                            title=\"Copy blog post\"\n                          >\n                            📋\n                          </button>\n                          <button\n                            onClick={() => deleteBlog(blog.id)}\n                            style={{\n                              background: '#dc3545',\n                              color: '#fff',\n                              border: 'none',\n                              borderRadius: '6px',\n                              padding: '6px 10px',\n                              fontSize: '12px',\n                              cursor: 'pointer'\n                            }}\n                            title=\"Delete blog post\"\n                          >\n                            🗑️\n                          </button>\n                        </div>\n                      </div>\n\n                      <div style={{\n                        background: '#fff',\n                        borderRadius: '8px',\n                        padding: '16px',\n                        marginBottom: '16px',\n                        border: '1px solid #e9ecef',\n                        maxHeight: '200px',\n                        overflow: 'hidden',\n                        position: 'relative'\n                      }}>\n                        <div style={{\n                          color: '#2d3748',\n                          fontSize: '14px',\n                          lineHeight: '1.6',\n                          whiteSpace: 'pre-wrap'\n                        }}>\n                          {blog.blogPost.substring(0, 300)}\n                          {blog.blogPost.length > 300 && '...'}\n                        </div>\n                        {blog.blogPost.length > 300 && (\n                          <div style={{\n                            position: 'absolute',\n                            bottom: 0,\n                            left: 0,\n                            right: 0,\n                            height: '40px',\n                            background: 'linear-gradient(transparent, #fff)',\n                            pointerEvents: 'none'\n                          }}></div>\n                        )}\n                      </div>\n\n                      <div style={{\n                        display: 'flex',\n                        flexWrap: 'wrap',\n                        gap: '8px',\n                        marginBottom: '12px'\n                      }}>\n                        <span style={{\n                          background: '#e9ecef',\n                          color: '#495057',\n                          padding: '4px 8px',\n                          borderRadius: '12px',\n                          fontSize: '12px',\n                          fontWeight: '500'\n                        }}>\n                          {getRestaurantTypeIcon(blog.restaurantType)} {blog.restaurantType}\n                        </span>\n                        <span style={{\n                          background: '#e9ecef',\n                          color: '#495057',\n                          padding: '4px 8px',\n                          borderRadius: '12px',\n                          fontSize: '12px',\n                          fontWeight: '500'\n                        }}>\n                          {getToneIcon(blog.tone)} {blog.tone}\n                        </span>\n                        <span style={{\n                          background: '#e9ecef',\n                          color: '#495057',\n                          padding: '4px 8px',\n                          borderRadius: '12px',\n                          fontSize: '12px',\n                          fontWeight: '500'\n                        }}>\n                          📊 {getWordCount(blog.blogPost)} words\n                        </span>\n                      </div>\n\n                      <div style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center',\n                        fontSize: '12px',\n                        color: '#6c757d'\n                      }}>\n                        <span>{formatDate(blog.timestamp)}</span>\n                        <Link\n                          to=\"/blog-creator\"\n                          style={{\n                            color: '#667eea',\n                            textDecoration: 'none',\n                            fontWeight: '600',\n                            fontSize: '12px'\n                          }}\n                        >\n                          ✍️ Create Similar\n                        </Link>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Newsletter Signup */}\n          <div style={{\n            background: 'linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%)',\n            borderRadius: '16px',\n            padding: '32px',\n            border: '1px solid #bae6fd',\n            textAlign: 'center',\n            marginTop: '40px'\n          }}>\n            <h3 style={{\n              margin: '0 0 12px 0',\n              color: '#0c4a6e',\n              fontSize: '20px',\n              fontWeight: '700'\n            }}>\n              Stay Updated\n            </h3>\n            <p style={{\n              margin: '0 0 20px 0',\n              color: '#0369a1',\n              lineHeight: '1.6'\n            }}>\n              Get the latest tips and insights on AI-powered review generation\n            </p>\n            <div style={{\n              display: 'flex',\n              gap: '12px',\n              justifyContent: 'center',\n              flexWrap: 'wrap'\n            }}>\n              <Link \n                to=\"/blog-creator\"\n                style={{\n                  background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                  color: '#fff',\n                  padding: '12px 24px',\n                  borderRadius: '8px',\n                  textDecoration: 'none',\n                  fontWeight: '600',\n                  transition: 'all 0.3s ease'\n                }}\n                onMouseEnter={(e) => {\n                  e.target.style.transform = 'translateY(-2px)';\n                  e.target.style.boxShadow = '0 8px 24px rgba(102, 126, 234, 0.3)';\n                }}\n                onMouseLeave={(e) => {\n                  e.target.style.transform = 'translateY(0)';\n                  e.target.style.boxShadow = 'none';\n                }}\n              >\n                Create Your Blog Post\n              </Link>\n              <Link \n                to=\"/generate\"\n                style={{\n                  background: '#e2e8f0',\n                  color: '#4a5568',\n                  padding: '12px 24px',\n                  borderRadius: '8px',\n                  textDecoration: 'none',\n                  fontWeight: '600',\n                  transition: 'all 0.3s ease'\n                }}\n                onMouseEnter={(e) => {\n                  e.target.style.background = '#cbd5e0';\n                  e.target.style.transform = 'translateY(-2px)';\n                }}\n                onMouseLeave={(e) => {\n                  e.target.style.background = '#e2e8f0';\n                  e.target.style.transform = 'translateY(0)';\n                }}\n              >\n                Try ReviewGen Now\n              </Link>\n              <Link \n                to=\"/models\"\n                style={{\n                  background: '#e2e8f0',\n                  color: '#4a5568',\n                  padding: '12px 24px',\n                  borderRadius: '8px',\n                  textDecoration: 'none',\n                  fontWeight: '600',\n                  transition: 'all 0.3s ease'\n                }}\n                onMouseEnter={(e) => {\n                  e.target.style.background = '#cbd5e0';\n                  e.target.style.transform = 'translateY(-2px)';\n                }}\n                onMouseLeave={(e) => {\n                  e.target.style.background = '#e2e8f0';\n                  e.target.style.transform = 'translateY(0)';\n                }}\n              >\n                Explore AI Models\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BlogIndex; ","import React from 'react';\nimport { useParams, Link } from 'react-router-dom';\n\nconst blogPosts = {\n  overview: {\n    title: 'AI-Powered Review Generation: The Complete Guide',\n    date: 'July 2024',\n    category: 'Overview',\n    image: '🤖',\n    color: '#667eea',\n    content: (\n      <>\n        <p>\n          Welcome to the complete guide on AI-powered review generation! Discover how our platform leverages advanced AI models to help you create authentic, engaging, and professional reviews for restaurants, hotels, products, and more. With features like voice input, sentiment analysis, and location integration, ReviewGen makes it easy to share your experiences and insights.\n        </p>\n        <h3>Key Features</h3>\n        <ul>\n          <li>✨ <b>AI Review Generator</b>: Instantly create high-quality reviews with the help of Meta Llama 3.1 70B</li>\n          <li>🎤 <b>Voice Input</b>: Speak your thoughts and let AI transcribe and analyze your experience</li>\n          <li>📍 <b>Location Attachment</b>: Add context to your reviews with smart location suggestions</li>\n          <li>💬 <b>Customer Service Agent</b>: Turn negative reviews into positive conversations with chatty, empathetic AI responses</li>\n          <li>🤖 <b>Multi-Model Support</b>: Specialized LLMs for reviews, customer service, and analysis</li>\n        </ul>\n        <h3>Why Use ReviewGen?</h3>\n        <ul>\n          <li>Save time and effort writing reviews</li>\n          <li>Get professional, engaging content every time</li>\n          <li>Transform customer feedback into actionable insights</li>\n          <li>Stand out with authentic, human-like writing</li>\n        </ul>\n        <h3>Get Started</h3>\n        <p>\n          Try the <Link to=\"/generate\">AI Review Generator</Link> or <Link to=\"/voice\">Voice Review</Link> now!\n        </p>\n      </>\n    )\n  },\n  'restaurant-reviews': {\n    title: 'Transform Your Restaurant Reviews with AI',\n    date: 'July 2024',\n    category: 'Restaurant',\n    image: '🍽️',\n    color: '#ff6b6b',\n    content: (\n      <>\n        <p>\n          Writing restaurant reviews has never been easier! Our AI understands the nuances of dining experiences, from food quality to service and atmosphere. Just share your thoughts, and ReviewGen will craft a review that captures the essence of your meal.\n        </p>\n        <h3>How It Works</h3>\n        <ol>\n          <li>Choose \"Restaurant\" as your review type</li>\n          <li>Describe your experience (pros, cons, details)</li>\n          <li>Let AI generate a review with natural flow and authentic voice</li>\n        </ol>\n        <h3>Pro Tips</h3>\n        <ul>\n          <li>Mention specific dishes or drinks</li>\n          <li>Describe the ambiance and service</li>\n          <li>Attach your location for extra context</li>\n        </ul>\n        <p>\n          <b>Ready to try?</b> <Link to=\"/generate\">Generate a restaurant review now!</Link>\n        </p>\n      </>\n    )\n  },\n  'hotel-reviews': {\n    title: \"AI Hotel Review Generation: A Traveler's Best Friend\",\n    date: 'July 2024',\n    category: 'Hotel',\n    image: '🏨',\n    color: '#20c997',\n    content: (\n      <>\n        <p>\n          Whether you're a frequent traveler or a first-time guest, ReviewGen helps you write detailed hotel reviews that inform and inspire. Highlight amenities, comfort, cleanliness, and service with ease.\n        </p>\n        <h3>What to Include</h3>\n        <ul>\n          <li>Room quality and comfort</li>\n          <li>Staff friendliness and service</li>\n          <li>Location and nearby attractions</li>\n          <li>Value for money</li>\n        </ul>\n        <p>\n          <b>Share your stay:</b> <Link to=\"/generate\">Write a hotel review with AI</Link>\n        </p>\n      </>\n    )\n  },\n  'product-reviews': {\n    title: 'Smart Product Review Creation with AI',\n    date: 'July 2024',\n    category: 'Product',\n    image: '📱',\n    color: '#f7b731',\n    content: (\n      <>\n        <p>\n          Generate comprehensive product reviews that highlight features, benefits, and real-world usage. Whether it's tech, gadgets, or everyday items, ReviewGen makes your feedback shine.\n        </p>\n        <h3>Tips for Great Product Reviews</h3>\n        <ul>\n          <li>Describe what you liked and what could be improved</li>\n          <li>Mention specific features or specs</li>\n          <li>Share your overall verdict and recommendation</li>\n        </ul>\n        <p>\n          <b>Try it out:</b> <Link to=\"/generate\">Create a product review</Link>\n        </p>\n      </>\n    )\n  },\n  'customer-service-ai': {\n    title: 'AI Customer Service Responses: Building Better Relationships',\n    date: 'July 2024',\n    category: 'Customer Service',\n    image: '💬',\n    color: '#4b7bec',\n    content: (\n      <>\n        <p>\n          Turn negative reviews into positive customer experiences with our chatty, empathetic AI customer service agent. Respond to feedback in a way that feels personal, warm, and genuinely helpful.\n        </p>\n        <h3>How It Works</h3>\n        <ol>\n          <li>Paste a negative review into the Chatty Agent</li>\n          <li>AI generates a friendly, conversational response</li>\n          <li>Copy and use the response to engage your customer</li>\n        </ol>\n        <h3>Benefits</h3>\n        <ul>\n          <li>Defuse negative situations with empathy</li>\n          <li>Build trust and loyalty with customers</li>\n          <li>Save time with ready-to-use, human-like replies</li>\n        </ul>\n        <p>\n          <b>Try the Chatty Agent:</b> <Link to=\"/customer-service-response\">Go to Chatty Agent</Link>\n        </p>\n      </>\n    )\n  },\n  'your-custom-post': {\n    title: 'Your Custom Blog Post Title',\n    date: 'July 2024',\n    category: 'Custom',\n    image: '📝',\n    color: '#a55eea',\n    content: (\n      <>\n        <p>\n          This is where your custom blog post content will go. Please share your suggested content and I'll replace this placeholder with your actual content.\n        </p>\n        <h3>Your Content Here</h3>\n        <p>\n          Replace this section with your suggested content. You can include:\n        </p>\n        <ul>\n          <li>Your main points and ideas</li>\n          <li>Examples and case studies</li>\n          <li>Tips and best practices</li>\n          <li>Any other relevant information</li>\n        </ul>\n        <p>\n          <b>Ready to customize:</b> Just share your content and I'll update this post!\n        </p>\n      </>\n    )\n  }\n};\n\nconst BlogPost = () => {\n  const { slug } = useParams();\n  const post = blogPosts[slug];\n\n  if (!post) {\n    return (\n      <div style={{\n        minHeight: '100vh',\n        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: '#fff',\n        flexDirection: 'column'\n      }}>\n        <h1 style={{ fontSize: '3rem', marginBottom: '16px' }}>404</h1>\n        <p style={{ fontSize: '1.3rem', marginBottom: '24px' }}>Blog post not found.</p>\n        <Link to=\"/blog\" style={{\n          background: '#fff',\n          color: '#667eea',\n          padding: '12px 24px',\n          borderRadius: '8px',\n          textDecoration: 'none',\n          fontWeight: '600',\n        }}>← Back to Blog</Link>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{\n      minHeight: '100vh',\n      background: `linear-gradient(135deg, ${post.color} 0%, #764ba2 100%)`,\n      padding: '20px',\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif'\n    }}>\n      <div style={{\n        maxWidth: 800,\n        margin: '0 auto',\n        background: 'rgba(255, 255, 255, 0.97)',\n        borderRadius: '24px',\n        boxShadow: '0 20px 60px rgba(0, 0, 0, 0.12)',\n        overflow: 'hidden',\n        backdropFilter: 'blur(10px)',\n        padding: '40px 32px',\n        marginTop: '40px',\n        marginBottom: '40px'\n      }}>\n        <div style={{ display: 'flex', alignItems: 'center', gap: '18px', marginBottom: '24px' }}>\n          <div style={{\n            background: post.color,\n            borderRadius: '12px',\n            width: '56px',\n            height: '56px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '32px',\n            color: '#fff',\n            boxShadow: '0 2px 8px rgba(0,0,0,0.08)'\n          }}>{post.image}</div>\n          <div>\n            <span style={{\n              background: post.color,\n              color: '#fff',\n              padding: '4px 10px',\n              borderRadius: '12px',\n              fontSize: '12px',\n              fontWeight: '600',\n              textTransform: 'uppercase',\n              letterSpacing: '0.5px',\n              marginRight: '8px'\n            }}>{post.category}</span>\n            <span style={{ color: '#718096', fontSize: '12px', fontWeight: '500' }}>{post.date}</span>\n            <h1 style={{ margin: '8px 0 0 0', color: '#2d3748', fontSize: '2rem', fontWeight: '800' }}>{post.title}</h1>\n          </div>\n        </div>\n        <div style={{ color: '#2d3748', fontSize: '1.1rem', lineHeight: '1.7' }}>\n          {post.content}\n        </div>\n        <div style={{ marginTop: '40px', textAlign: 'center' }}>\n          <Link to=\"/blog\" style={{\n            background: post.color,\n            color: '#fff',\n            padding: '10px 22px',\n            borderRadius: '8px',\n            textDecoration: 'none',\n            fontWeight: '600',\n            fontSize: '1rem',\n            transition: 'all 0.2s',\n            boxShadow: '0 2px 8px rgba(0,0,0,0.08)'\n          }}>← Back to Blog</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BlogPost; ","import React, { useState, useEffect } from 'react';\nimport ModelInfo from '../components/ModelInfo';\n\nconst BlogCreator = () => {\n  const [blogData, setBlogData] = useState({\n    topic: '',\n    restaurantName: '',\n    restaurantType: 'restaurant',\n    cuisine: '',\n    location: '',\n    targetAudience: 'customers',\n    tone: 'professional',\n    length: 'medium',\n    keyPoints: '',\n    specialFeatures: ''\n  });\n  const [generatedBlog, setGeneratedBlog] = useState('');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [error, setError] = useState('');\n  const [modelInfo, setModelInfo] = useState(null);\n  const [apiKey, setApiKey] = useState(() => {\n    return localStorage.getItem('nvidiaApiKey') || '';\n  });\n\n  // Load model information on component mount\n  useEffect(() => {\n    fetchModelInfo();\n  }, []);\n\n  const fetchModelInfo = async () => {\n    try {\n      const res = await fetch('/api/models');\n      const data = await res.json();\n      if (data.success) {\n        const blogModel = data.models.find(m => m.useCase === 'review_generation');\n        setModelInfo(blogModel);\n      }\n    } catch (error) {\n      console.warn('Failed to fetch model info:', error);\n    }\n  };\n\n  const restaurantTypes = [\n    { value: 'restaurant', label: 'Restaurant', icon: '🍽️', color: '#ff6b6b' },\n    { value: 'cafe', label: 'Café', icon: '☕', color: '#8b4513' },\n    { value: 'pizzeria', label: 'Pizzeria', icon: '🍕', color: '#ff8c00' },\n    { value: 'bakery', label: 'Bakery', icon: '🥐', color: '#daa520' },\n    { value: 'bar', label: 'Bar/Pub', icon: '🍺', color: '#ffd700' },\n    { value: 'food-truck', label: 'Food Truck', icon: '🚚', color: '#ff6347' },\n    { value: 'fine-dining', label: 'Fine Dining', icon: '🍷', color: '#800020' },\n    { value: 'fast-casual', label: 'Fast Casual', icon: '🥪', color: '#32cd32' }\n  ];\n\n  const targetAudiences = [\n    { value: 'customers', label: 'General Customers', icon: '👥', color: '#667eea' },\n    { value: 'foodies', label: 'Food Enthusiasts', icon: '🍴', color: '#ff6b6b' },\n    { value: 'families', label: 'Families', icon: '👨‍👩‍👧‍👦', color: '#20c997' },\n    { value: 'business', label: 'Business Professionals', icon: '💼', color: '#4b7bec' },\n    { value: 'tourists', label: 'Tourists/Visitors', icon: '🗺️', color: '#f7b731' },\n    { value: 'locals', label: 'Local Community', icon: '🏘️', color: '#a55eea' }\n  ];\n\n  const tones = [\n    { value: 'professional', label: 'Professional', icon: '👔', color: '#667eea' },\n    { value: 'casual', label: 'Casual & Friendly', icon: '😊', color: '#ffa726' },\n    { value: 'enthusiastic', label: 'Enthusiastic', icon: '🎉', color: '#ff7043' },\n    { value: 'elegant', label: 'Elegant & Sophisticated', icon: '✨', color: '#9c27b0' },\n    { value: 'rustic', label: 'Rustic & Cozy', icon: '🏡', color: '#8d6e63' },\n    { value: 'modern', label: 'Modern & Trendy', icon: '🚀', color: '#00bcd4' }\n  ];\n\n  const lengths = [\n    { value: 'short', label: 'Short (300-500 words)', icon: '📝', color: '#4caf50' },\n    { value: 'medium', label: 'Medium (600-800 words)', icon: '📄', color: '#ff9800' },\n    { value: 'long', label: 'Long (900-1200 words)', icon: '📚', color: '#f44336' }\n  ];\n\n  const handleInputChange = (field, value) => {\n    setBlogData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleApiKeyChange = (newApiKey) => {\n    setApiKey(newApiKey);\n    if (newApiKey.trim()) {\n      localStorage.setItem('nvidiaApiKey', newApiKey);\n    } else {\n      localStorage.removeItem('nvidiaApiKey');\n    }\n  };\n\n  const generateBlogPost = async () => {\n    // Validate input\n    if (!blogData.topic.trim()) {\n      setError('Please enter a blog topic');\n      return;\n    }\n\n    if (!blogData.restaurantName.trim()) {\n      setError('Please enter your restaurant name');\n      return;\n    }\n\n    if (!apiKey.trim()) {\n      setError('Please enter your NVIDIA API key');\n      return;\n    }\n\n    setIsGenerating(true);\n    setError('');\n    setGeneratedBlog('');\n\n    try {\n      const res = await fetch('/api/blog/generate', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          ...blogData,\n          apiKey\n        }),\n      });\n\n      const data = await res.json();\n      if (data.success) {\n        setGeneratedBlog(data.blogPost);\n        \n        // Save to localStorage for history\n        const blogHistory = JSON.parse(localStorage.getItem('blogHistory') || '[]');\n        const newBlog = {\n          id: Date.now(),\n          ...blogData,\n          blogPost: data.blogPost,\n          timestamp: new Date().toISOString()\n        };\n        blogHistory.unshift(newBlog);\n        localStorage.setItem('blogHistory', JSON.stringify(blogHistory.slice(0, 20))); // Keep last 20\n      } else {\n        setError(data.error || 'Failed to generate blog post');\n      }\n    } catch (err) {\n      setError('Network error: ' + err.message);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(generatedBlog);\n    alert('Blog post copied to clipboard!');\n  };\n\n  const resetForm = () => {\n    setBlogData({\n      topic: '',\n      restaurantName: '',\n      restaurantType: 'restaurant',\n      cuisine: '',\n      location: '',\n      targetAudience: 'customers',\n      tone: 'professional',\n      length: 'medium',\n      keyPoints: '',\n      specialFeatures: ''\n    });\n    setGeneratedBlog('');\n    setError('');\n  };\n\n  const getWordCount = () => {\n    if (!generatedBlog) return 0;\n    return generatedBlog.split(/\\s+/).length;\n  };\n\n  return (\n    <div style={{\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n      padding: '20px',\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif'\n    }}>\n      <div style={{\n        maxWidth: 1200,\n        margin: '0 auto',\n        background: 'rgba(255, 255, 255, 0.95)',\n        borderRadius: '24px',\n        boxShadow: '0 20px 60px rgba(0, 0, 0, 0.15)',\n        overflow: 'hidden',\n        backdropFilter: 'blur(10px)'\n      }}>\n        {/* Header */}\n        <div style={{\n          background: 'linear-gradient(135deg, #4f8cff 0%, #38e8ff 100%)',\n          padding: '40px 32px',\n          textAlign: 'center'\n        }}>\n          <span style={{ \n            fontSize: '64px', \n            marginBottom: '16px', \n            display: 'block',\n            filter: 'drop-shadow(0 4px 8px rgba(0,0,0,0.1))'\n          }}>📝</span>\n          <h1 style={{ \n            margin: '0 0 12px 0', \n            fontWeight: '800', \n            fontSize: '36px', \n            color: '#fff',\n            textShadow: '0 2px 4px rgba(0,0,0,0.1)'\n          }}>\n            Restaurant Blog Creator\n          </h1>\n          <p style={{ \n            margin: '0', \n            fontSize: '18px', \n            color: '#fff',\n            opacity: '0.95'\n          }}>\n            Generate engaging blog content for your restaurant business with AI\n          </p>\n        </div>\n\n        {/* Content */}\n        <div style={{ padding: '40px 32px' }}>\n          {/* Model Information */}\n          <ModelInfo \n            useCase=\"review_generation\" \n            style={{ marginBottom: '24px' }}\n          />\n\n          {!generatedBlog ? (\n            <div>\n              {/* API Key Section */}\n              <div style={{\n                background: 'linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%)',\n                borderRadius: '16px',\n                padding: '20px',\n                marginBottom: '24px',\n                border: '1px solid #bae6fd'\n              }}>\n                <label style={{\n                  display: 'block',\n                  marginBottom: '8px',\n                  fontWeight: '600',\n                  color: '#0c4a6e',\n                  fontSize: '16px'\n                }}>\n                  🔑 NVIDIA API Key:\n                </label>\n                <input\n                  type=\"password\"\n                  value={apiKey}\n                  onChange={(e) => handleApiKeyChange(e.target.value)}\n                  placeholder=\"Enter your NVIDIA API key\"\n                  style={{\n                    width: '100%',\n                    padding: '12px 16px',\n                    border: '2px solid #e1e5e9',\n                    borderRadius: '8px',\n                    fontSize: '16px',\n                    marginBottom: '8px'\n                  }}\n                />\n                <small style={{ color: '#0369a1', fontSize: '14px' }}>\n                  Get your API key from{' '}\n                  <a \n                    href=\"https://integrate.api.nvidia.com\" \n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\"\n                    style={{ color: '#0ea5e9', textDecoration: 'none' }}\n                  >\n                    NVIDIA API Portal\n                  </a>\n                </small>\n              </div>\n\n              {/* Blog Configuration Form */}\n              <div style={{\n                display: 'grid',\n                gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\n                gap: '24px',\n                marginBottom: '32px'\n              }}>\n                {/* Basic Information */}\n                <div style={{\n                  background: '#f8f9fa',\n                  borderRadius: '16px',\n                  padding: '24px',\n                  border: '1px solid #e9ecef'\n                }}>\n                  <h3 style={{\n                    margin: '0 0 20px 0',\n                    color: '#2d3748',\n                    fontSize: '20px',\n                    fontWeight: '700'\n                  }}>\n                    📋 Basic Information\n                  </h3>\n                  \n                  <div style={{ marginBottom: '16px' }}>\n                    <label style={{\n                      display: 'block',\n                      marginBottom: '8px',\n                      fontWeight: '600',\n                      color: '#495057'\n                    }}>\n                      Blog Topic *\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={blogData.topic}\n                      onChange={(e) => handleInputChange('topic', e.target.value)}\n                      placeholder=\"e.g., Our New Seasonal Menu, Behind the Scenes, Local Ingredients\"\n                      style={{\n                        width: '100%',\n                        padding: '12px 16px',\n                        border: '2px solid #e1e5e9',\n                        borderRadius: '8px',\n                        fontSize: '16px'\n                      }}\n                    />\n                  </div>\n\n                  <div style={{ marginBottom: '16px' }}>\n                    <label style={{\n                      display: 'block',\n                      marginBottom: '8px',\n                      fontWeight: '600',\n                      color: '#495057'\n                    }}>\n                      Restaurant Name *\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={blogData.restaurantName}\n                      onChange={(e) => handleInputChange('restaurantName', e.target.value)}\n                      placeholder=\"Your restaurant name\"\n                      style={{\n                        width: '100%',\n                        padding: '12px 16px',\n                        border: '2px solid #e1e5e9',\n                        borderRadius: '8px',\n                        fontSize: '16px'\n                      }}\n                    />\n                  </div>\n\n                  <div style={{ marginBottom: '16px' }}>\n                    <label style={{\n                      display: 'block',\n                      marginBottom: '8px',\n                      fontWeight: '600',\n                      color: '#495057'\n                    }}>\n                      Restaurant Type\n                    </label>\n                    <select\n                      value={blogData.restaurantType}\n                      onChange={(e) => handleInputChange('restaurantType', e.target.value)}\n                      style={{\n                        width: '100%',\n                        padding: '12px 16px',\n                        border: '2px solid #e1e5e9',\n                        borderRadius: '8px',\n                        fontSize: '16px'\n                      }}\n                    >\n                      {restaurantTypes.map(type => (\n                        <option key={type.value} value={type.value}>\n                          {type.icon} {type.label}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n\n                  <div style={{ marginBottom: '16px' }}>\n                    <label style={{\n                      display: 'block',\n                      marginBottom: '8px',\n                      fontWeight: '600',\n                      color: '#495057'\n                    }}>\n                      Cuisine Type\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={blogData.cuisine}\n                      onChange={(e) => handleInputChange('cuisine', e.target.value)}\n                      placeholder=\"e.g., Italian, Mexican, Fusion, American\"\n                      style={{\n                        width: '100%',\n                        padding: '12px 16px',\n                        border: '2px solid #e1e5e9',\n                        borderRadius: '8px',\n                        fontSize: '16px'\n                      }}\n                    />\n                  </div>\n\n                  <div style={{ marginBottom: '16px' }}>\n                    <label style={{\n                      display: 'block',\n                      marginBottom: '8px',\n                      fontWeight: '600',\n                      color: '#495057'\n                    }}>\n                      Location\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={blogData.location}\n                      onChange={(e) => handleInputChange('location', e.target.value)}\n                      placeholder=\"e.g., Downtown Seattle, West Village, etc.\"\n                      style={{\n                        width: '100%',\n                        padding: '12px 16px',\n                        border: '2px solid #e1e5e9',\n                        borderRadius: '8px',\n                        fontSize: '16px'\n                      }}\n                    />\n                  </div>\n                </div>\n\n                {/* Content Preferences */}\n                <div style={{\n                  background: '#f8f9fa',\n                  borderRadius: '16px',\n                  padding: '24px',\n                  border: '1px solid #e9ecef'\n                }}>\n                  <h3 style={{\n                    margin: '0 0 20px 0',\n                    color: '#2d3748',\n                    fontSize: '20px',\n                    fontWeight: '700'\n                  }}>\n                    🎯 Content Preferences\n                  </h3>\n\n                  <div style={{ marginBottom: '20px' }}>\n                    <label style={{\n                      display: 'block',\n                      marginBottom: '12px',\n                      fontWeight: '600',\n                      color: '#495057'\n                    }}>\n                      Target Audience\n                    </label>\n                    <div style={{\n                      display: 'grid',\n                      gridTemplateColumns: 'repeat(auto-fit, minmax(140px, 1fr))',\n                      gap: '8px'\n                    }}>\n                      {targetAudiences.map(audience => (\n                        <button\n                          key={audience.value}\n                          type=\"button\"\n                          onClick={() => handleInputChange('targetAudience', audience.value)}\n                          style={{\n                            padding: '8px 12px',\n                            borderRadius: '8px',\n                            border: `2px solid ${blogData.targetAudience === audience.value ? audience.color : '#e1e5e9'}`,\n                            background: blogData.targetAudience === audience.value ? `${audience.color}15` : '#fff',\n                            color: blogData.targetAudience === audience.value ? audience.color : '#495057',\n                            cursor: 'pointer',\n                            fontSize: '14px',\n                            fontWeight: '500',\n                            transition: 'all 0.3s ease'\n                          }}\n                        >\n                          {audience.icon} {audience.label}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div style={{ marginBottom: '20px' }}>\n                    <label style={{\n                      display: 'block',\n                      marginBottom: '12px',\n                      fontWeight: '600',\n                      color: '#495057'\n                    }}>\n                      Writing Tone\n                    </label>\n                    <div style={{\n                      display: 'grid',\n                      gridTemplateColumns: 'repeat(auto-fit, minmax(140px, 1fr))',\n                      gap: '8px'\n                    }}>\n                      {tones.map(tone => (\n                        <button\n                          key={tone.value}\n                          type=\"button\"\n                          onClick={() => handleInputChange('tone', tone.value)}\n                          style={{\n                            padding: '8px 12px',\n                            borderRadius: '8px',\n                            border: `2px solid ${blogData.tone === tone.value ? tone.color : '#e1e5e9'}`,\n                            background: blogData.tone === tone.value ? `${tone.color}15` : '#fff',\n                            color: blogData.tone === tone.value ? tone.color : '#495057',\n                            cursor: 'pointer',\n                            fontSize: '14px',\n                            fontWeight: '500',\n                            transition: 'all 0.3s ease'\n                          }}\n                        >\n                          {tone.icon} {tone.label}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div style={{ marginBottom: '20px' }}>\n                    <label style={{\n                      display: 'block',\n                      marginBottom: '12px',\n                      fontWeight: '600',\n                      color: '#495057'\n                    }}>\n                      Blog Length\n                    </label>\n                    <div style={{\n                      display: 'grid',\n                      gridTemplateColumns: '1fr',\n                      gap: '8px'\n                    }}>\n                      {lengths.map(length => (\n                        <button\n                          key={length.value}\n                          type=\"button\"\n                          onClick={() => handleInputChange('length', length.value)}\n                          style={{\n                            padding: '12px 16px',\n                            borderRadius: '8px',\n                            border: `2px solid ${blogData.length === length.value ? length.color : '#e1e5e9'}`,\n                            background: blogData.length === length.value ? `${length.color}15` : '#fff',\n                            color: blogData.length === length.value ? length.color : '#495057',\n                            cursor: 'pointer',\n                            fontSize: '14px',\n                            fontWeight: '500',\n                            transition: 'all 0.3s ease',\n                            textAlign: 'left'\n                          }}\n                        >\n                          {length.icon} {length.label}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Additional Details */}\n              <div style={{\n                background: '#f8f9fa',\n                borderRadius: '16px',\n                padding: '24px',\n                marginBottom: '32px',\n                border: '1px solid #e9ecef'\n              }}>\n                <h3 style={{\n                  margin: '0 0 20px 0',\n                  color: '#2d3748',\n                  fontSize: '20px',\n                  fontWeight: '700'\n                }}>\n                  📝 Additional Details\n                </h3>\n                \n                <div style={{ marginBottom: '20px' }}>\n                  <label style={{\n                    display: 'block',\n                    marginBottom: '8px',\n                    fontWeight: '600',\n                    color: '#495057'\n                  }}>\n                    Key Points to Include\n                  </label>\n                  <textarea\n                    value={blogData.keyPoints}\n                    onChange={(e) => handleInputChange('keyPoints', e.target.value)}\n                    placeholder=\"List specific points, events, or features you want highlighted in the blog post...\"\n                    rows=\"4\"\n                    style={{\n                      width: '100%',\n                      padding: '12px 16px',\n                      border: '2px solid #e1e5e9',\n                      borderRadius: '8px',\n                      fontSize: '16px',\n                      resize: 'vertical'\n                    }}\n                  />\n                </div>\n\n                <div style={{ marginBottom: '20px' }}>\n                  <label style={{\n                    display: 'block',\n                    marginBottom: '8px',\n                    fontWeight: '600',\n                    color: '#495057'\n                  }}>\n                    Special Features or Highlights\n                  </label>\n                  <textarea\n                    value={blogData.specialFeatures}\n                    onChange={(e) => handleInputChange('specialFeatures', e.target.value)}\n                    placeholder=\"Mention any special features, awards, unique aspects, or recent news about your restaurant...\"\n                    rows=\"4\"\n                    style={{\n                      width: '100%',\n                      padding: '12px 16px',\n                      border: '2px solid #e1e5e9',\n                      borderRadius: '8px',\n                      fontSize: '16px',\n                      resize: 'vertical'\n                    }}\n                  />\n                </div>\n              </div>\n\n              {/* Generate Button */}\n              <div style={{ textAlign: 'center' }}>\n                <button\n                  onClick={generateBlogPost}\n                  disabled={isGenerating || !blogData.topic.trim() || !blogData.restaurantName.trim() || !apiKey.trim()}\n                  style={{\n                    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                    color: '#fff',\n                    border: 'none',\n                    borderRadius: '12px',\n                    padding: '16px 32px',\n                    fontWeight: '700',\n                    fontSize: '18px',\n                    cursor: 'pointer',\n                    boxShadow: '0 4px 16px rgba(102, 126, 234, 0.3)',\n                    transition: 'all 0.3s ease',\n                    opacity: isGenerating || !blogData.topic.trim() || !blogData.restaurantName.trim() || !apiKey.trim() ? 0.6 : 1\n                  }}\n                >\n                  {isGenerating ? (\n                    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: '12px' }}>\n                      <div style={{\n                        width: '20px',\n                        height: '20px',\n                        border: '2px solid rgba(255,255,255,0.3)',\n                        borderTop: '2px solid #fff',\n                        borderRadius: '50%',\n                        animation: 'spin 1s linear infinite'\n                      }}></div>\n                      Generating Blog Post...\n                    </div>\n                  ) : (\n                    '🚀 Generate Blog Post'\n                  )}\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div>\n              {/* Generated Blog Post */}\n              <div style={{\n                background: '#f8f9fa',\n                borderRadius: '16px',\n                padding: '24px',\n                marginBottom: '24px',\n                border: '1px solid #e9ecef'\n              }}>\n                <div style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  marginBottom: '20px'\n                }}>\n                  <h3 style={{\n                    margin: 0,\n                    color: '#2d3748',\n                    fontSize: '24px',\n                    fontWeight: '700'\n                  }}>\n                    ✨ Your Generated Blog Post\n                  </h3>\n                  <div style={{\n                    display: 'flex',\n                    gap: '12px'\n                  }}>\n                    <button\n                      onClick={copyToClipboard}\n                      style={{\n                        background: '#28a745',\n                        color: '#fff',\n                        border: 'none',\n                        borderRadius: '8px',\n                        padding: '8px 16px',\n                        fontWeight: '600',\n                        cursor: 'pointer',\n                        fontSize: '14px'\n                      }}\n                    >\n                      📋 Copy\n                    </button>\n                    <button\n                      onClick={resetForm}\n                      style={{\n                        background: '#6c757d',\n                        color: '#fff',\n                        border: 'none',\n                        borderRadius: '8px',\n                        padding: '8px 16px',\n                        fontWeight: '600',\n                        cursor: 'pointer',\n                        fontSize: '14px'\n                      }}\n                    >\n                      🔄 New Post\n                    </button>\n                  </div>\n                </div>\n\n                <div style={{\n                  background: '#fff',\n                  borderRadius: '12px',\n                  padding: '24px',\n                  border: '1px solid #e9ecef',\n                  marginBottom: '16px'\n                }}>\n                  <div style={{\n                    color: '#2d3748',\n                    fontSize: '16px',\n                    lineHeight: '1.7',\n                    whiteSpace: 'pre-wrap'\n                  }}>\n                    {generatedBlog}\n                  </div>\n                </div>\n\n                <div style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  padding: '16px',\n                  background: '#e9ecef',\n                  borderRadius: '8px',\n                  fontSize: '14px',\n                  color: '#6c757d'\n                }}>\n                  <span>📊 Word Count: {getWordCount()} words</span>\n                  <span>📅 Generated: {new Date().toLocaleString()}</span>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Error Display */}\n          {error && (\n            <div style={{\n              background: 'linear-gradient(135deg, #fed7d7 0%, #feb2b2 100%)',\n              border: '1px solid #fc8181',\n              borderRadius: '12px',\n              padding: '16px',\n              color: '#c53030',\n              fontWeight: '600',\n              textAlign: 'center',\n              marginTop: '24px'\n            }}>\n              ⚠️ {error}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <style jsx>{`\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default BlogCreator; ","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport HomeScreen from './screens/HomeScreen';\nimport ReviewGenerator from './screens/ReviewGenerator';\nimport VoiceReview from './screens/VoiceReview';\nimport VoiceTest from './screens/VoiceTest';\nimport ReviewHistory from './screens/ReviewHistory';\nimport Llma from './components/Llma';\nimport Header from './components/Header';\nimport CustomerServiceResponse from './screens/CustomerServiceResponse';\nimport ModelsInfo from './screens/ModelsInfo';\nimport BlogIndex from './screens/BlogIndex';\nimport BlogPost from './screens/BlogPost';\nimport BlogCreator from './screens/BlogCreator';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={HomeScreen} />\n          <Route path=\"/generate\" component={ReviewGenerator} />\n          <Route path=\"/voice\" component={VoiceReview} />\n          <Route path=\"/voice-test\" component={VoiceTest} />\n          <Route path=\"/history\" component={ReviewHistory} />\n          <Route path=\"/llama\" component={Llma} />\n          <Route path=\"/customer-service-response\" component={CustomerServiceResponse} />\n          <Route path=\"/models\" component={ModelsInfo} />\n          <Route path=\"/blog\" exact component={BlogIndex} />\n          <Route path=\"/blog/:slug\" component={BlogPost} />\n          <Route path=\"/blog-creator\" component={BlogCreator} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}